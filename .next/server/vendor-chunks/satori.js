"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/satori";
exports.ids = ["vendor-chunks/satori"];
exports.modules = {

/***/ "(rsc)/./node_modules/satori/dist/index.wasm.js":
/*!************************************************!*\
  !*** ./node_modules/satori/dist/index.wasm.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wl),\n/* harmony export */   init: () => (/* binding */ Rl)\n/* harmony export */ });\n/* harmony import */ var linebreak__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! linebreak */ \"(rsc)/./node_modules/linebreak/dist/module.mjs\");\n/* harmony import */ var css_to_react_native__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! css-to-react-native */ \"(rsc)/./node_modules/css-to-react-native/index.js\");\n/* harmony import */ var css_background_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! css-background-parser */ \"(rsc)/./node_modules/css-background-parser/index.js\");\n/* harmony import */ var css_box_shadow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! css-box-shadow */ \"(rsc)/./node_modules/css-box-shadow/index.js\");\n/* harmony import */ var parse_css_color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! parse-css-color */ \"(rsc)/./node_modules/parse-css-color/dist/index.esm.js\");\n/* harmony import */ var postcss_value_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! postcss-value-parser */ \"(rsc)/./node_modules/postcss-value-parser/lib/index.js\");\n/* harmony import */ var escape_html__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! escape-html */ \"(rsc)/./node_modules/escape-html/index.js\");\n/* harmony import */ var _shuding_opentype_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shuding/opentype.js */ \"(rsc)/./node_modules/@shuding/opentype.js/dist/opentype.module.js\");\nvar kl = Object.create;\nvar Pr = Object.defineProperty;\nvar Tl = Object.getOwnPropertyDescriptor;\nvar Al = Object.getOwnPropertyNames;\nvar Ol = Object.getPrototypeOf, Pl = Object.prototype.hasOwnProperty;\nvar vn = (e, t)=>()=>(e && (t = e(e = 0)), t);\nvar T = (e, t)=>()=>(t || e((t = {\n            exports: {}\n        }).exports, t), t.exports), yn = (e, t)=>{\n    for(var n in t)Pr(e, n, {\n        get: t[n],\n        enumerable: !0\n    });\n}, Go = (e, t, n, r)=>{\n    if (t && typeof t == \"object\" || typeof t == \"function\") for (let i of Al(t))!Pl.call(e, i) && i !== n && Pr(e, i, {\n        get: ()=>t[i],\n        enumerable: !(r = Tl(t, i)) || r.enumerable\n    });\n    return e;\n};\nvar Bl = (e, t, n)=>(n = e != null ? kl(Ol(e)) : {}, Go(t || !e || !e.__esModule ? Pr(n, \"default\", {\n        value: e,\n        enumerable: !0\n    }) : n, e)), Br = (e)=>Go(Pr({}, \"__esModule\", {\n        value: !0\n    }), e);\nvar jo = {};\nyn(jo, {\n    getYogaModule: ()=>Il\n});\nasync function Il() {\n    return {};\n}\nvar Ho = vn(()=>{});\nvar Xn = T((Yn)=>{\n    \"use strict\";\n    Object.defineProperty(Yn, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(Yn, \"default\", {\n        enumerable: !0,\n        get: ()=>zf\n    });\n    function zf(e) {\n        if (e = `${e}`, e === \"0\") return \"0\";\n        if (/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(e)) return e.replace(/^[+-]?/, (t)=>t === \"-\" ? \"\" : \"-\");\n        if (e.includes(\"var(\") || e.includes(\"calc(\")) return `calc(${e} * -1)`;\n    }\n});\nvar zu = T((Qn)=>{\n    \"use strict\";\n    Object.defineProperty(Qn, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(Qn, \"default\", {\n        enumerable: !0,\n        get: ()=>Uf\n    });\n    var Uf = [\n        \"preflight\",\n        \"container\",\n        \"accessibility\",\n        \"pointerEvents\",\n        \"visibility\",\n        \"position\",\n        \"inset\",\n        \"isolation\",\n        \"zIndex\",\n        \"order\",\n        \"gridColumn\",\n        \"gridColumnStart\",\n        \"gridColumnEnd\",\n        \"gridRow\",\n        \"gridRowStart\",\n        \"gridRowEnd\",\n        \"float\",\n        \"clear\",\n        \"margin\",\n        \"boxSizing\",\n        \"display\",\n        \"aspectRatio\",\n        \"height\",\n        \"maxHeight\",\n        \"minHeight\",\n        \"width\",\n        \"minWidth\",\n        \"maxWidth\",\n        \"flex\",\n        \"flexShrink\",\n        \"flexGrow\",\n        \"flexBasis\",\n        \"tableLayout\",\n        \"borderCollapse\",\n        \"borderSpacing\",\n        \"transformOrigin\",\n        \"translate\",\n        \"rotate\",\n        \"skew\",\n        \"scale\",\n        \"transform\",\n        \"animation\",\n        \"cursor\",\n        \"touchAction\",\n        \"userSelect\",\n        \"resize\",\n        \"scrollSnapType\",\n        \"scrollSnapAlign\",\n        \"scrollSnapStop\",\n        \"scrollMargin\",\n        \"scrollPadding\",\n        \"listStylePosition\",\n        \"listStyleType\",\n        \"appearance\",\n        \"columns\",\n        \"breakBefore\",\n        \"breakInside\",\n        \"breakAfter\",\n        \"gridAutoColumns\",\n        \"gridAutoFlow\",\n        \"gridAutoRows\",\n        \"gridTemplateColumns\",\n        \"gridTemplateRows\",\n        \"flexDirection\",\n        \"flexWrap\",\n        \"placeContent\",\n        \"placeItems\",\n        \"alignContent\",\n        \"alignItems\",\n        \"justifyContent\",\n        \"justifyItems\",\n        \"gap\",\n        \"space\",\n        \"divideWidth\",\n        \"divideStyle\",\n        \"divideColor\",\n        \"divideOpacity\",\n        \"placeSelf\",\n        \"alignSelf\",\n        \"justifySelf\",\n        \"overflow\",\n        \"overscrollBehavior\",\n        \"scrollBehavior\",\n        \"textOverflow\",\n        \"whitespace\",\n        \"wordBreak\",\n        \"borderRadius\",\n        \"borderWidth\",\n        \"borderStyle\",\n        \"borderColor\",\n        \"borderOpacity\",\n        \"backgroundColor\",\n        \"backgroundOpacity\",\n        \"backgroundImage\",\n        \"gradientColorStops\",\n        \"boxDecorationBreak\",\n        \"backgroundSize\",\n        \"backgroundAttachment\",\n        \"backgroundClip\",\n        \"backgroundPosition\",\n        \"backgroundRepeat\",\n        \"backgroundOrigin\",\n        \"fill\",\n        \"stroke\",\n        \"strokeWidth\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"padding\",\n        \"textAlign\",\n        \"textIndent\",\n        \"verticalAlign\",\n        \"fontFamily\",\n        \"fontSize\",\n        \"fontWeight\",\n        \"textTransform\",\n        \"fontStyle\",\n        \"fontVariantNumeric\",\n        \"lineHeight\",\n        \"letterSpacing\",\n        \"textColor\",\n        \"textOpacity\",\n        \"textDecoration\",\n        \"textDecorationColor\",\n        \"textDecorationStyle\",\n        \"textDecorationThickness\",\n        \"textUnderlineOffset\",\n        \"fontSmoothing\",\n        \"placeholderColor\",\n        \"placeholderOpacity\",\n        \"caretColor\",\n        \"accentColor\",\n        \"opacity\",\n        \"backgroundBlendMode\",\n        \"mixBlendMode\",\n        \"boxShadow\",\n        \"boxShadowColor\",\n        \"outlineStyle\",\n        \"outlineWidth\",\n        \"outlineOffset\",\n        \"outlineColor\",\n        \"ringWidth\",\n        \"ringColor\",\n        \"ringOpacity\",\n        \"ringOffsetWidth\",\n        \"ringOffsetColor\",\n        \"blur\",\n        \"brightness\",\n        \"contrast\",\n        \"dropShadow\",\n        \"grayscale\",\n        \"hueRotate\",\n        \"invert\",\n        \"saturate\",\n        \"sepia\",\n        \"filter\",\n        \"backdropBlur\",\n        \"backdropBrightness\",\n        \"backdropContrast\",\n        \"backdropGrayscale\",\n        \"backdropHueRotate\",\n        \"backdropInvert\",\n        \"backdropOpacity\",\n        \"backdropSaturate\",\n        \"backdropSepia\",\n        \"backdropFilter\",\n        \"transitionProperty\",\n        \"transitionDelay\",\n        \"transitionDuration\",\n        \"transitionTimingFunction\",\n        \"willChange\",\n        \"content\"\n    ];\n});\nvar Uu = T((Kn)=>{\n    \"use strict\";\n    Object.defineProperty(Kn, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(Kn, \"default\", {\n        enumerable: !0,\n        get: ()=>Gf\n    });\n    function Gf(e, t) {\n        return e === void 0 ? t : Array.isArray(e) ? e : [\n            ...new Set(t.filter((r)=>e !== !1 && e[r] !== !1).concat(Object.keys(e).filter((r)=>e[r] !== !1)))\n        ];\n    }\n});\nvar Jn = T((sb, Gu)=>{\n    Gu.exports = {\n        content: [],\n        presets: [],\n        darkMode: \"media\",\n        theme: {\n            screens: {\n                sm: \"640px\",\n                md: \"768px\",\n                lg: \"1024px\",\n                xl: \"1280px\",\n                \"2xl\": \"1536px\"\n            },\n            colors: ({ colors: e })=>({\n                    inherit: e.inherit,\n                    current: e.current,\n                    transparent: e.transparent,\n                    black: e.black,\n                    white: e.white,\n                    slate: e.slate,\n                    gray: e.gray,\n                    zinc: e.zinc,\n                    neutral: e.neutral,\n                    stone: e.stone,\n                    red: e.red,\n                    orange: e.orange,\n                    amber: e.amber,\n                    yellow: e.yellow,\n                    lime: e.lime,\n                    green: e.green,\n                    emerald: e.emerald,\n                    teal: e.teal,\n                    cyan: e.cyan,\n                    sky: e.sky,\n                    blue: e.blue,\n                    indigo: e.indigo,\n                    violet: e.violet,\n                    purple: e.purple,\n                    fuchsia: e.fuchsia,\n                    pink: e.pink,\n                    rose: e.rose\n                }),\n            columns: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\",\n                \"3xs\": \"16rem\",\n                \"2xs\": \"18rem\",\n                xs: \"20rem\",\n                sm: \"24rem\",\n                md: \"28rem\",\n                lg: \"32rem\",\n                xl: \"36rem\",\n                \"2xl\": \"42rem\",\n                \"3xl\": \"48rem\",\n                \"4xl\": \"56rem\",\n                \"5xl\": \"64rem\",\n                \"6xl\": \"72rem\",\n                \"7xl\": \"80rem\"\n            },\n            spacing: {\n                px: \"1px\",\n                0: \"0px\",\n                .5: \"0.125rem\",\n                1: \"0.25rem\",\n                1.5: \"0.375rem\",\n                2: \"0.5rem\",\n                2.5: \"0.625rem\",\n                3: \"0.75rem\",\n                3.5: \"0.875rem\",\n                4: \"1rem\",\n                5: \"1.25rem\",\n                6: \"1.5rem\",\n                7: \"1.75rem\",\n                8: \"2rem\",\n                9: \"2.25rem\",\n                10: \"2.5rem\",\n                11: \"2.75rem\",\n                12: \"3rem\",\n                14: \"3.5rem\",\n                16: \"4rem\",\n                20: \"5rem\",\n                24: \"6rem\",\n                28: \"7rem\",\n                32: \"8rem\",\n                36: \"9rem\",\n                40: \"10rem\",\n                44: \"11rem\",\n                48: \"12rem\",\n                52: \"13rem\",\n                56: \"14rem\",\n                60: \"15rem\",\n                64: \"16rem\",\n                72: \"18rem\",\n                80: \"20rem\",\n                96: \"24rem\"\n            },\n            animation: {\n                none: \"none\",\n                spin: \"spin 1s linear infinite\",\n                ping: \"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite\",\n                pulse: \"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n                bounce: \"bounce 1s infinite\"\n            },\n            aspectRatio: {\n                auto: \"auto\",\n                square: \"1 / 1\",\n                video: \"16 / 9\"\n            },\n            backdropBlur: ({ theme: e })=>e(\"blur\"),\n            backdropBrightness: ({ theme: e })=>e(\"brightness\"),\n            backdropContrast: ({ theme: e })=>e(\"contrast\"),\n            backdropGrayscale: ({ theme: e })=>e(\"grayscale\"),\n            backdropHueRotate: ({ theme: e })=>e(\"hueRotate\"),\n            backdropInvert: ({ theme: e })=>e(\"invert\"),\n            backdropOpacity: ({ theme: e })=>e(\"opacity\"),\n            backdropSaturate: ({ theme: e })=>e(\"saturate\"),\n            backdropSepia: ({ theme: e })=>e(\"sepia\"),\n            backgroundColor: ({ theme: e })=>e(\"colors\"),\n            backgroundImage: {\n                none: \"none\",\n                \"gradient-to-t\": \"linear-gradient(to top, var(--tw-gradient-stops))\",\n                \"gradient-to-tr\": \"linear-gradient(to top right, var(--tw-gradient-stops))\",\n                \"gradient-to-r\": \"linear-gradient(to right, var(--tw-gradient-stops))\",\n                \"gradient-to-br\": \"linear-gradient(to bottom right, var(--tw-gradient-stops))\",\n                \"gradient-to-b\": \"linear-gradient(to bottom, var(--tw-gradient-stops))\",\n                \"gradient-to-bl\": \"linear-gradient(to bottom left, var(--tw-gradient-stops))\",\n                \"gradient-to-l\": \"linear-gradient(to left, var(--tw-gradient-stops))\",\n                \"gradient-to-tl\": \"linear-gradient(to top left, var(--tw-gradient-stops))\"\n            },\n            backgroundOpacity: ({ theme: e })=>e(\"opacity\"),\n            backgroundPosition: {\n                bottom: \"bottom\",\n                center: \"center\",\n                left: \"left\",\n                \"left-bottom\": \"left bottom\",\n                \"left-top\": \"left top\",\n                right: \"right\",\n                \"right-bottom\": \"right bottom\",\n                \"right-top\": \"right top\",\n                top: \"top\"\n            },\n            backgroundSize: {\n                auto: \"auto\",\n                cover: \"cover\",\n                contain: \"contain\"\n            },\n            blur: {\n                0: \"0\",\n                none: \"0\",\n                sm: \"4px\",\n                DEFAULT: \"8px\",\n                md: \"12px\",\n                lg: \"16px\",\n                xl: \"24px\",\n                \"2xl\": \"40px\",\n                \"3xl\": \"64px\"\n            },\n            brightness: {\n                0: \"0\",\n                50: \".5\",\n                75: \".75\",\n                90: \".9\",\n                95: \".95\",\n                100: \"1\",\n                105: \"1.05\",\n                110: \"1.1\",\n                125: \"1.25\",\n                150: \"1.5\",\n                200: \"2\"\n            },\n            borderColor: ({ theme: e })=>({\n                    ...e(\"colors\"),\n                    DEFAULT: e(\"colors.gray.200\", \"currentColor\")\n                }),\n            borderOpacity: ({ theme: e })=>e(\"opacity\"),\n            borderRadius: {\n                none: \"0px\",\n                sm: \"0.125rem\",\n                DEFAULT: \"0.25rem\",\n                md: \"0.375rem\",\n                lg: \"0.5rem\",\n                xl: \"0.75rem\",\n                \"2xl\": \"1rem\",\n                \"3xl\": \"1.5rem\",\n                full: \"9999px\"\n            },\n            borderSpacing: ({ theme: e })=>({\n                    ...e(\"spacing\")\n                }),\n            borderWidth: {\n                DEFAULT: \"1px\",\n                0: \"0px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            boxShadow: {\n                sm: \"0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n                DEFAULT: \"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",\n                md: \"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",\n                lg: \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                xl: \"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\",\n                \"2xl\": \"0 25px 50px -12px rgb(0 0 0 / 0.25)\",\n                inner: \"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\",\n                none: \"none\"\n            },\n            boxShadowColor: ({ theme: e })=>e(\"colors\"),\n            caretColor: ({ theme: e })=>e(\"colors\"),\n            accentColor: ({ theme: e })=>({\n                    ...e(\"colors\"),\n                    auto: \"auto\"\n                }),\n            contrast: {\n                0: \"0\",\n                50: \".5\",\n                75: \".75\",\n                100: \"1\",\n                125: \"1.25\",\n                150: \"1.5\",\n                200: \"2\"\n            },\n            container: {},\n            content: {\n                none: \"none\"\n            },\n            cursor: {\n                auto: \"auto\",\n                default: \"default\",\n                pointer: \"pointer\",\n                wait: \"wait\",\n                text: \"text\",\n                move: \"move\",\n                help: \"help\",\n                \"not-allowed\": \"not-allowed\",\n                none: \"none\",\n                \"context-menu\": \"context-menu\",\n                progress: \"progress\",\n                cell: \"cell\",\n                crosshair: \"crosshair\",\n                \"vertical-text\": \"vertical-text\",\n                alias: \"alias\",\n                copy: \"copy\",\n                \"no-drop\": \"no-drop\",\n                grab: \"grab\",\n                grabbing: \"grabbing\",\n                \"all-scroll\": \"all-scroll\",\n                \"col-resize\": \"col-resize\",\n                \"row-resize\": \"row-resize\",\n                \"n-resize\": \"n-resize\",\n                \"e-resize\": \"e-resize\",\n                \"s-resize\": \"s-resize\",\n                \"w-resize\": \"w-resize\",\n                \"ne-resize\": \"ne-resize\",\n                \"nw-resize\": \"nw-resize\",\n                \"se-resize\": \"se-resize\",\n                \"sw-resize\": \"sw-resize\",\n                \"ew-resize\": \"ew-resize\",\n                \"ns-resize\": \"ns-resize\",\n                \"nesw-resize\": \"nesw-resize\",\n                \"nwse-resize\": \"nwse-resize\",\n                \"zoom-in\": \"zoom-in\",\n                \"zoom-out\": \"zoom-out\"\n            },\n            divideColor: ({ theme: e })=>e(\"borderColor\"),\n            divideOpacity: ({ theme: e })=>e(\"borderOpacity\"),\n            divideWidth: ({ theme: e })=>e(\"borderWidth\"),\n            dropShadow: {\n                sm: \"0 1px 1px rgb(0 0 0 / 0.05)\",\n                DEFAULT: [\n                    \"0 1px 2px rgb(0 0 0 / 0.1)\",\n                    \"0 1px 1px rgb(0 0 0 / 0.06)\"\n                ],\n                md: [\n                    \"0 4px 3px rgb(0 0 0 / 0.07)\",\n                    \"0 2px 2px rgb(0 0 0 / 0.06)\"\n                ],\n                lg: [\n                    \"0 10px 8px rgb(0 0 0 / 0.04)\",\n                    \"0 4px 3px rgb(0 0 0 / 0.1)\"\n                ],\n                xl: [\n                    \"0 20px 13px rgb(0 0 0 / 0.03)\",\n                    \"0 8px 5px rgb(0 0 0 / 0.08)\"\n                ],\n                \"2xl\": \"0 25px 25px rgb(0 0 0 / 0.15)\",\n                none: \"0 0 #0000\"\n            },\n            fill: ({ theme: e })=>e(\"colors\"),\n            grayscale: {\n                0: \"0\",\n                DEFAULT: \"100%\"\n            },\n            hueRotate: {\n                0: \"0deg\",\n                15: \"15deg\",\n                30: \"30deg\",\n                60: \"60deg\",\n                90: \"90deg\",\n                180: \"180deg\"\n            },\n            invert: {\n                0: \"0\",\n                DEFAULT: \"100%\"\n            },\n            flex: {\n                1: \"1 1 0%\",\n                auto: \"1 1 auto\",\n                initial: \"0 1 auto\",\n                none: \"none\"\n            },\n            flexBasis: ({ theme: e })=>({\n                    auto: \"auto\",\n                    ...e(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    \"1/5\": \"20%\",\n                    \"2/5\": \"40%\",\n                    \"3/5\": \"60%\",\n                    \"4/5\": \"80%\",\n                    \"1/6\": \"16.666667%\",\n                    \"2/6\": \"33.333333%\",\n                    \"3/6\": \"50%\",\n                    \"4/6\": \"66.666667%\",\n                    \"5/6\": \"83.333333%\",\n                    \"1/12\": \"8.333333%\",\n                    \"2/12\": \"16.666667%\",\n                    \"3/12\": \"25%\",\n                    \"4/12\": \"33.333333%\",\n                    \"5/12\": \"41.666667%\",\n                    \"6/12\": \"50%\",\n                    \"7/12\": \"58.333333%\",\n                    \"8/12\": \"66.666667%\",\n                    \"9/12\": \"75%\",\n                    \"10/12\": \"83.333333%\",\n                    \"11/12\": \"91.666667%\",\n                    full: \"100%\"\n                }),\n            flexGrow: {\n                0: \"0\",\n                DEFAULT: \"1\"\n            },\n            flexShrink: {\n                0: \"0\",\n                DEFAULT: \"1\"\n            },\n            fontFamily: {\n                sans: [\n                    \"ui-sans-serif\",\n                    \"system-ui\",\n                    \"-apple-system\",\n                    \"BlinkMacSystemFont\",\n                    '\"Segoe UI\"',\n                    \"Roboto\",\n                    '\"Helvetica Neue\"',\n                    \"Arial\",\n                    '\"Noto Sans\"',\n                    \"sans-serif\",\n                    '\"Apple Color Emoji\"',\n                    '\"Segoe UI Emoji\"',\n                    '\"Segoe UI Symbol\"',\n                    '\"Noto Color Emoji\"'\n                ],\n                serif: [\n                    \"ui-serif\",\n                    \"Georgia\",\n                    \"Cambria\",\n                    '\"Times New Roman\"',\n                    \"Times\",\n                    \"serif\"\n                ],\n                mono: [\n                    \"ui-monospace\",\n                    \"SFMono-Regular\",\n                    \"Menlo\",\n                    \"Monaco\",\n                    \"Consolas\",\n                    '\"Liberation Mono\"',\n                    '\"Courier New\"',\n                    \"monospace\"\n                ]\n            },\n            fontSize: {\n                xs: [\n                    \"0.75rem\",\n                    {\n                        lineHeight: \"1rem\"\n                    }\n                ],\n                sm: [\n                    \"0.875rem\",\n                    {\n                        lineHeight: \"1.25rem\"\n                    }\n                ],\n                base: [\n                    \"1rem\",\n                    {\n                        lineHeight: \"1.5rem\"\n                    }\n                ],\n                lg: [\n                    \"1.125rem\",\n                    {\n                        lineHeight: \"1.75rem\"\n                    }\n                ],\n                xl: [\n                    \"1.25rem\",\n                    {\n                        lineHeight: \"1.75rem\"\n                    }\n                ],\n                \"2xl\": [\n                    \"1.5rem\",\n                    {\n                        lineHeight: \"2rem\"\n                    }\n                ],\n                \"3xl\": [\n                    \"1.875rem\",\n                    {\n                        lineHeight: \"2.25rem\"\n                    }\n                ],\n                \"4xl\": [\n                    \"2.25rem\",\n                    {\n                        lineHeight: \"2.5rem\"\n                    }\n                ],\n                \"5xl\": [\n                    \"3rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"6xl\": [\n                    \"3.75rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"7xl\": [\n                    \"4.5rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"8xl\": [\n                    \"6rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"9xl\": [\n                    \"8rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ]\n            },\n            fontWeight: {\n                thin: \"100\",\n                extralight: \"200\",\n                light: \"300\",\n                normal: \"400\",\n                medium: \"500\",\n                semibold: \"600\",\n                bold: \"700\",\n                extrabold: \"800\",\n                black: \"900\"\n            },\n            gap: ({ theme: e })=>e(\"spacing\"),\n            gradientColorStops: ({ theme: e })=>e(\"colors\"),\n            gridAutoColumns: {\n                auto: \"auto\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fr: \"minmax(0, 1fr)\"\n            },\n            gridAutoRows: {\n                auto: \"auto\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fr: \"minmax(0, 1fr)\"\n            },\n            gridColumn: {\n                auto: \"auto\",\n                \"span-1\": \"span 1 / span 1\",\n                \"span-2\": \"span 2 / span 2\",\n                \"span-3\": \"span 3 / span 3\",\n                \"span-4\": \"span 4 / span 4\",\n                \"span-5\": \"span 5 / span 5\",\n                \"span-6\": \"span 6 / span 6\",\n                \"span-7\": \"span 7 / span 7\",\n                \"span-8\": \"span 8 / span 8\",\n                \"span-9\": \"span 9 / span 9\",\n                \"span-10\": \"span 10 / span 10\",\n                \"span-11\": \"span 11 / span 11\",\n                \"span-12\": \"span 12 / span 12\",\n                \"span-full\": \"1 / -1\"\n            },\n            gridColumnEnd: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\",\n                13: \"13\"\n            },\n            gridColumnStart: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\",\n                13: \"13\"\n            },\n            gridRow: {\n                auto: \"auto\",\n                \"span-1\": \"span 1 / span 1\",\n                \"span-2\": \"span 2 / span 2\",\n                \"span-3\": \"span 3 / span 3\",\n                \"span-4\": \"span 4 / span 4\",\n                \"span-5\": \"span 5 / span 5\",\n                \"span-6\": \"span 6 / span 6\",\n                \"span-full\": \"1 / -1\"\n            },\n            gridRowStart: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\"\n            },\n            gridRowEnd: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\"\n            },\n            gridTemplateColumns: {\n                none: \"none\",\n                1: \"repeat(1, minmax(0, 1fr))\",\n                2: \"repeat(2, minmax(0, 1fr))\",\n                3: \"repeat(3, minmax(0, 1fr))\",\n                4: \"repeat(4, minmax(0, 1fr))\",\n                5: \"repeat(5, minmax(0, 1fr))\",\n                6: \"repeat(6, minmax(0, 1fr))\",\n                7: \"repeat(7, minmax(0, 1fr))\",\n                8: \"repeat(8, minmax(0, 1fr))\",\n                9: \"repeat(9, minmax(0, 1fr))\",\n                10: \"repeat(10, minmax(0, 1fr))\",\n                11: \"repeat(11, minmax(0, 1fr))\",\n                12: \"repeat(12, minmax(0, 1fr))\"\n            },\n            gridTemplateRows: {\n                none: \"none\",\n                1: \"repeat(1, minmax(0, 1fr))\",\n                2: \"repeat(2, minmax(0, 1fr))\",\n                3: \"repeat(3, minmax(0, 1fr))\",\n                4: \"repeat(4, minmax(0, 1fr))\",\n                5: \"repeat(5, minmax(0, 1fr))\",\n                6: \"repeat(6, minmax(0, 1fr))\"\n            },\n            height: ({ theme: e })=>({\n                    auto: \"auto\",\n                    ...e(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    \"1/5\": \"20%\",\n                    \"2/5\": \"40%\",\n                    \"3/5\": \"60%\",\n                    \"4/5\": \"80%\",\n                    \"1/6\": \"16.666667%\",\n                    \"2/6\": \"33.333333%\",\n                    \"3/6\": \"50%\",\n                    \"4/6\": \"66.666667%\",\n                    \"5/6\": \"83.333333%\",\n                    full: \"100%\",\n                    screen: \"100vh\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\"\n                }),\n            inset: ({ theme: e })=>({\n                    auto: \"auto\",\n                    ...e(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    full: \"100%\"\n                }),\n            keyframes: {\n                spin: {\n                    to: {\n                        transform: \"rotate(360deg)\"\n                    }\n                },\n                ping: {\n                    \"75%, 100%\": {\n                        transform: \"scale(2)\",\n                        opacity: \"0\"\n                    }\n                },\n                pulse: {\n                    \"50%\": {\n                        opacity: \".5\"\n                    }\n                },\n                bounce: {\n                    \"0%, 100%\": {\n                        transform: \"translateY(-25%)\",\n                        animationTimingFunction: \"cubic-bezier(0.8,0,1,1)\"\n                    },\n                    \"50%\": {\n                        transform: \"none\",\n                        animationTimingFunction: \"cubic-bezier(0,0,0.2,1)\"\n                    }\n                }\n            },\n            letterSpacing: {\n                tighter: \"-0.05em\",\n                tight: \"-0.025em\",\n                normal: \"0em\",\n                wide: \"0.025em\",\n                wider: \"0.05em\",\n                widest: \"0.1em\"\n            },\n            lineHeight: {\n                none: \"1\",\n                tight: \"1.25\",\n                snug: \"1.375\",\n                normal: \"1.5\",\n                relaxed: \"1.625\",\n                loose: \"2\",\n                3: \".75rem\",\n                4: \"1rem\",\n                5: \"1.25rem\",\n                6: \"1.5rem\",\n                7: \"1.75rem\",\n                8: \"2rem\",\n                9: \"2.25rem\",\n                10: \"2.5rem\"\n            },\n            listStyleType: {\n                none: \"none\",\n                disc: \"disc\",\n                decimal: \"decimal\"\n            },\n            margin: ({ theme: e })=>({\n                    auto: \"auto\",\n                    ...e(\"spacing\")\n                }),\n            maxHeight: ({ theme: e })=>({\n                    ...e(\"spacing\"),\n                    full: \"100%\",\n                    screen: \"100vh\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\"\n                }),\n            maxWidth: ({ theme: e, breakpoints: t })=>({\n                    none: \"none\",\n                    0: \"0rem\",\n                    xs: \"20rem\",\n                    sm: \"24rem\",\n                    md: \"28rem\",\n                    lg: \"32rem\",\n                    xl: \"36rem\",\n                    \"2xl\": \"42rem\",\n                    \"3xl\": \"48rem\",\n                    \"4xl\": \"56rem\",\n                    \"5xl\": \"64rem\",\n                    \"6xl\": \"72rem\",\n                    \"7xl\": \"80rem\",\n                    full: \"100%\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\",\n                    prose: \"65ch\",\n                    ...t(e(\"screens\"))\n                }),\n            minHeight: {\n                0: \"0px\",\n                full: \"100%\",\n                screen: \"100vh\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fit: \"fit-content\"\n            },\n            minWidth: {\n                0: \"0px\",\n                full: \"100%\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fit: \"fit-content\"\n            },\n            objectPosition: {\n                bottom: \"bottom\",\n                center: \"center\",\n                left: \"left\",\n                \"left-bottom\": \"left bottom\",\n                \"left-top\": \"left top\",\n                right: \"right\",\n                \"right-bottom\": \"right bottom\",\n                \"right-top\": \"right top\",\n                top: \"top\"\n            },\n            opacity: {\n                0: \"0\",\n                5: \"0.05\",\n                10: \"0.1\",\n                20: \"0.2\",\n                25: \"0.25\",\n                30: \"0.3\",\n                40: \"0.4\",\n                50: \"0.5\",\n                60: \"0.6\",\n                70: \"0.7\",\n                75: \"0.75\",\n                80: \"0.8\",\n                90: \"0.9\",\n                95: \"0.95\",\n                100: \"1\"\n            },\n            order: {\n                first: \"-9999\",\n                last: \"9999\",\n                none: \"0\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\"\n            },\n            padding: ({ theme: e })=>e(\"spacing\"),\n            placeholderColor: ({ theme: e })=>e(\"colors\"),\n            placeholderOpacity: ({ theme: e })=>e(\"opacity\"),\n            outlineColor: ({ theme: e })=>e(\"colors\"),\n            outlineOffset: {\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            outlineWidth: {\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            ringColor: ({ theme: e })=>({\n                    DEFAULT: e(\"colors.blue.500\", \"#3b82f6\"),\n                    ...e(\"colors\")\n                }),\n            ringOffsetColor: ({ theme: e })=>e(\"colors\"),\n            ringOffsetWidth: {\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            ringOpacity: ({ theme: e })=>({\n                    DEFAULT: \"0.5\",\n                    ...e(\"opacity\")\n                }),\n            ringWidth: {\n                DEFAULT: \"3px\",\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            rotate: {\n                0: \"0deg\",\n                1: \"1deg\",\n                2: \"2deg\",\n                3: \"3deg\",\n                6: \"6deg\",\n                12: \"12deg\",\n                45: \"45deg\",\n                90: \"90deg\",\n                180: \"180deg\"\n            },\n            saturate: {\n                0: \"0\",\n                50: \".5\",\n                100: \"1\",\n                150: \"1.5\",\n                200: \"2\"\n            },\n            scale: {\n                0: \"0\",\n                50: \".5\",\n                75: \".75\",\n                90: \".9\",\n                95: \".95\",\n                100: \"1\",\n                105: \"1.05\",\n                110: \"1.1\",\n                125: \"1.25\",\n                150: \"1.5\"\n            },\n            scrollMargin: ({ theme: e })=>({\n                    ...e(\"spacing\")\n                }),\n            scrollPadding: ({ theme: e })=>e(\"spacing\"),\n            sepia: {\n                0: \"0\",\n                DEFAULT: \"100%\"\n            },\n            skew: {\n                0: \"0deg\",\n                1: \"1deg\",\n                2: \"2deg\",\n                3: \"3deg\",\n                6: \"6deg\",\n                12: \"12deg\"\n            },\n            space: ({ theme: e })=>({\n                    ...e(\"spacing\")\n                }),\n            stroke: ({ theme: e })=>e(\"colors\"),\n            strokeWidth: {\n                0: \"0\",\n                1: \"1\",\n                2: \"2\"\n            },\n            textColor: ({ theme: e })=>e(\"colors\"),\n            textDecorationColor: ({ theme: e })=>e(\"colors\"),\n            textDecorationThickness: {\n                auto: \"auto\",\n                \"from-font\": \"from-font\",\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            textUnderlineOffset: {\n                auto: \"auto\",\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            textIndent: ({ theme: e })=>({\n                    ...e(\"spacing\")\n                }),\n            textOpacity: ({ theme: e })=>e(\"opacity\"),\n            transformOrigin: {\n                center: \"center\",\n                top: \"top\",\n                \"top-right\": \"top right\",\n                right: \"right\",\n                \"bottom-right\": \"bottom right\",\n                bottom: \"bottom\",\n                \"bottom-left\": \"bottom left\",\n                left: \"left\",\n                \"top-left\": \"top left\"\n            },\n            transitionDelay: {\n                75: \"75ms\",\n                100: \"100ms\",\n                150: \"150ms\",\n                200: \"200ms\",\n                300: \"300ms\",\n                500: \"500ms\",\n                700: \"700ms\",\n                1e3: \"1000ms\"\n            },\n            transitionDuration: {\n                DEFAULT: \"150ms\",\n                75: \"75ms\",\n                100: \"100ms\",\n                150: \"150ms\",\n                200: \"200ms\",\n                300: \"300ms\",\n                500: \"500ms\",\n                700: \"700ms\",\n                1e3: \"1000ms\"\n            },\n            transitionProperty: {\n                none: \"none\",\n                all: \"all\",\n                DEFAULT: \"color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter\",\n                colors: \"color, background-color, border-color, text-decoration-color, fill, stroke\",\n                opacity: \"opacity\",\n                shadow: \"box-shadow\",\n                transform: \"transform\"\n            },\n            transitionTimingFunction: {\n                DEFAULT: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n                linear: \"linear\",\n                in: \"cubic-bezier(0.4, 0, 1, 1)\",\n                out: \"cubic-bezier(0, 0, 0.2, 1)\",\n                \"in-out\": \"cubic-bezier(0.4, 0, 0.2, 1)\"\n            },\n            translate: ({ theme: e })=>({\n                    ...e(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    full: \"100%\"\n                }),\n            width: ({ theme: e })=>({\n                    auto: \"auto\",\n                    ...e(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    \"1/5\": \"20%\",\n                    \"2/5\": \"40%\",\n                    \"3/5\": \"60%\",\n                    \"4/5\": \"80%\",\n                    \"1/6\": \"16.666667%\",\n                    \"2/6\": \"33.333333%\",\n                    \"3/6\": \"50%\",\n                    \"4/6\": \"66.666667%\",\n                    \"5/6\": \"83.333333%\",\n                    \"1/12\": \"8.333333%\",\n                    \"2/12\": \"16.666667%\",\n                    \"3/12\": \"25%\",\n                    \"4/12\": \"33.333333%\",\n                    \"5/12\": \"41.666667%\",\n                    \"6/12\": \"50%\",\n                    \"7/12\": \"58.333333%\",\n                    \"8/12\": \"66.666667%\",\n                    \"9/12\": \"75%\",\n                    \"10/12\": \"83.333333%\",\n                    \"11/12\": \"91.666667%\",\n                    full: \"100%\",\n                    screen: \"100vw\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\"\n                }),\n            willChange: {\n                auto: \"auto\",\n                scroll: \"scroll-position\",\n                contents: \"contents\",\n                transform: \"transform\"\n            },\n            zIndex: {\n                auto: \"auto\",\n                0: \"0\",\n                10: \"10\",\n                20: \"20\",\n                30: \"30\",\n                40: \"40\",\n                50: \"50\"\n            }\n        },\n        variantOrder: [\n            \"first\",\n            \"last\",\n            \"odd\",\n            \"even\",\n            \"visited\",\n            \"checked\",\n            \"empty\",\n            \"read-only\",\n            \"group-hover\",\n            \"group-focus\",\n            \"focus-within\",\n            \"hover\",\n            \"focus\",\n            \"focus-visible\",\n            \"active\",\n            \"disabled\"\n        ],\n        plugins: []\n    };\n});\nvar Xr = {};\nyn(Xr, {\n    default: ()=>jf\n});\nvar jf, Qr = vn(()=>{\n    jf = {\n        info (e, t) {\n            console.info(...Array.isArray(e) ? [\n                e\n            ] : [\n                t,\n                e\n            ]);\n        },\n        warn (e, t) {\n            console.warn(...Array.isArray(e) ? [\n                e\n            ] : [\n                t,\n                e\n            ]);\n        },\n        risk (e, t) {\n            console.error(...Array.isArray(e) ? [\n                e\n            ] : [\n                t,\n                e\n            ]);\n        }\n    };\n});\nvar ju = T((Zn)=>{\n    \"use strict\";\n    Object.defineProperty(Zn, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(Zn, \"default\", {\n        enumerable: !0,\n        get: ()=>Yf\n    });\n    var Hf = Vf((Qr(), Br(Xr)));\n    function Vf(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Ut({ version: e, from: t, to: n }) {\n        Hf.default.warn(`${t}-color-renamed`, [\n            `As of Tailwind CSS ${e}, \\`${t}\\` has been renamed to \\`${n}\\`.`,\n            \"Update your configuration file to silence this warning.\"\n        ]);\n    }\n    var Yf = {\n        inherit: \"inherit\",\n        current: \"currentColor\",\n        transparent: \"transparent\",\n        black: \"#000\",\n        white: \"#fff\",\n        slate: {\n            50: \"#f8fafc\",\n            100: \"#f1f5f9\",\n            200: \"#e2e8f0\",\n            300: \"#cbd5e1\",\n            400: \"#94a3b8\",\n            500: \"#64748b\",\n            600: \"#475569\",\n            700: \"#334155\",\n            800: \"#1e293b\",\n            900: \"#0f172a\"\n        },\n        gray: {\n            50: \"#f9fafb\",\n            100: \"#f3f4f6\",\n            200: \"#e5e7eb\",\n            300: \"#d1d5db\",\n            400: \"#9ca3af\",\n            500: \"#6b7280\",\n            600: \"#4b5563\",\n            700: \"#374151\",\n            800: \"#1f2937\",\n            900: \"#111827\"\n        },\n        zinc: {\n            50: \"#fafafa\",\n            100: \"#f4f4f5\",\n            200: \"#e4e4e7\",\n            300: \"#d4d4d8\",\n            400: \"#a1a1aa\",\n            500: \"#71717a\",\n            600: \"#52525b\",\n            700: \"#3f3f46\",\n            800: \"#27272a\",\n            900: \"#18181b\"\n        },\n        neutral: {\n            50: \"#fafafa\",\n            100: \"#f5f5f5\",\n            200: \"#e5e5e5\",\n            300: \"#d4d4d4\",\n            400: \"#a3a3a3\",\n            500: \"#737373\",\n            600: \"#525252\",\n            700: \"#404040\",\n            800: \"#262626\",\n            900: \"#171717\"\n        },\n        stone: {\n            50: \"#fafaf9\",\n            100: \"#f5f5f4\",\n            200: \"#e7e5e4\",\n            300: \"#d6d3d1\",\n            400: \"#a8a29e\",\n            500: \"#78716c\",\n            600: \"#57534e\",\n            700: \"#44403c\",\n            800: \"#292524\",\n            900: \"#1c1917\"\n        },\n        red: {\n            50: \"#fef2f2\",\n            100: \"#fee2e2\",\n            200: \"#fecaca\",\n            300: \"#fca5a5\",\n            400: \"#f87171\",\n            500: \"#ef4444\",\n            600: \"#dc2626\",\n            700: \"#b91c1c\",\n            800: \"#991b1b\",\n            900: \"#7f1d1d\"\n        },\n        orange: {\n            50: \"#fff7ed\",\n            100: \"#ffedd5\",\n            200: \"#fed7aa\",\n            300: \"#fdba74\",\n            400: \"#fb923c\",\n            500: \"#f97316\",\n            600: \"#ea580c\",\n            700: \"#c2410c\",\n            800: \"#9a3412\",\n            900: \"#7c2d12\"\n        },\n        amber: {\n            50: \"#fffbeb\",\n            100: \"#fef3c7\",\n            200: \"#fde68a\",\n            300: \"#fcd34d\",\n            400: \"#fbbf24\",\n            500: \"#f59e0b\",\n            600: \"#d97706\",\n            700: \"#b45309\",\n            800: \"#92400e\",\n            900: \"#78350f\"\n        },\n        yellow: {\n            50: \"#fefce8\",\n            100: \"#fef9c3\",\n            200: \"#fef08a\",\n            300: \"#fde047\",\n            400: \"#facc15\",\n            500: \"#eab308\",\n            600: \"#ca8a04\",\n            700: \"#a16207\",\n            800: \"#854d0e\",\n            900: \"#713f12\"\n        },\n        lime: {\n            50: \"#f7fee7\",\n            100: \"#ecfccb\",\n            200: \"#d9f99d\",\n            300: \"#bef264\",\n            400: \"#a3e635\",\n            500: \"#84cc16\",\n            600: \"#65a30d\",\n            700: \"#4d7c0f\",\n            800: \"#3f6212\",\n            900: \"#365314\"\n        },\n        green: {\n            50: \"#f0fdf4\",\n            100: \"#dcfce7\",\n            200: \"#bbf7d0\",\n            300: \"#86efac\",\n            400: \"#4ade80\",\n            500: \"#22c55e\",\n            600: \"#16a34a\",\n            700: \"#15803d\",\n            800: \"#166534\",\n            900: \"#14532d\"\n        },\n        emerald: {\n            50: \"#ecfdf5\",\n            100: \"#d1fae5\",\n            200: \"#a7f3d0\",\n            300: \"#6ee7b7\",\n            400: \"#34d399\",\n            500: \"#10b981\",\n            600: \"#059669\",\n            700: \"#047857\",\n            800: \"#065f46\",\n            900: \"#064e3b\"\n        },\n        teal: {\n            50: \"#f0fdfa\",\n            100: \"#ccfbf1\",\n            200: \"#99f6e4\",\n            300: \"#5eead4\",\n            400: \"#2dd4bf\",\n            500: \"#14b8a6\",\n            600: \"#0d9488\",\n            700: \"#0f766e\",\n            800: \"#115e59\",\n            900: \"#134e4a\"\n        },\n        cyan: {\n            50: \"#ecfeff\",\n            100: \"#cffafe\",\n            200: \"#a5f3fc\",\n            300: \"#67e8f9\",\n            400: \"#22d3ee\",\n            500: \"#06b6d4\",\n            600: \"#0891b2\",\n            700: \"#0e7490\",\n            800: \"#155e75\",\n            900: \"#164e63\"\n        },\n        sky: {\n            50: \"#f0f9ff\",\n            100: \"#e0f2fe\",\n            200: \"#bae6fd\",\n            300: \"#7dd3fc\",\n            400: \"#38bdf8\",\n            500: \"#0ea5e9\",\n            600: \"#0284c7\",\n            700: \"#0369a1\",\n            800: \"#075985\",\n            900: \"#0c4a6e\"\n        },\n        blue: {\n            50: \"#eff6ff\",\n            100: \"#dbeafe\",\n            200: \"#bfdbfe\",\n            300: \"#93c5fd\",\n            400: \"#60a5fa\",\n            500: \"#3b82f6\",\n            600: \"#2563eb\",\n            700: \"#1d4ed8\",\n            800: \"#1e40af\",\n            900: \"#1e3a8a\"\n        },\n        indigo: {\n            50: \"#eef2ff\",\n            100: \"#e0e7ff\",\n            200: \"#c7d2fe\",\n            300: \"#a5b4fc\",\n            400: \"#818cf8\",\n            500: \"#6366f1\",\n            600: \"#4f46e5\",\n            700: \"#4338ca\",\n            800: \"#3730a3\",\n            900: \"#312e81\"\n        },\n        violet: {\n            50: \"#f5f3ff\",\n            100: \"#ede9fe\",\n            200: \"#ddd6fe\",\n            300: \"#c4b5fd\",\n            400: \"#a78bfa\",\n            500: \"#8b5cf6\",\n            600: \"#7c3aed\",\n            700: \"#6d28d9\",\n            800: \"#5b21b6\",\n            900: \"#4c1d95\"\n        },\n        purple: {\n            50: \"#faf5ff\",\n            100: \"#f3e8ff\",\n            200: \"#e9d5ff\",\n            300: \"#d8b4fe\",\n            400: \"#c084fc\",\n            500: \"#a855f7\",\n            600: \"#9333ea\",\n            700: \"#7e22ce\",\n            800: \"#6b21a8\",\n            900: \"#581c87\"\n        },\n        fuchsia: {\n            50: \"#fdf4ff\",\n            100: \"#fae8ff\",\n            200: \"#f5d0fe\",\n            300: \"#f0abfc\",\n            400: \"#e879f9\",\n            500: \"#d946ef\",\n            600: \"#c026d3\",\n            700: \"#a21caf\",\n            800: \"#86198f\",\n            900: \"#701a75\"\n        },\n        pink: {\n            50: \"#fdf2f8\",\n            100: \"#fce7f3\",\n            200: \"#fbcfe8\",\n            300: \"#f9a8d4\",\n            400: \"#f472b6\",\n            500: \"#ec4899\",\n            600: \"#db2777\",\n            700: \"#be185d\",\n            800: \"#9d174d\",\n            900: \"#831843\"\n        },\n        rose: {\n            50: \"#fff1f2\",\n            100: \"#ffe4e6\",\n            200: \"#fecdd3\",\n            300: \"#fda4af\",\n            400: \"#fb7185\",\n            500: \"#f43f5e\",\n            600: \"#e11d48\",\n            700: \"#be123c\",\n            800: \"#9f1239\",\n            900: \"#881337\"\n        },\n        get lightBlue () {\n            return Ut({\n                version: \"v2.2\",\n                from: \"lightBlue\",\n                to: \"sky\"\n            }), this.sky;\n        },\n        get warmGray () {\n            return Ut({\n                version: \"v3.0\",\n                from: \"warmGray\",\n                to: \"stone\"\n            }), this.stone;\n        },\n        get trueGray () {\n            return Ut({\n                version: \"v3.0\",\n                from: \"trueGray\",\n                to: \"neutral\"\n            }), this.neutral;\n        },\n        get coolGray () {\n            return Ut({\n                version: \"v3.0\",\n                from: \"coolGray\",\n                to: \"gray\"\n            }), this.gray;\n        },\n        get blueGray () {\n            return Ut({\n                version: \"v3.0\",\n                from: \"blueGray\",\n                to: \"slate\"\n            }), this.slate;\n        }\n    };\n});\nvar Hu = T((ei)=>{\n    \"use strict\";\n    Object.defineProperty(ei, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(ei, \"defaults\", {\n        enumerable: !0,\n        get: ()=>Xf\n    });\n    function Xf(e, ...t) {\n        for (let i of t){\n            for(let o in i){\n                var n;\n                !(e == null || (n = e.hasOwnProperty) === null || n === void 0) && n.call(e, o) || (e[o] = i[o]);\n            }\n            for (let o of Object.getOwnPropertySymbols(i)){\n                var r;\n                !(e == null || (r = e.hasOwnProperty) === null || r === void 0) && r.call(e, o) || (e[o] = i[o]);\n            }\n        }\n        return e;\n    }\n});\nvar Vu = T((ti)=>{\n    \"use strict\";\n    Object.defineProperty(ti, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(ti, \"toPath\", {\n        enumerable: !0,\n        get: ()=>Qf\n    });\n    function Qf(e) {\n        if (Array.isArray(e)) return e;\n        let t = e.split(\"[\").length - 1, n = e.split(\"]\").length - 1;\n        if (t !== n) throw new Error(`Path is invalid. Has unbalanced brackets: ${e}`);\n        return e.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean);\n    }\n});\nvar Xu = T((ri)=>{\n    \"use strict\";\n    Object.defineProperty(ri, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(ri, \"normalizeConfig\", {\n        enumerable: !0,\n        get: ()=>Jf\n    });\n    var Gt = Kf((Qr(), Br(Xr)));\n    function Yu(e) {\n        if (typeof WeakMap != \"function\") return null;\n        var t = new WeakMap, n = new WeakMap;\n        return (Yu = function(r) {\n            return r ? n : t;\n        })(e);\n    }\n    function Kf(e, t) {\n        if (!t && e && e.__esModule) return e;\n        if (e === null || typeof e != \"object\" && typeof e != \"function\") return {\n            default: e\n        };\n        var n = Yu(t);\n        if (n && n.has(e)) return n.get(e);\n        var r = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var o in e)if (o !== \"default\" && Object.prototype.hasOwnProperty.call(e, o)) {\n            var u = i ? Object.getOwnPropertyDescriptor(e, o) : null;\n            u && (u.get || u.set) ? Object.defineProperty(r, o, u) : r[o] = e[o];\n        }\n        return r.default = e, n && n.set(e, r), r;\n    }\n    function Jf(e) {\n        if ((()=>{\n            if (e.purge || !e.content || !Array.isArray(e.content) && !(typeof e.content == \"object\" && e.content !== null)) return !1;\n            if (Array.isArray(e.content)) return e.content.every((r)=>typeof r == \"string\" ? !0 : !(typeof (r == null ? void 0 : r.raw) != \"string\" || r != null && r.extension && typeof (r == null ? void 0 : r.extension) != \"string\"));\n            if (typeof e.content == \"object\" && e.content !== null) {\n                if (Object.keys(e.content).some((r)=>![\n                        \"files\",\n                        \"extract\",\n                        \"transform\"\n                    ].includes(r))) return !1;\n                if (Array.isArray(e.content.files)) {\n                    if (!e.content.files.every((r)=>typeof r == \"string\" ? !0 : !(typeof (r == null ? void 0 : r.raw) != \"string\" || r != null && r.extension && typeof (r == null ? void 0 : r.extension) != \"string\"))) return !1;\n                    if (typeof e.content.extract == \"object\") {\n                        for (let r of Object.values(e.content.extract))if (typeof r != \"function\") return !1;\n                    } else if (!(e.content.extract === void 0 || typeof e.content.extract == \"function\")) return !1;\n                    if (typeof e.content.transform == \"object\") {\n                        for (let r of Object.values(e.content.transform))if (typeof r != \"function\") return !1;\n                    } else if (!(e.content.transform === void 0 || typeof e.content.transform == \"function\")) return !1;\n                }\n                return !0;\n            }\n            return !1;\n        })() || Gt.default.warn(\"purge-deprecation\", [\n            \"The `purge`/`content` options have changed in Tailwind CSS v3.0.\",\n            \"Update your configuration file to eliminate this warning.\",\n            \"https://tailwindcss.com/docs/upgrade-guide#configure-content-sources\"\n        ]), e.safelist = (()=>{\n            var r;\n            let { content: i, purge: o, safelist: u } = e;\n            return Array.isArray(u) ? u : Array.isArray(i == null ? void 0 : i.safelist) ? i.safelist : Array.isArray(o == null ? void 0 : o.safelist) ? o.safelist : Array.isArray(o == null || (r = o.options) === null || r === void 0 ? void 0 : r.safelist) ? o.options.safelist : [];\n        })(), typeof e.prefix == \"function\") Gt.default.warn(\"prefix-function\", [\n            \"As of Tailwind CSS v3.0, `prefix` cannot be a function.\",\n            \"Update `prefix` in your configuration to be a string to eliminate this warning.\",\n            \"https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function\"\n        ]), e.prefix = \"\";\n        else {\n            var n;\n            e.prefix = (n = e.prefix) !== null && n !== void 0 ? n : \"\";\n        }\n        e.content = {\n            files: (()=>{\n                let { content: r, purge: i } = e;\n                return Array.isArray(i) ? i : Array.isArray(i == null ? void 0 : i.content) ? i.content : Array.isArray(r) ? r : Array.isArray(r == null ? void 0 : r.content) ? r.content : Array.isArray(r == null ? void 0 : r.files) ? r.files : [];\n            })(),\n            extract: (()=>{\n                let r = (()=>{\n                    var u, s, a, l, f, c, d, h, p, m;\n                    return !((u = e.purge) === null || u === void 0) && u.extract ? e.purge.extract : !((s = e.content) === null || s === void 0) && s.extract ? e.content.extract : !((a = e.purge) === null || a === void 0 || (l = a.extract) === null || l === void 0) && l.DEFAULT ? e.purge.extract.DEFAULT : !((f = e.content) === null || f === void 0 || (c = f.extract) === null || c === void 0) && c.DEFAULT ? e.content.extract.DEFAULT : !((d = e.purge) === null || d === void 0 || (h = d.options) === null || h === void 0) && h.extractors ? e.purge.options.extractors : !((p = e.content) === null || p === void 0 || (m = p.options) === null || m === void 0) && m.extractors ? e.content.options.extractors : {};\n                })(), i = {}, o = (()=>{\n                    var u, s, a, l;\n                    if (!((u = e.purge) === null || u === void 0 || (s = u.options) === null || s === void 0) && s.defaultExtractor) return e.purge.options.defaultExtractor;\n                    if (!((a = e.content) === null || a === void 0 || (l = a.options) === null || l === void 0) && l.defaultExtractor) return e.content.options.defaultExtractor;\n                })();\n                if (o !== void 0 && (i.DEFAULT = o), typeof r == \"function\") i.DEFAULT = r;\n                else if (Array.isArray(r)) for (let { extensions: u, extractor: s } of r ?? [])for (let a of u)i[a] = s;\n                else typeof r == \"object\" && r !== null && Object.assign(i, r);\n                return i;\n            })(),\n            transform: (()=>{\n                let r = (()=>{\n                    var o, u, s, a, l, f;\n                    return !((o = e.purge) === null || o === void 0) && o.transform ? e.purge.transform : !((u = e.content) === null || u === void 0) && u.transform ? e.content.transform : !((s = e.purge) === null || s === void 0 || (a = s.transform) === null || a === void 0) && a.DEFAULT ? e.purge.transform.DEFAULT : !((l = e.content) === null || l === void 0 || (f = l.transform) === null || f === void 0) && f.DEFAULT ? e.content.transform.DEFAULT : {};\n                })(), i = {};\n                return typeof r == \"function\" && (i.DEFAULT = r), typeof r == \"object\" && r !== null && Object.assign(i, r), i;\n            })()\n        };\n        for (let r of e.content.files)if (typeof r == \"string\" && /{([^,]*?)}/g.test(r)) {\n            Gt.default.warn(\"invalid-glob-braces\", [\n                `The glob pattern ${(0, Gt.dim)(r)} in your Tailwind CSS configuration is invalid.`,\n                `Update it to ${(0, Gt.dim)(r.replace(/{([^,]*?)}/g, \"$1\"))} to silence this warning.`\n            ]);\n            break;\n        }\n        return e;\n    }\n});\nvar Qu = T((ni)=>{\n    \"use strict\";\n    Object.defineProperty(ni, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(ni, \"default\", {\n        enumerable: !0,\n        get: ()=>Zf\n    });\n    function Zf(e) {\n        if (Object.prototype.toString.call(e) !== \"[object Object]\") return !1;\n        let t = Object.getPrototypeOf(e);\n        return t === null || t === Object.prototype;\n    }\n});\nvar Ku = T((oi)=>{\n    \"use strict\";\n    Object.defineProperty(oi, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(oi, \"cloneDeep\", {\n        enumerable: !0,\n        get: ()=>ii\n    });\n    function ii(e) {\n        return Array.isArray(e) ? e.map((t)=>ii(t)) : typeof e == \"object\" && e !== null ? Object.fromEntries(Object.entries(e).map(([t, n])=>[\n                t,\n                ii(n)\n            ])) : e;\n    }\n});\nvar ui = T((Kr, Ju)=>{\n    \"use strict\";\n    Kr.__esModule = !0;\n    Kr.default = rc;\n    function ec(e) {\n        for(var t = e.toLowerCase(), n = \"\", r = !1, i = 0; i < 6 && t[i] !== void 0; i++){\n            var o = t.charCodeAt(i), u = o >= 97 && o <= 102 || o >= 48 && o <= 57;\n            if (r = o === 32, !u) break;\n            n += t[i];\n        }\n        if (n.length !== 0) {\n            var s = parseInt(n, 16), a = s >= 55296 && s <= 57343;\n            return a || s === 0 || s > 1114111 ? [\n                \"�\",\n                n.length + (r ? 1 : 0)\n            ] : [\n                String.fromCodePoint(s),\n                n.length + (r ? 1 : 0)\n            ];\n        }\n    }\n    var tc = /\\\\/;\n    function rc(e) {\n        var t = tc.test(e);\n        if (!t) return e;\n        for(var n = \"\", r = 0; r < e.length; r++){\n            if (e[r] === \"\\\\\") {\n                var i = ec(e.slice(r + 1, r + 7));\n                if (i !== void 0) {\n                    n += i[0], r += i[1];\n                    continue;\n                }\n                if (e[r + 1] === \"\\\\\") {\n                    n += \"\\\\\", r++;\n                    continue;\n                }\n                e.length === r + 1 && (n += e[r]);\n                continue;\n            }\n            n += e[r];\n        }\n        return n;\n    }\n    Ju.exports = Kr.default;\n});\nvar es = T((Jr, Zu)=>{\n    \"use strict\";\n    Jr.__esModule = !0;\n    Jr.default = nc;\n    function nc(e) {\n        for(var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)n[r - 1] = arguments[r];\n        for(; n.length > 0;){\n            var i = n.shift();\n            if (!e[i]) return;\n            e = e[i];\n        }\n        return e;\n    }\n    Zu.exports = Jr.default;\n});\nvar rs = T((Zr, ts)=>{\n    \"use strict\";\n    Zr.__esModule = !0;\n    Zr.default = ic;\n    function ic(e) {\n        for(var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)n[r - 1] = arguments[r];\n        for(; n.length > 0;){\n            var i = n.shift();\n            e[i] || (e[i] = {}), e = e[i];\n        }\n    }\n    ts.exports = Zr.default;\n});\nvar is = T((en, ns)=>{\n    \"use strict\";\n    en.__esModule = !0;\n    en.default = oc;\n    function oc(e) {\n        for(var t = \"\", n = e.indexOf(\"/*\"), r = 0; n >= 0;){\n            t = t + e.slice(r, n);\n            var i = e.indexOf(\"*/\", n + 2);\n            if (i < 0) return t;\n            r = i + 2, n = e.indexOf(\"/*\", r);\n        }\n        return t = t + e.slice(r), t;\n    }\n    ns.exports = en.default;\n});\nvar jt = T((Le)=>{\n    \"use strict\";\n    Le.__esModule = !0;\n    Le.stripComments = Le.ensureObject = Le.getProp = Le.unesc = void 0;\n    var uc = tn(ui());\n    Le.unesc = uc.default;\n    var sc = tn(es());\n    Le.getProp = sc.default;\n    var ac = tn(rs());\n    Le.ensureObject = ac.default;\n    var lc = tn(is());\n    Le.stripComments = lc.default;\n    function tn(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n});\nvar ze = T((Ht, ss)=>{\n    \"use strict\";\n    Ht.__esModule = !0;\n    Ht.default = void 0;\n    var os = jt();\n    function us(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function fc(e, t, n) {\n        return t && us(e.prototype, t), n && us(e, n), e;\n    }\n    var cc = function e(t, n) {\n        if (typeof t != \"object\" || t === null) return t;\n        var r = new t.constructor;\n        for(var i in t)if (t.hasOwnProperty(i)) {\n            var o = t[i], u = typeof o;\n            i === \"parent\" && u === \"object\" ? n && (r[i] = n) : o instanceof Array ? r[i] = o.map(function(s) {\n                return e(s, r);\n            }) : r[i] = e(o, r);\n        }\n        return r;\n    }, dc = function() {\n        function e(n) {\n            n === void 0 && (n = {}), Object.assign(this, n), this.spaces = this.spaces || {}, this.spaces.before = this.spaces.before || \"\", this.spaces.after = this.spaces.after || \"\";\n        }\n        var t = e.prototype;\n        return t.remove = function() {\n            return this.parent && this.parent.removeChild(this), this.parent = void 0, this;\n        }, t.replaceWith = function() {\n            if (this.parent) {\n                for(var r in arguments)this.parent.insertBefore(this, arguments[r]);\n                this.remove();\n            }\n            return this;\n        }, t.next = function() {\n            return this.parent.at(this.parent.index(this) + 1);\n        }, t.prev = function() {\n            return this.parent.at(this.parent.index(this) - 1);\n        }, t.clone = function(r) {\n            r === void 0 && (r = {});\n            var i = cc(this);\n            for(var o in r)i[o] = r[o];\n            return i;\n        }, t.appendToPropertyAndEscape = function(r, i, o) {\n            this.raws || (this.raws = {});\n            var u = this[r], s = this.raws[r];\n            this[r] = u + i, s || o !== i ? this.raws[r] = (s || u) + o : delete this.raws[r];\n        }, t.setPropertyAndEscape = function(r, i, o) {\n            this.raws || (this.raws = {}), this[r] = i, this.raws[r] = o;\n        }, t.setPropertyWithoutEscape = function(r, i) {\n            this[r] = i, this.raws && delete this.raws[r];\n        }, t.isAtPosition = function(r, i) {\n            if (this.source && this.source.start && this.source.end) return !(this.source.start.line > r || this.source.end.line < r || this.source.start.line === r && this.source.start.column > i || this.source.end.line === r && this.source.end.column < i);\n        }, t.stringifyProperty = function(r) {\n            return this.raws && this.raws[r] || this[r];\n        }, t.valueToString = function() {\n            return String(this.stringifyProperty(\"value\"));\n        }, t.toString = function() {\n            return [\n                this.rawSpaceBefore,\n                this.valueToString(),\n                this.rawSpaceAfter\n            ].join(\"\");\n        }, fc(e, [\n            {\n                key: \"rawSpaceBefore\",\n                get: function() {\n                    var r = this.raws && this.raws.spaces && this.raws.spaces.before;\n                    return r === void 0 && (r = this.spaces && this.spaces.before), r || \"\";\n                },\n                set: function(r) {\n                    (0, os.ensureObject)(this, \"raws\", \"spaces\"), this.raws.spaces.before = r;\n                }\n            },\n            {\n                key: \"rawSpaceAfter\",\n                get: function() {\n                    var r = this.raws && this.raws.spaces && this.raws.spaces.after;\n                    return r === void 0 && (r = this.spaces.after), r || \"\";\n                },\n                set: function(r) {\n                    (0, os.ensureObject)(this, \"raws\", \"spaces\"), this.raws.spaces.after = r;\n                }\n            }\n        ]), e;\n    }();\n    Ht.default = dc;\n    ss.exports = Ht.default;\n});\nvar pe = T((X)=>{\n    \"use strict\";\n    X.__esModule = !0;\n    X.UNIVERSAL = X.ATTRIBUTE = X.CLASS = X.COMBINATOR = X.COMMENT = X.ID = X.NESTING = X.PSEUDO = X.ROOT = X.SELECTOR = X.STRING = X.TAG = void 0;\n    var pc = \"tag\";\n    X.TAG = pc;\n    var hc = \"string\";\n    X.STRING = hc;\n    var mc = \"selector\";\n    X.SELECTOR = mc;\n    var Dc = \"root\";\n    X.ROOT = Dc;\n    var gc = \"pseudo\";\n    X.PSEUDO = gc;\n    var bc = \"nesting\";\n    X.NESTING = bc;\n    var vc = \"id\";\n    X.ID = vc;\n    var yc = \"comment\";\n    X.COMMENT = yc;\n    var xc = \"combinator\";\n    X.COMBINATOR = xc;\n    var Fc = \"class\";\n    X.CLASS = Fc;\n    var wc = \"attribute\";\n    X.ATTRIBUTE = wc;\n    var Ec = \"universal\";\n    X.UNIVERSAL = Ec;\n});\nvar rn = T((Vt, cs)=>{\n    \"use strict\";\n    Vt.__esModule = !0;\n    Vt.default = void 0;\n    var Sc = _c(ze()), Ue = Cc(pe());\n    function fs() {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap;\n        return fs = function() {\n            return e;\n        }, e;\n    }\n    function Cc(e) {\n        if (e && e.__esModule) return e;\n        if (e === null || typeof e != \"object\" && typeof e != \"function\") return {\n            default: e\n        };\n        var t = fs();\n        if (t && t.has(e)) return t.get(e);\n        var n = {}, r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var i in e)if (Object.prototype.hasOwnProperty.call(e, i)) {\n            var o = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n            o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i];\n        }\n        return n.default = e, t && t.set(e, n), n;\n    }\n    function _c(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function kc(e, t) {\n        var n;\n        if (typeof Symbol > \"u\" || e[Symbol.iterator] == null) {\n            if (Array.isArray(e) || (n = Tc(e)) || t && e && typeof e.length == \"number\") {\n                n && (e = n);\n                var r = 0;\n                return function() {\n                    return r >= e.length ? {\n                        done: !0\n                    } : {\n                        done: !1,\n                        value: e[r++]\n                    };\n                };\n            }\n            throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n        }\n        return n = e[Symbol.iterator](), n.next.bind(n);\n    }\n    function Tc(e, t) {\n        if (e) {\n            if (typeof e == \"string\") return as(e, t);\n            var n = Object.prototype.toString.call(e).slice(8, -1);\n            if (n === \"Object\" && e.constructor && (n = e.constructor.name), n === \"Map\" || n === \"Set\") return Array.from(e);\n            if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return as(e, t);\n        }\n    }\n    function as(e, t) {\n        (t == null || t > e.length) && (t = e.length);\n        for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];\n        return r;\n    }\n    function ls(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function Ac(e, t, n) {\n        return t && ls(e.prototype, t), n && ls(e, n), e;\n    }\n    function Oc(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, si(e, t);\n    }\n    function si(e, t) {\n        return si = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, si(e, t);\n    }\n    var Pc = function(e) {\n        Oc(t, e);\n        function t(r) {\n            var i;\n            return i = e.call(this, r) || this, i.nodes || (i.nodes = []), i;\n        }\n        var n = t.prototype;\n        return n.append = function(i) {\n            return i.parent = this, this.nodes.push(i), this;\n        }, n.prepend = function(i) {\n            return i.parent = this, this.nodes.unshift(i), this;\n        }, n.at = function(i) {\n            return this.nodes[i];\n        }, n.index = function(i) {\n            return typeof i == \"number\" ? i : this.nodes.indexOf(i);\n        }, n.removeChild = function(i) {\n            i = this.index(i), this.at(i).parent = void 0, this.nodes.splice(i, 1);\n            var o;\n            for(var u in this.indexes)o = this.indexes[u], o >= i && (this.indexes[u] = o - 1);\n            return this;\n        }, n.removeAll = function() {\n            for(var i = kc(this.nodes), o; !(o = i()).done;){\n                var u = o.value;\n                u.parent = void 0;\n            }\n            return this.nodes = [], this;\n        }, n.empty = function() {\n            return this.removeAll();\n        }, n.insertAfter = function(i, o) {\n            o.parent = this;\n            var u = this.index(i);\n            this.nodes.splice(u + 1, 0, o), o.parent = this;\n            var s;\n            for(var a in this.indexes)s = this.indexes[a], u <= s && (this.indexes[a] = s + 1);\n            return this;\n        }, n.insertBefore = function(i, o) {\n            o.parent = this;\n            var u = this.index(i);\n            this.nodes.splice(u, 0, o), o.parent = this;\n            var s;\n            for(var a in this.indexes)s = this.indexes[a], s <= u && (this.indexes[a] = s + 1);\n            return this;\n        }, n._findChildAtPosition = function(i, o) {\n            var u = void 0;\n            return this.each(function(s) {\n                if (s.atPosition) {\n                    var a = s.atPosition(i, o);\n                    if (a) return u = a, !1;\n                } else if (s.isAtPosition(i, o)) return u = s, !1;\n            }), u;\n        }, n.atPosition = function(i, o) {\n            if (this.isAtPosition(i, o)) return this._findChildAtPosition(i, o) || this;\n        }, n._inferEndPosition = function() {\n            this.last && this.last.source && this.last.source.end && (this.source = this.source || {}, this.source.end = this.source.end || {}, Object.assign(this.source.end, this.last.source.end));\n        }, n.each = function(i) {\n            this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;\n            var o = this.lastEach;\n            if (this.indexes[o] = 0, !!this.length) {\n                for(var u, s; this.indexes[o] < this.length && (u = this.indexes[o], s = i(this.at(u), u), s !== !1);)this.indexes[o] += 1;\n                if (delete this.indexes[o], s === !1) return !1;\n            }\n        }, n.walk = function(i) {\n            return this.each(function(o, u) {\n                var s = i(o, u);\n                if (s !== !1 && o.length && (s = o.walk(i)), s === !1) return !1;\n            });\n        }, n.walkAttributes = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.ATTRIBUTE) return i.call(o, u);\n            });\n        }, n.walkClasses = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.CLASS) return i.call(o, u);\n            });\n        }, n.walkCombinators = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.COMBINATOR) return i.call(o, u);\n            });\n        }, n.walkComments = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.COMMENT) return i.call(o, u);\n            });\n        }, n.walkIds = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.ID) return i.call(o, u);\n            });\n        }, n.walkNesting = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.NESTING) return i.call(o, u);\n            });\n        }, n.walkPseudos = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.PSEUDO) return i.call(o, u);\n            });\n        }, n.walkTags = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.TAG) return i.call(o, u);\n            });\n        }, n.walkUniversals = function(i) {\n            var o = this;\n            return this.walk(function(u) {\n                if (u.type === Ue.UNIVERSAL) return i.call(o, u);\n            });\n        }, n.split = function(i) {\n            var o = this, u = [];\n            return this.reduce(function(s, a, l) {\n                var f = i.call(o, a);\n                return u.push(a), f ? (s.push(u), u = []) : l === o.length - 1 && s.push(u), s;\n            }, []);\n        }, n.map = function(i) {\n            return this.nodes.map(i);\n        }, n.reduce = function(i, o) {\n            return this.nodes.reduce(i, o);\n        }, n.every = function(i) {\n            return this.nodes.every(i);\n        }, n.some = function(i) {\n            return this.nodes.some(i);\n        }, n.filter = function(i) {\n            return this.nodes.filter(i);\n        }, n.sort = function(i) {\n            return this.nodes.sort(i);\n        }, n.toString = function() {\n            return this.map(String).join(\"\");\n        }, Ac(t, [\n            {\n                key: \"first\",\n                get: function() {\n                    return this.at(0);\n                }\n            },\n            {\n                key: \"last\",\n                get: function() {\n                    return this.at(this.length - 1);\n                }\n            },\n            {\n                key: \"length\",\n                get: function() {\n                    return this.nodes.length;\n                }\n            }\n        ]), t;\n    }(Sc.default);\n    Vt.default = Pc;\n    cs.exports = Vt.default;\n});\nvar li = T((Yt, ps)=>{\n    \"use strict\";\n    Yt.__esModule = !0;\n    Yt.default = void 0;\n    var Bc = Rc(rn()), Ic = pe();\n    function Rc(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function ds(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function Lc(e, t, n) {\n        return t && ds(e.prototype, t), n && ds(e, n), e;\n    }\n    function Mc(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, ai(e, t);\n    }\n    function ai(e, t) {\n        return ai = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, ai(e, t);\n    }\n    var Nc = function(e) {\n        Mc(t, e);\n        function t(r) {\n            var i;\n            return i = e.call(this, r) || this, i.type = Ic.ROOT, i;\n        }\n        var n = t.prototype;\n        return n.toString = function() {\n            var i = this.reduce(function(o, u) {\n                return o.push(String(u)), o;\n            }, []).join(\",\");\n            return this.trailingComma ? i + \",\" : i;\n        }, n.error = function(i, o) {\n            return this._error ? this._error(i, o) : new Error(i);\n        }, Lc(t, [\n            {\n                key: \"errorGenerator\",\n                set: function(i) {\n                    this._error = i;\n                }\n            }\n        ]), t;\n    }(Bc.default);\n    Yt.default = Nc;\n    ps.exports = Yt.default;\n});\nvar ci = T((Xt, hs)=>{\n    \"use strict\";\n    Xt.__esModule = !0;\n    Xt.default = void 0;\n    var Wc = qc(rn()), $c = pe();\n    function qc(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function zc(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, fi(e, t);\n    }\n    function fi(e, t) {\n        return fi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, fi(e, t);\n    }\n    var Uc = function(e) {\n        zc(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = $c.SELECTOR, r;\n        }\n        return t;\n    }(Wc.default);\n    Xt.default = Uc;\n    hs.exports = Xt.default;\n});\nvar nn = T((Db, ms)=>{\n    \"use strict\";\n    var Gc = {}, jc = Gc.hasOwnProperty, Hc = function(t, n) {\n        if (!t) return n;\n        var r = {};\n        for(var i in n)r[i] = jc.call(t, i) ? t[i] : n[i];\n        return r;\n    }, Vc = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/, Yc = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/, Xc = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g, di = function e(t, n) {\n        n = Hc(n, e.options), n.quotes != \"single\" && n.quotes != \"double\" && (n.quotes = \"single\");\n        for(var r = n.quotes == \"double\" ? '\"' : \"'\", i = n.isIdentifier, o = t.charAt(0), u = \"\", s = 0, a = t.length; s < a;){\n            var l = t.charAt(s++), f = l.charCodeAt(), c = void 0;\n            if (f < 32 || f > 126) {\n                if (f >= 55296 && f <= 56319 && s < a) {\n                    var d = t.charCodeAt(s++);\n                    (d & 64512) == 56320 ? f = ((f & 1023) << 10) + (d & 1023) + 65536 : s--;\n                }\n                c = \"\\\\\" + f.toString(16).toUpperCase() + \" \";\n            } else n.escapeEverything ? Vc.test(l) ? c = \"\\\\\" + l : c = \"\\\\\" + f.toString(16).toUpperCase() + \" \" : /[\\t\\n\\f\\r\\x0B]/.test(l) ? c = \"\\\\\" + f.toString(16).toUpperCase() + \" \" : l == \"\\\\\" || !i && (l == '\"' && r == l || l == \"'\" && r == l) || i && Yc.test(l) ? c = \"\\\\\" + l : c = l;\n            u += c;\n        }\n        return i && (/^-[-\\d]/.test(u) ? u = \"\\\\-\" + u.slice(1) : /\\d/.test(o) && (u = \"\\\\3\" + o + \" \" + u.slice(1))), u = u.replace(Xc, function(h, p, m) {\n            return p && p.length % 2 ? h : (p || \"\") + m;\n        }), !i && n.wrap ? r + u + r : u;\n    };\n    di.options = {\n        escapeEverything: !1,\n        isIdentifier: !1,\n        quotes: \"single\",\n        wrap: !1\n    };\n    di.version = \"3.0.0\";\n    ms.exports = di;\n});\nvar hi = T((Qt, bs)=>{\n    \"use strict\";\n    Qt.__esModule = !0;\n    Qt.default = void 0;\n    var Qc = gs(nn()), Kc = jt(), Jc = gs(ze()), Zc = pe();\n    function gs(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Ds(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function ed(e, t, n) {\n        return t && Ds(e.prototype, t), n && Ds(e, n), e;\n    }\n    function td(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, pi(e, t);\n    }\n    function pi(e, t) {\n        return pi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, pi(e, t);\n    }\n    var rd = function(e) {\n        td(t, e);\n        function t(r) {\n            var i;\n            return i = e.call(this, r) || this, i.type = Zc.CLASS, i._constructed = !0, i;\n        }\n        var n = t.prototype;\n        return n.valueToString = function() {\n            return \".\" + e.prototype.valueToString.call(this);\n        }, ed(t, [\n            {\n                key: \"value\",\n                get: function() {\n                    return this._value;\n                },\n                set: function(i) {\n                    if (this._constructed) {\n                        var o = (0, Qc.default)(i, {\n                            isIdentifier: !0\n                        });\n                        o !== i ? ((0, Kc.ensureObject)(this, \"raws\"), this.raws.value = o) : this.raws && delete this.raws.value;\n                    }\n                    this._value = i;\n                }\n            }\n        ]), t;\n    }(Jc.default);\n    Qt.default = rd;\n    bs.exports = Qt.default;\n});\nvar Di = T((Kt, vs)=>{\n    \"use strict\";\n    Kt.__esModule = !0;\n    Kt.default = void 0;\n    var nd = od(ze()), id = pe();\n    function od(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function ud(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, mi(e, t);\n    }\n    function mi(e, t) {\n        return mi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, mi(e, t);\n    }\n    var sd = function(e) {\n        ud(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = id.COMMENT, r;\n        }\n        return t;\n    }(nd.default);\n    Kt.default = sd;\n    vs.exports = Kt.default;\n});\nvar bi = T((Jt, ys)=>{\n    \"use strict\";\n    Jt.__esModule = !0;\n    Jt.default = void 0;\n    var ad = fd(ze()), ld = pe();\n    function fd(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function cd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, gi(e, t);\n    }\n    function gi(e, t) {\n        return gi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, gi(e, t);\n    }\n    var dd = function(e) {\n        cd(t, e);\n        function t(r) {\n            var i;\n            return i = e.call(this, r) || this, i.type = ld.ID, i;\n        }\n        var n = t.prototype;\n        return n.valueToString = function() {\n            return \"#\" + e.prototype.valueToString.call(this);\n        }, t;\n    }(ad.default);\n    Jt.default = dd;\n    ys.exports = Jt.default;\n});\nvar on = T((Zt, ws)=>{\n    \"use strict\";\n    Zt.__esModule = !0;\n    Zt.default = void 0;\n    var pd = Fs(nn()), hd = jt(), md = Fs(ze());\n    function Fs(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function xs(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function Dd(e, t, n) {\n        return t && xs(e.prototype, t), n && xs(e, n), e;\n    }\n    function gd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, vi(e, t);\n    }\n    function vi(e, t) {\n        return vi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, vi(e, t);\n    }\n    var bd = function(e) {\n        gd(t, e);\n        function t() {\n            return e.apply(this, arguments) || this;\n        }\n        var n = t.prototype;\n        return n.qualifiedName = function(i) {\n            return this.namespace ? this.namespaceString + \"|\" + i : i;\n        }, n.valueToString = function() {\n            return this.qualifiedName(e.prototype.valueToString.call(this));\n        }, Dd(t, [\n            {\n                key: \"namespace\",\n                get: function() {\n                    return this._namespace;\n                },\n                set: function(i) {\n                    if (i === !0 || i === \"*\" || i === \"&\") {\n                        this._namespace = i, this.raws && delete this.raws.namespace;\n                        return;\n                    }\n                    var o = (0, pd.default)(i, {\n                        isIdentifier: !0\n                    });\n                    this._namespace = i, o !== i ? ((0, hd.ensureObject)(this, \"raws\"), this.raws.namespace = o) : this.raws && delete this.raws.namespace;\n                }\n            },\n            {\n                key: \"ns\",\n                get: function() {\n                    return this._namespace;\n                },\n                set: function(i) {\n                    this.namespace = i;\n                }\n            },\n            {\n                key: \"namespaceString\",\n                get: function() {\n                    if (this.namespace) {\n                        var i = this.stringifyProperty(\"namespace\");\n                        return i === !0 ? \"\" : i;\n                    } else return \"\";\n                }\n            }\n        ]), t;\n    }(md.default);\n    Zt.default = bd;\n    ws.exports = Zt.default;\n});\nvar xi = T((er, Es)=>{\n    \"use strict\";\n    er.__esModule = !0;\n    er.default = void 0;\n    var vd = xd(on()), yd = pe();\n    function xd(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Fd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, yi(e, t);\n    }\n    function yi(e, t) {\n        return yi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, yi(e, t);\n    }\n    var wd = function(e) {\n        Fd(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = yd.TAG, r;\n        }\n        return t;\n    }(vd.default);\n    er.default = wd;\n    Es.exports = er.default;\n});\nvar wi = T((tr, Ss)=>{\n    \"use strict\";\n    tr.__esModule = !0;\n    tr.default = void 0;\n    var Ed = Cd(ze()), Sd = pe();\n    function Cd(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function _d(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Fi(e, t);\n    }\n    function Fi(e, t) {\n        return Fi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, Fi(e, t);\n    }\n    var kd = function(e) {\n        _d(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = Sd.STRING, r;\n        }\n        return t;\n    }(Ed.default);\n    tr.default = kd;\n    Ss.exports = tr.default;\n});\nvar Si = T((rr, Cs)=>{\n    \"use strict\";\n    rr.__esModule = !0;\n    rr.default = void 0;\n    var Td = Od(rn()), Ad = pe();\n    function Od(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Pd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Ei(e, t);\n    }\n    function Ei(e, t) {\n        return Ei = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, Ei(e, t);\n    }\n    var Bd = function(e) {\n        Pd(t, e);\n        function t(r) {\n            var i;\n            return i = e.call(this, r) || this, i.type = Ad.PSEUDO, i;\n        }\n        var n = t.prototype;\n        return n.toString = function() {\n            var i = this.length ? \"(\" + this.map(String).join(\",\") + \")\" : \"\";\n            return [\n                this.rawSpaceBefore,\n                this.stringifyProperty(\"value\"),\n                i,\n                this.rawSpaceAfter\n            ].join(\"\");\n        }, t;\n    }(Td.default);\n    rr.default = Bd;\n    Cs.exports = rr.default;\n});\nvar ks = T((gb, _s)=>{\n    _s.exports = function(t, n) {\n        return function(...r) {\n            return console.warn(n), t(...r);\n        };\n    };\n});\nvar Oi = T((or)=>{\n    \"use strict\";\n    or.__esModule = !0;\n    or.unescapeValue = Ai;\n    or.default = void 0;\n    var nr = Ti(nn()), Id = Ti(ui()), Rd = Ti(on()), Ld = pe(), Ci;\n    function Ti(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Ts(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function Md(e, t, n) {\n        return t && Ts(e.prototype, t), n && Ts(e, n), e;\n    }\n    function Nd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, ki(e, t);\n    }\n    function ki(e, t) {\n        return ki = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, ki(e, t);\n    }\n    var ir = ks(), Wd = /^('|\")([^]*)\\1$/, $d = ir(function() {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.\"), qd = ir(function() {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\"), zd = ir(function() {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n    function Ai(e) {\n        var t = !1, n = null, r = e, i = r.match(Wd);\n        return i && (n = i[1], r = i[2]), r = (0, Id.default)(r), r !== e && (t = !0), {\n            deprecatedUsage: t,\n            unescaped: r,\n            quoteMark: n\n        };\n    }\n    function Ud(e) {\n        if (e.quoteMark !== void 0 || e.value === void 0) return e;\n        zd();\n        var t = Ai(e.value), n = t.quoteMark, r = t.unescaped;\n        return e.raws || (e.raws = {}), e.raws.value === void 0 && (e.raws.value = e.value), e.value = r, e.quoteMark = n, e;\n    }\n    var un = function(e) {\n        Nd(t, e);\n        function t(r) {\n            var i;\n            return r === void 0 && (r = {}), i = e.call(this, Ud(r)) || this, i.type = Ld.ATTRIBUTE, i.raws = i.raws || {}, Object.defineProperty(i.raws, \"unquoted\", {\n                get: ir(function() {\n                    return i.value;\n                }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n                set: ir(function() {\n                    return i.value;\n                }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n            }), i._constructed = !0, i;\n        }\n        var n = t.prototype;\n        return n.getQuotedValue = function(i) {\n            i === void 0 && (i = {});\n            var o = this._determineQuoteMark(i), u = _i[o], s = (0, nr.default)(this._value, u);\n            return s;\n        }, n._determineQuoteMark = function(i) {\n            return i.smart ? this.smartQuoteMark(i) : this.preferredQuoteMark(i);\n        }, n.setValue = function(i, o) {\n            o === void 0 && (o = {}), this._value = i, this._quoteMark = this._determineQuoteMark(o), this._syncRawValue();\n        }, n.smartQuoteMark = function(i) {\n            var o = this.value, u = o.replace(/[^']/g, \"\").length, s = o.replace(/[^\"]/g, \"\").length;\n            if (u + s === 0) {\n                var a = (0, nr.default)(o, {\n                    isIdentifier: !0\n                });\n                if (a === o) return t.NO_QUOTE;\n                var l = this.preferredQuoteMark(i);\n                if (l === t.NO_QUOTE) {\n                    var f = this.quoteMark || i.quoteMark || t.DOUBLE_QUOTE, c = _i[f], d = (0, nr.default)(o, c);\n                    if (d.length < a.length) return f;\n                }\n                return l;\n            } else return s === u ? this.preferredQuoteMark(i) : s < u ? t.DOUBLE_QUOTE : t.SINGLE_QUOTE;\n        }, n.preferredQuoteMark = function(i) {\n            var o = i.preferCurrentQuoteMark ? this.quoteMark : i.quoteMark;\n            return o === void 0 && (o = i.preferCurrentQuoteMark ? i.quoteMark : this.quoteMark), o === void 0 && (o = t.DOUBLE_QUOTE), o;\n        }, n._syncRawValue = function() {\n            var i = (0, nr.default)(this._value, _i[this.quoteMark]);\n            i === this._value ? this.raws && delete this.raws.value : this.raws.value = i;\n        }, n._handleEscapes = function(i, o) {\n            if (this._constructed) {\n                var u = (0, nr.default)(o, {\n                    isIdentifier: !0\n                });\n                u !== o ? this.raws[i] = u : delete this.raws[i];\n            }\n        }, n._spacesFor = function(i) {\n            var o = {\n                before: \"\",\n                after: \"\"\n            }, u = this.spaces[i] || {}, s = this.raws.spaces && this.raws.spaces[i] || {};\n            return Object.assign(o, u, s);\n        }, n._stringFor = function(i, o, u) {\n            o === void 0 && (o = i), u === void 0 && (u = As);\n            var s = this._spacesFor(o);\n            return u(this.stringifyProperty(i), s);\n        }, n.offsetOf = function(i) {\n            var o = 1, u = this._spacesFor(\"attribute\");\n            if (o += u.before.length, i === \"namespace\" || i === \"ns\") return this.namespace ? o : -1;\n            if (i === \"attributeNS\" || (o += this.namespaceString.length, this.namespace && (o += 1), i === \"attribute\")) return o;\n            o += this.stringifyProperty(\"attribute\").length, o += u.after.length;\n            var s = this._spacesFor(\"operator\");\n            o += s.before.length;\n            var a = this.stringifyProperty(\"operator\");\n            if (i === \"operator\") return a ? o : -1;\n            o += a.length, o += s.after.length;\n            var l = this._spacesFor(\"value\");\n            o += l.before.length;\n            var f = this.stringifyProperty(\"value\");\n            if (i === \"value\") return f ? o : -1;\n            o += f.length, o += l.after.length;\n            var c = this._spacesFor(\"insensitive\");\n            return o += c.before.length, i === \"insensitive\" && this.insensitive ? o : -1;\n        }, n.toString = function() {\n            var i = this, o = [\n                this.rawSpaceBefore,\n                \"[\"\n            ];\n            return o.push(this._stringFor(\"qualifiedAttribute\", \"attribute\")), this.operator && (this.value || this.value === \"\") && (o.push(this._stringFor(\"operator\")), o.push(this._stringFor(\"value\")), o.push(this._stringFor(\"insensitiveFlag\", \"insensitive\", function(u, s) {\n                return u.length > 0 && !i.quoted && s.before.length === 0 && !(i.spaces.value && i.spaces.value.after) && (s.before = \" \"), As(u, s);\n            }))), o.push(\"]\"), o.push(this.rawSpaceAfter), o.join(\"\");\n        }, Md(t, [\n            {\n                key: \"quoted\",\n                get: function() {\n                    var i = this.quoteMark;\n                    return i === \"'\" || i === '\"';\n                },\n                set: function(i) {\n                    qd();\n                }\n            },\n            {\n                key: \"quoteMark\",\n                get: function() {\n                    return this._quoteMark;\n                },\n                set: function(i) {\n                    if (!this._constructed) {\n                        this._quoteMark = i;\n                        return;\n                    }\n                    this._quoteMark !== i && (this._quoteMark = i, this._syncRawValue());\n                }\n            },\n            {\n                key: \"qualifiedAttribute\",\n                get: function() {\n                    return this.qualifiedName(this.raws.attribute || this.attribute);\n                }\n            },\n            {\n                key: \"insensitiveFlag\",\n                get: function() {\n                    return this.insensitive ? \"i\" : \"\";\n                }\n            },\n            {\n                key: \"value\",\n                get: function() {\n                    return this._value;\n                },\n                set: function(i) {\n                    if (this._constructed) {\n                        var o = Ai(i), u = o.deprecatedUsage, s = o.unescaped, a = o.quoteMark;\n                        if (u && $d(), s === this._value && a === this._quoteMark) return;\n                        this._value = s, this._quoteMark = a, this._syncRawValue();\n                    } else this._value = i;\n                }\n            },\n            {\n                key: \"attribute\",\n                get: function() {\n                    return this._attribute;\n                },\n                set: function(i) {\n                    this._handleEscapes(\"attribute\", i), this._attribute = i;\n                }\n            }\n        ]), t;\n    }(Rd.default);\n    or.default = un;\n    un.NO_QUOTE = null;\n    un.SINGLE_QUOTE = \"'\";\n    un.DOUBLE_QUOTE = '\"';\n    var _i = (Ci = {\n        \"'\": {\n            quotes: \"single\",\n            wrap: !0\n        },\n        '\"': {\n            quotes: \"double\",\n            wrap: !0\n        }\n    }, Ci[null] = {\n        isIdentifier: !0\n    }, Ci);\n    function As(e, t) {\n        return \"\" + t.before + e + t.after;\n    }\n});\nvar Bi = T((ur, Os)=>{\n    \"use strict\";\n    ur.__esModule = !0;\n    ur.default = void 0;\n    var Gd = Hd(on()), jd = pe();\n    function Hd(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Vd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Pi(e, t);\n    }\n    function Pi(e, t) {\n        return Pi = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, Pi(e, t);\n    }\n    var Yd = function(e) {\n        Vd(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = jd.UNIVERSAL, r.value = \"*\", r;\n        }\n        return t;\n    }(Gd.default);\n    ur.default = Yd;\n    Os.exports = ur.default;\n});\nvar Ri = T((sr, Ps)=>{\n    \"use strict\";\n    sr.__esModule = !0;\n    sr.default = void 0;\n    var Xd = Kd(ze()), Qd = pe();\n    function Kd(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Jd(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Ii(e, t);\n    }\n    function Ii(e, t) {\n        return Ii = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, Ii(e, t);\n    }\n    var Zd = function(e) {\n        Jd(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = Qd.COMBINATOR, r;\n        }\n        return t;\n    }(Xd.default);\n    sr.default = Zd;\n    Ps.exports = sr.default;\n});\nvar Mi = T((ar, Bs)=>{\n    \"use strict\";\n    ar.__esModule = !0;\n    ar.default = void 0;\n    var ep = rp(ze()), tp = pe();\n    function rp(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function np(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, Li(e, t);\n    }\n    function Li(e, t) {\n        return Li = Object.setPrototypeOf || function(r, i) {\n            return r.__proto__ = i, r;\n        }, Li(e, t);\n    }\n    var ip = function(e) {\n        np(t, e);\n        function t(n) {\n            var r;\n            return r = e.call(this, n) || this, r.type = tp.NESTING, r.value = \"&\", r;\n        }\n        return t;\n    }(ep.default);\n    ar.default = ip;\n    Bs.exports = ar.default;\n});\nvar Rs = T((sn, Is)=>{\n    \"use strict\";\n    sn.__esModule = !0;\n    sn.default = op;\n    function op(e) {\n        return e.sort(function(t, n) {\n            return t - n;\n        });\n    }\n    Is.exports = sn.default;\n});\nvar Ni = T((_)=>{\n    \"use strict\";\n    _.__esModule = !0;\n    _.combinator = _.word = _.comment = _.str = _.tab = _.newline = _.feed = _.cr = _.backslash = _.bang = _.slash = _.doubleQuote = _.singleQuote = _.space = _.greaterThan = _.pipe = _.equals = _.plus = _.caret = _.tilde = _.dollar = _.closeSquare = _.openSquare = _.closeParenthesis = _.openParenthesis = _.semicolon = _.colon = _.comma = _.at = _.asterisk = _.ampersand = void 0;\n    var up = 38;\n    _.ampersand = up;\n    var sp = 42;\n    _.asterisk = sp;\n    var ap = 64;\n    _.at = ap;\n    var lp = 44;\n    _.comma = lp;\n    var fp = 58;\n    _.colon = fp;\n    var cp = 59;\n    _.semicolon = cp;\n    var dp = 40;\n    _.openParenthesis = dp;\n    var pp = 41;\n    _.closeParenthesis = pp;\n    var hp = 91;\n    _.openSquare = hp;\n    var mp = 93;\n    _.closeSquare = mp;\n    var Dp = 36;\n    _.dollar = Dp;\n    var gp = 126;\n    _.tilde = gp;\n    var bp = 94;\n    _.caret = bp;\n    var vp = 43;\n    _.plus = vp;\n    var yp = 61;\n    _.equals = yp;\n    var xp = 124;\n    _.pipe = xp;\n    var Fp = 62;\n    _.greaterThan = Fp;\n    var wp = 32;\n    _.space = wp;\n    var Ls = 39;\n    _.singleQuote = Ls;\n    var Ep = 34;\n    _.doubleQuote = Ep;\n    var Sp = 47;\n    _.slash = Sp;\n    var Cp = 33;\n    _.bang = Cp;\n    var _p = 92;\n    _.backslash = _p;\n    var kp = 13;\n    _.cr = kp;\n    var Tp = 12;\n    _.feed = Tp;\n    var Ap = 10;\n    _.newline = Ap;\n    var Op = 9;\n    _.tab = Op;\n    var Pp = Ls;\n    _.str = Pp;\n    var Bp = -1;\n    _.comment = Bp;\n    var Ip = -2;\n    _.word = Ip;\n    var Rp = -3;\n    _.combinator = Rp;\n});\nvar Ws = T((lr)=>{\n    \"use strict\";\n    lr.__esModule = !0;\n    lr.default = zp;\n    lr.FIELDS = void 0;\n    var E = Lp(Ni()), Ft, V;\n    function Ns() {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap;\n        return Ns = function() {\n            return e;\n        }, e;\n    }\n    function Lp(e) {\n        if (e && e.__esModule) return e;\n        if (e === null || typeof e != \"object\" && typeof e != \"function\") return {\n            default: e\n        };\n        var t = Ns();\n        if (t && t.has(e)) return t.get(e);\n        var n = {}, r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var i in e)if (Object.prototype.hasOwnProperty.call(e, i)) {\n            var o = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n            o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i];\n        }\n        return n.default = e, t && t.set(e, n), n;\n    }\n    var Mp = (Ft = {}, Ft[E.tab] = !0, Ft[E.newline] = !0, Ft[E.cr] = !0, Ft[E.feed] = !0, Ft), Np = (V = {}, V[E.space] = !0, V[E.tab] = !0, V[E.newline] = !0, V[E.cr] = !0, V[E.feed] = !0, V[E.ampersand] = !0, V[E.asterisk] = !0, V[E.bang] = !0, V[E.comma] = !0, V[E.colon] = !0, V[E.semicolon] = !0, V[E.openParenthesis] = !0, V[E.closeParenthesis] = !0, V[E.openSquare] = !0, V[E.closeSquare] = !0, V[E.singleQuote] = !0, V[E.doubleQuote] = !0, V[E.plus] = !0, V[E.pipe] = !0, V[E.tilde] = !0, V[E.greaterThan] = !0, V[E.equals] = !0, V[E.dollar] = !0, V[E.caret] = !0, V[E.slash] = !0, V), Wi = {}, Ms = \"0123456789abcdefABCDEF\";\n    for(an = 0; an < Ms.length; an++)Wi[Ms.charCodeAt(an)] = !0;\n    var an;\n    function Wp(e, t) {\n        var n = t, r;\n        do {\n            if (r = e.charCodeAt(n), Np[r]) return n - 1;\n            r === E.backslash ? n = $p(e, n) + 1 : n++;\n        }while (n < e.length);\n        return n - 1;\n    }\n    function $p(e, t) {\n        var n = t, r = e.charCodeAt(n + 1);\n        if (!Mp[r]) if (Wi[r]) {\n            var i = 0;\n            do n++, i++, r = e.charCodeAt(n + 1);\n            while (Wi[r] && i < 6);\n            i < 6 && r === E.space && n++;\n        } else n++;\n        return n;\n    }\n    var qp = {\n        TYPE: 0,\n        START_LINE: 1,\n        START_COL: 2,\n        END_LINE: 3,\n        END_COL: 4,\n        START_POS: 5,\n        END_POS: 6\n    };\n    lr.FIELDS = qp;\n    function zp(e) {\n        var t = [], n = e.css.valueOf(), r = n, i = r.length, o = -1, u = 1, s = 0, a = 0, l, f, c, d, h, p, m, v, D, b, y, F, x;\n        function k(B, I) {\n            if (e.safe) n += I, D = n.length - 1;\n            else throw e.error(\"Unclosed \" + B, u, s - o, s);\n        }\n        for(; s < i;){\n            switch(l = n.charCodeAt(s), l === E.newline && (o = s, u += 1), l){\n                case E.space:\n                case E.tab:\n                case E.newline:\n                case E.cr:\n                case E.feed:\n                    D = s;\n                    do D += 1, l = n.charCodeAt(D), l === E.newline && (o = D, u += 1);\n                    while (l === E.space || l === E.newline || l === E.tab || l === E.cr || l === E.feed);\n                    x = E.space, d = u, c = D - o - 1, a = D;\n                    break;\n                case E.plus:\n                case E.greaterThan:\n                case E.tilde:\n                case E.pipe:\n                    D = s;\n                    do D += 1, l = n.charCodeAt(D);\n                    while (l === E.plus || l === E.greaterThan || l === E.tilde || l === E.pipe);\n                    x = E.combinator, d = u, c = s - o, a = D;\n                    break;\n                case E.asterisk:\n                case E.ampersand:\n                case E.bang:\n                case E.comma:\n                case E.equals:\n                case E.dollar:\n                case E.caret:\n                case E.openSquare:\n                case E.closeSquare:\n                case E.colon:\n                case E.semicolon:\n                case E.openParenthesis:\n                case E.closeParenthesis:\n                    D = s, x = l, d = u, c = s - o, a = D + 1;\n                    break;\n                case E.singleQuote:\n                case E.doubleQuote:\n                    F = l === E.singleQuote ? \"'\" : '\"', D = s;\n                    do for(h = !1, D = n.indexOf(F, D + 1), D === -1 && k(\"quote\", F), p = D; n.charCodeAt(p - 1) === E.backslash;)p -= 1, h = !h;\n                    while (h);\n                    x = E.str, d = u, c = s - o, a = D + 1;\n                    break;\n                default:\n                    l === E.slash && n.charCodeAt(s + 1) === E.asterisk ? (D = n.indexOf(\"*/\", s + 2) + 1, D === 0 && k(\"comment\", \"*/\"), f = n.slice(s, D + 1), v = f.split(`\n`), m = v.length - 1, m > 0 ? (b = u + m, y = D - v[m].length) : (b = u, y = o), x = E.comment, u = b, d = b, c = D - y) : l === E.slash ? (D = s, x = l, d = u, c = s - o, a = D + 1) : (D = Wp(n, s), x = E.word, d = u, c = D - o), a = D + 1;\n                    break;\n            }\n            t.push([\n                x,\n                u,\n                s - o,\n                d,\n                c,\n                s,\n                a\n            ]), y && (o = y, y = null), s = a;\n        }\n        return t;\n    }\n});\nvar Vs = T((fr, Hs)=>{\n    \"use strict\";\n    fr.__esModule = !0;\n    fr.default = void 0;\n    var Up = Se(li()), $i = Se(ci()), Gp = Se(hi()), $s = Se(Di()), jp = Se(bi()), Hp = Se(xi()), qi = Se(wi()), Vp = Se(Si()), qs = ln(Oi()), Yp = Se(Bi()), zi = Se(Ri()), Xp = Se(Mi()), Qp = Se(Rs()), w = ln(Ws()), C = ln(Ni()), Kp = ln(pe()), re = jt(), st, Ui;\n    function js() {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap;\n        return js = function() {\n            return e;\n        }, e;\n    }\n    function ln(e) {\n        if (e && e.__esModule) return e;\n        if (e === null || typeof e != \"object\" && typeof e != \"function\") return {\n            default: e\n        };\n        var t = js();\n        if (t && t.has(e)) return t.get(e);\n        var n = {}, r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var i in e)if (Object.prototype.hasOwnProperty.call(e, i)) {\n            var o = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n            o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i];\n        }\n        return n.default = e, t && t.set(e, n), n;\n    }\n    function Se(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function zs(e, t) {\n        for(var n = 0; n < t.length; n++){\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n    }\n    function Jp(e, t, n) {\n        return t && zs(e.prototype, t), n && zs(e, n), e;\n    }\n    var Hi = (st = {}, st[C.space] = !0, st[C.cr] = !0, st[C.feed] = !0, st[C.newline] = !0, st[C.tab] = !0, st), Zp = Object.assign({}, Hi, (Ui = {}, Ui[C.comment] = !0, Ui));\n    function Us(e) {\n        return {\n            line: e[w.FIELDS.START_LINE],\n            column: e[w.FIELDS.START_COL]\n        };\n    }\n    function Gs(e) {\n        return {\n            line: e[w.FIELDS.END_LINE],\n            column: e[w.FIELDS.END_COL]\n        };\n    }\n    function at(e, t, n, r) {\n        return {\n            start: {\n                line: e,\n                column: t\n            },\n            end: {\n                line: n,\n                column: r\n            }\n        };\n    }\n    function wt(e) {\n        return at(e[w.FIELDS.START_LINE], e[w.FIELDS.START_COL], e[w.FIELDS.END_LINE], e[w.FIELDS.END_COL]);\n    }\n    function Gi(e, t) {\n        if (e) return at(e[w.FIELDS.START_LINE], e[w.FIELDS.START_COL], t[w.FIELDS.END_LINE], t[w.FIELDS.END_COL]);\n    }\n    function Et(e, t) {\n        var n = e[t];\n        if (typeof n == \"string\") return n.indexOf(\"\\\\\") !== -1 && ((0, re.ensureObject)(e, \"raws\"), e[t] = (0, re.unesc)(n), e.raws[t] === void 0 && (e.raws[t] = n)), e;\n    }\n    function ji(e, t) {\n        for(var n = -1, r = []; (n = e.indexOf(t, n + 1)) !== -1;)r.push(n);\n        return r;\n    }\n    function e0() {\n        var e = Array.prototype.concat.apply([], arguments);\n        return e.filter(function(t, n) {\n            return n === e.indexOf(t);\n        });\n    }\n    var t0 = function() {\n        function e(n, r) {\n            r === void 0 && (r = {}), this.rule = n, this.options = Object.assign({\n                lossy: !1,\n                safe: !1\n            }, r), this.position = 0, this.css = typeof this.rule == \"string\" ? this.rule : this.rule.selector, this.tokens = (0, w.default)({\n                css: this.css,\n                error: this._errorGenerator(),\n                safe: this.options.safe\n            });\n            var i = Gi(this.tokens[0], this.tokens[this.tokens.length - 1]);\n            this.root = new Up.default({\n                source: i\n            }), this.root.errorGenerator = this._errorGenerator();\n            var o = new $i.default({\n                source: {\n                    start: {\n                        line: 1,\n                        column: 1\n                    }\n                }\n            });\n            this.root.append(o), this.current = o, this.loop();\n        }\n        var t = e.prototype;\n        return t._errorGenerator = function() {\n            var r = this;\n            return function(i, o) {\n                return typeof r.rule == \"string\" ? new Error(i) : r.rule.error(i, o);\n            };\n        }, t.attribute = function() {\n            var r = [], i = this.currToken;\n            for(this.position++; this.position < this.tokens.length && this.currToken[w.FIELDS.TYPE] !== C.closeSquare;)r.push(this.currToken), this.position++;\n            if (this.currToken[w.FIELDS.TYPE] !== C.closeSquare) return this.expected(\"closing square bracket\", this.currToken[w.FIELDS.START_POS]);\n            var o = r.length, u = {\n                source: at(i[1], i[2], this.currToken[3], this.currToken[4]),\n                sourceIndex: i[w.FIELDS.START_POS]\n            };\n            if (o === 1 && !~[\n                C.word\n            ].indexOf(r[0][w.FIELDS.TYPE])) return this.expected(\"attribute\", r[0][w.FIELDS.START_POS]);\n            for(var s = 0, a = \"\", l = \"\", f = null, c = !1; s < o;){\n                var d = r[s], h = this.content(d), p = r[s + 1];\n                switch(d[w.FIELDS.TYPE]){\n                    case C.space:\n                        if (c = !0, this.options.lossy) break;\n                        if (f) {\n                            (0, re.ensureObject)(u, \"spaces\", f);\n                            var m = u.spaces[f].after || \"\";\n                            u.spaces[f].after = m + h;\n                            var v = (0, re.getProp)(u, \"raws\", \"spaces\", f, \"after\") || null;\n                            v && (u.raws.spaces[f].after = v + h);\n                        } else a = a + h, l = l + h;\n                        break;\n                    case C.asterisk:\n                        if (p[w.FIELDS.TYPE] === C.equals) u.operator = h, f = \"operator\";\n                        else if ((!u.namespace || f === \"namespace\" && !c) && p) {\n                            a && ((0, re.ensureObject)(u, \"spaces\", \"attribute\"), u.spaces.attribute.before = a, a = \"\"), l && ((0, re.ensureObject)(u, \"raws\", \"spaces\", \"attribute\"), u.raws.spaces.attribute.before = a, l = \"\"), u.namespace = (u.namespace || \"\") + h;\n                            var D = (0, re.getProp)(u, \"raws\", \"namespace\") || null;\n                            D && (u.raws.namespace += h), f = \"namespace\";\n                        }\n                        c = !1;\n                        break;\n                    case C.dollar:\n                        if (f === \"value\") {\n                            var b = (0, re.getProp)(u, \"raws\", \"value\");\n                            u.value += \"$\", b && (u.raws.value = b + \"$\");\n                            break;\n                        }\n                    case C.caret:\n                        p[w.FIELDS.TYPE] === C.equals && (u.operator = h, f = \"operator\"), c = !1;\n                        break;\n                    case C.combinator:\n                        if (h === \"~\" && p[w.FIELDS.TYPE] === C.equals && (u.operator = h, f = \"operator\"), h !== \"|\") {\n                            c = !1;\n                            break;\n                        }\n                        p[w.FIELDS.TYPE] === C.equals ? (u.operator = h, f = \"operator\") : !u.namespace && !u.attribute && (u.namespace = !0), c = !1;\n                        break;\n                    case C.word:\n                        if (p && this.content(p) === \"|\" && r[s + 2] && r[s + 2][w.FIELDS.TYPE] !== C.equals && !u.operator && !u.namespace) u.namespace = h, f = \"namespace\";\n                        else if (!u.attribute || f === \"attribute\" && !c) {\n                            a && ((0, re.ensureObject)(u, \"spaces\", \"attribute\"), u.spaces.attribute.before = a, a = \"\"), l && ((0, re.ensureObject)(u, \"raws\", \"spaces\", \"attribute\"), u.raws.spaces.attribute.before = l, l = \"\"), u.attribute = (u.attribute || \"\") + h;\n                            var y = (0, re.getProp)(u, \"raws\", \"attribute\") || null;\n                            y && (u.raws.attribute += h), f = \"attribute\";\n                        } else if (!u.value && u.value !== \"\" || f === \"value\" && !c) {\n                            var F = (0, re.unesc)(h), x = (0, re.getProp)(u, \"raws\", \"value\") || \"\", k = u.value || \"\";\n                            u.value = k + F, u.quoteMark = null, (F !== h || x) && ((0, re.ensureObject)(u, \"raws\"), u.raws.value = (x || k) + h), f = \"value\";\n                        } else {\n                            var B = h === \"i\" || h === \"I\";\n                            (u.value || u.value === \"\") && (u.quoteMark || c) ? (u.insensitive = B, (!B || h === \"I\") && ((0, re.ensureObject)(u, \"raws\"), u.raws.insensitiveFlag = h), f = \"insensitive\", a && ((0, re.ensureObject)(u, \"spaces\", \"insensitive\"), u.spaces.insensitive.before = a, a = \"\"), l && ((0, re.ensureObject)(u, \"raws\", \"spaces\", \"insensitive\"), u.raws.spaces.insensitive.before = l, l = \"\")) : (u.value || u.value === \"\") && (f = \"value\", u.value += h, u.raws.value && (u.raws.value += h));\n                        }\n                        c = !1;\n                        break;\n                    case C.str:\n                        if (!u.attribute || !u.operator) return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n                            index: d[w.FIELDS.START_POS]\n                        });\n                        var I = (0, qs.unescapeValue)(h), G = I.unescaped, ue = I.quoteMark;\n                        u.value = G, u.quoteMark = ue, f = \"value\", (0, re.ensureObject)(u, \"raws\"), u.raws.value = h, c = !1;\n                        break;\n                    case C.equals:\n                        if (!u.attribute) return this.expected(\"attribute\", d[w.FIELDS.START_POS], h);\n                        if (u.value) return this.error('Unexpected \"=\" found; an operator was already defined.', {\n                            index: d[w.FIELDS.START_POS]\n                        });\n                        u.operator = u.operator ? u.operator + h : h, f = \"operator\", c = !1;\n                        break;\n                    case C.comment:\n                        if (f) if (c || p && p[w.FIELDS.TYPE] === C.space || f === \"insensitive\") {\n                            var ae = (0, re.getProp)(u, \"spaces\", f, \"after\") || \"\", ie = (0, re.getProp)(u, \"raws\", \"spaces\", f, \"after\") || ae;\n                            (0, re.ensureObject)(u, \"raws\", \"spaces\", f), u.raws.spaces[f].after = ie + h;\n                        } else {\n                            var N = u[f] || \"\", R = (0, re.getProp)(u, \"raws\", f) || N;\n                            (0, re.ensureObject)(u, \"raws\"), u.raws[f] = R + h;\n                        }\n                        else l = l + h;\n                        break;\n                    default:\n                        return this.error('Unexpected \"' + h + '\" found.', {\n                            index: d[w.FIELDS.START_POS]\n                        });\n                }\n                s++;\n            }\n            Et(u, \"attribute\"), Et(u, \"namespace\"), this.newNode(new qs.default(u)), this.position++;\n        }, t.parseWhitespaceEquivalentTokens = function(r) {\n            r < 0 && (r = this.tokens.length);\n            var i = this.position, o = [], u = \"\", s = void 0;\n            do if (Hi[this.currToken[w.FIELDS.TYPE]]) this.options.lossy || (u += this.content());\n            else if (this.currToken[w.FIELDS.TYPE] === C.comment) {\n                var a = {};\n                u && (a.before = u, u = \"\"), s = new $s.default({\n                    value: this.content(),\n                    source: wt(this.currToken),\n                    sourceIndex: this.currToken[w.FIELDS.START_POS],\n                    spaces: a\n                }), o.push(s);\n            }\n            while (++this.position < r);\n            if (u) {\n                if (s) s.spaces.after = u;\n                else if (!this.options.lossy) {\n                    var l = this.tokens[i], f = this.tokens[this.position - 1];\n                    o.push(new qi.default({\n                        value: \"\",\n                        source: at(l[w.FIELDS.START_LINE], l[w.FIELDS.START_COL], f[w.FIELDS.END_LINE], f[w.FIELDS.END_COL]),\n                        sourceIndex: l[w.FIELDS.START_POS],\n                        spaces: {\n                            before: u,\n                            after: \"\"\n                        }\n                    }));\n                }\n            }\n            return o;\n        }, t.convertWhitespaceNodesToSpace = function(r, i) {\n            var o = this;\n            i === void 0 && (i = !1);\n            var u = \"\", s = \"\";\n            r.forEach(function(l) {\n                var f = o.lossySpace(l.spaces.before, i), c = o.lossySpace(l.rawSpaceBefore, i);\n                u += f + o.lossySpace(l.spaces.after, i && f.length === 0), s += f + l.value + o.lossySpace(l.rawSpaceAfter, i && c.length === 0);\n            }), s === u && (s = void 0);\n            var a = {\n                space: u,\n                rawSpace: s\n            };\n            return a;\n        }, t.isNamedCombinator = function(r) {\n            return r === void 0 && (r = this.position), this.tokens[r + 0] && this.tokens[r + 0][w.FIELDS.TYPE] === C.slash && this.tokens[r + 1] && this.tokens[r + 1][w.FIELDS.TYPE] === C.word && this.tokens[r + 2] && this.tokens[r + 2][w.FIELDS.TYPE] === C.slash;\n        }, t.namedCombinator = function() {\n            if (this.isNamedCombinator()) {\n                var r = this.content(this.tokens[this.position + 1]), i = (0, re.unesc)(r).toLowerCase(), o = {};\n                i !== r && (o.value = \"/\" + r + \"/\");\n                var u = new zi.default({\n                    value: \"/\" + i + \"/\",\n                    source: at(this.currToken[w.FIELDS.START_LINE], this.currToken[w.FIELDS.START_COL], this.tokens[this.position + 2][w.FIELDS.END_LINE], this.tokens[this.position + 2][w.FIELDS.END_COL]),\n                    sourceIndex: this.currToken[w.FIELDS.START_POS],\n                    raws: o\n                });\n                return this.position = this.position + 3, u;\n            } else this.unexpected();\n        }, t.combinator = function() {\n            var r = this;\n            if (this.content() === \"|\") return this.namespace();\n            var i = this.locateNextMeaningfulToken(this.position);\n            if (i < 0 || this.tokens[i][w.FIELDS.TYPE] === C.comma) {\n                var o = this.parseWhitespaceEquivalentTokens(i);\n                if (o.length > 0) {\n                    var u = this.current.last;\n                    if (u) {\n                        var s = this.convertWhitespaceNodesToSpace(o), a = s.space, l = s.rawSpace;\n                        l !== void 0 && (u.rawSpaceAfter += l), u.spaces.after += a;\n                    } else o.forEach(function(x) {\n                        return r.newNode(x);\n                    });\n                }\n                return;\n            }\n            var f = this.currToken, c = void 0;\n            i > this.position && (c = this.parseWhitespaceEquivalentTokens(i));\n            var d;\n            if (this.isNamedCombinator() ? d = this.namedCombinator() : this.currToken[w.FIELDS.TYPE] === C.combinator ? (d = new zi.default({\n                value: this.content(),\n                source: wt(this.currToken),\n                sourceIndex: this.currToken[w.FIELDS.START_POS]\n            }), this.position++) : Hi[this.currToken[w.FIELDS.TYPE]] || c || this.unexpected(), d) {\n                if (c) {\n                    var h = this.convertWhitespaceNodesToSpace(c), p = h.space, m = h.rawSpace;\n                    d.spaces.before = p, d.rawSpaceBefore = m;\n                }\n            } else {\n                var v = this.convertWhitespaceNodesToSpace(c, !0), D = v.space, b = v.rawSpace;\n                b || (b = D);\n                var y = {}, F = {\n                    spaces: {}\n                };\n                D.endsWith(\" \") && b.endsWith(\" \") ? (y.before = D.slice(0, D.length - 1), F.spaces.before = b.slice(0, b.length - 1)) : D.startsWith(\" \") && b.startsWith(\" \") ? (y.after = D.slice(1), F.spaces.after = b.slice(1)) : F.value = b, d = new zi.default({\n                    value: \" \",\n                    source: Gi(f, this.tokens[this.position - 1]),\n                    sourceIndex: f[w.FIELDS.START_POS],\n                    spaces: y,\n                    raws: F\n                });\n            }\n            return this.currToken && this.currToken[w.FIELDS.TYPE] === C.space && (d.spaces.after = this.optionalSpace(this.content()), this.position++), this.newNode(d);\n        }, t.comma = function() {\n            if (this.position === this.tokens.length - 1) {\n                this.root.trailingComma = !0, this.position++;\n                return;\n            }\n            this.current._inferEndPosition();\n            var r = new $i.default({\n                source: {\n                    start: Us(this.tokens[this.position + 1])\n                }\n            });\n            this.current.parent.append(r), this.current = r, this.position++;\n        }, t.comment = function() {\n            var r = this.currToken;\n            this.newNode(new $s.default({\n                value: this.content(),\n                source: wt(r),\n                sourceIndex: r[w.FIELDS.START_POS]\n            })), this.position++;\n        }, t.error = function(r, i) {\n            throw this.root.error(r, i);\n        }, t.missingBackslash = function() {\n            return this.error(\"Expected a backslash preceding the semicolon.\", {\n                index: this.currToken[w.FIELDS.START_POS]\n            });\n        }, t.missingParenthesis = function() {\n            return this.expected(\"opening parenthesis\", this.currToken[w.FIELDS.START_POS]);\n        }, t.missingSquareBracket = function() {\n            return this.expected(\"opening square bracket\", this.currToken[w.FIELDS.START_POS]);\n        }, t.unexpected = function() {\n            return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[w.FIELDS.START_POS]);\n        }, t.namespace = function() {\n            var r = this.prevToken && this.content(this.prevToken) || !0;\n            if (this.nextToken[w.FIELDS.TYPE] === C.word) return this.position++, this.word(r);\n            if (this.nextToken[w.FIELDS.TYPE] === C.asterisk) return this.position++, this.universal(r);\n        }, t.nesting = function() {\n            if (this.nextToken) {\n                var r = this.content(this.nextToken);\n                if (r === \"|\") {\n                    this.position++;\n                    return;\n                }\n            }\n            var i = this.currToken;\n            this.newNode(new Xp.default({\n                value: this.content(),\n                source: wt(i),\n                sourceIndex: i[w.FIELDS.START_POS]\n            })), this.position++;\n        }, t.parentheses = function() {\n            var r = this.current.last, i = 1;\n            if (this.position++, r && r.type === Kp.PSEUDO) {\n                var o = new $i.default({\n                    source: {\n                        start: Us(this.tokens[this.position - 1])\n                    }\n                }), u = this.current;\n                for(r.append(o), this.current = o; this.position < this.tokens.length && i;)this.currToken[w.FIELDS.TYPE] === C.openParenthesis && i++, this.currToken[w.FIELDS.TYPE] === C.closeParenthesis && i--, i ? this.parse() : (this.current.source.end = Gs(this.currToken), this.current.parent.source.end = Gs(this.currToken), this.position++);\n                this.current = u;\n            } else {\n                for(var s = this.currToken, a = \"(\", l; this.position < this.tokens.length && i;)this.currToken[w.FIELDS.TYPE] === C.openParenthesis && i++, this.currToken[w.FIELDS.TYPE] === C.closeParenthesis && i--, l = this.currToken, a += this.parseParenthesisToken(this.currToken), this.position++;\n                r ? r.appendToPropertyAndEscape(\"value\", a, a) : this.newNode(new qi.default({\n                    value: a,\n                    source: at(s[w.FIELDS.START_LINE], s[w.FIELDS.START_COL], l[w.FIELDS.END_LINE], l[w.FIELDS.END_COL]),\n                    sourceIndex: s[w.FIELDS.START_POS]\n                }));\n            }\n            if (i) return this.expected(\"closing parenthesis\", this.currToken[w.FIELDS.START_POS]);\n        }, t.pseudo = function() {\n            for(var r = this, i = \"\", o = this.currToken; this.currToken && this.currToken[w.FIELDS.TYPE] === C.colon;)i += this.content(), this.position++;\n            if (!this.currToken) return this.expected([\n                \"pseudo-class\",\n                \"pseudo-element\"\n            ], this.position - 1);\n            if (this.currToken[w.FIELDS.TYPE] === C.word) this.splitWord(!1, function(u, s) {\n                i += u, r.newNode(new Vp.default({\n                    value: i,\n                    source: Gi(o, r.currToken),\n                    sourceIndex: o[w.FIELDS.START_POS]\n                })), s > 1 && r.nextToken && r.nextToken[w.FIELDS.TYPE] === C.openParenthesis && r.error(\"Misplaced parenthesis.\", {\n                    index: r.nextToken[w.FIELDS.START_POS]\n                });\n            });\n            else return this.expected([\n                \"pseudo-class\",\n                \"pseudo-element\"\n            ], this.currToken[w.FIELDS.START_POS]);\n        }, t.space = function() {\n            var r = this.content();\n            this.position === 0 || this.prevToken[w.FIELDS.TYPE] === C.comma || this.prevToken[w.FIELDS.TYPE] === C.openParenthesis || this.current.nodes.every(function(i) {\n                return i.type === \"comment\";\n            }) ? (this.spaces = this.optionalSpace(r), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[w.FIELDS.TYPE] === C.comma || this.nextToken[w.FIELDS.TYPE] === C.closeParenthesis ? (this.current.last.spaces.after = this.optionalSpace(r), this.position++) : this.combinator();\n        }, t.string = function() {\n            var r = this.currToken;\n            this.newNode(new qi.default({\n                value: this.content(),\n                source: wt(r),\n                sourceIndex: r[w.FIELDS.START_POS]\n            })), this.position++;\n        }, t.universal = function(r) {\n            var i = this.nextToken;\n            if (i && this.content(i) === \"|\") return this.position++, this.namespace();\n            var o = this.currToken;\n            this.newNode(new Yp.default({\n                value: this.content(),\n                source: wt(o),\n                sourceIndex: o[w.FIELDS.START_POS]\n            }), r), this.position++;\n        }, t.splitWord = function(r, i) {\n            for(var o = this, u = this.nextToken, s = this.content(); u && ~[\n                C.dollar,\n                C.caret,\n                C.equals,\n                C.word\n            ].indexOf(u[w.FIELDS.TYPE]);){\n                this.position++;\n                var a = this.content();\n                if (s += a, a.lastIndexOf(\"\\\\\") === a.length - 1) {\n                    var l = this.nextToken;\n                    l && l[w.FIELDS.TYPE] === C.space && (s += this.requiredSpace(this.content(l)), this.position++);\n                }\n                u = this.nextToken;\n            }\n            var f = ji(s, \".\").filter(function(p) {\n                var m = s[p - 1] === \"\\\\\", v = /^\\d+\\.\\d+%$/.test(s);\n                return !m && !v;\n            }), c = ji(s, \"#\").filter(function(p) {\n                return s[p - 1] !== \"\\\\\";\n            }), d = ji(s, \"#{\");\n            d.length && (c = c.filter(function(p) {\n                return !~d.indexOf(p);\n            }));\n            var h = (0, Qp.default)(e0([\n                0\n            ].concat(f, c)));\n            h.forEach(function(p, m) {\n                var v = h[m + 1] || s.length, D = s.slice(p, v);\n                if (m === 0 && i) return i.call(o, D, h.length);\n                var b, y = o.currToken, F = y[w.FIELDS.START_POS] + h[m], x = at(y[1], y[2] + p, y[3], y[2] + (v - 1));\n                if (~f.indexOf(p)) {\n                    var k = {\n                        value: D.slice(1),\n                        source: x,\n                        sourceIndex: F\n                    };\n                    b = new Gp.default(Et(k, \"value\"));\n                } else if (~c.indexOf(p)) {\n                    var B = {\n                        value: D.slice(1),\n                        source: x,\n                        sourceIndex: F\n                    };\n                    b = new jp.default(Et(B, \"value\"));\n                } else {\n                    var I = {\n                        value: D,\n                        source: x,\n                        sourceIndex: F\n                    };\n                    Et(I, \"value\"), b = new Hp.default(I);\n                }\n                o.newNode(b, r), r = null;\n            }), this.position++;\n        }, t.word = function(r) {\n            var i = this.nextToken;\n            return i && this.content(i) === \"|\" ? (this.position++, this.namespace()) : this.splitWord(r);\n        }, t.loop = function() {\n            for(; this.position < this.tokens.length;)this.parse(!0);\n            return this.current._inferEndPosition(), this.root;\n        }, t.parse = function(r) {\n            switch(this.currToken[w.FIELDS.TYPE]){\n                case C.space:\n                    this.space();\n                    break;\n                case C.comment:\n                    this.comment();\n                    break;\n                case C.openParenthesis:\n                    this.parentheses();\n                    break;\n                case C.closeParenthesis:\n                    r && this.missingParenthesis();\n                    break;\n                case C.openSquare:\n                    this.attribute();\n                    break;\n                case C.dollar:\n                case C.caret:\n                case C.equals:\n                case C.word:\n                    this.word();\n                    break;\n                case C.colon:\n                    this.pseudo();\n                    break;\n                case C.comma:\n                    this.comma();\n                    break;\n                case C.asterisk:\n                    this.universal();\n                    break;\n                case C.ampersand:\n                    this.nesting();\n                    break;\n                case C.slash:\n                case C.combinator:\n                    this.combinator();\n                    break;\n                case C.str:\n                    this.string();\n                    break;\n                case C.closeSquare:\n                    this.missingSquareBracket();\n                case C.semicolon:\n                    this.missingBackslash();\n                default:\n                    this.unexpected();\n            }\n        }, t.expected = function(r, i, o) {\n            if (Array.isArray(r)) {\n                var u = r.pop();\n                r = r.join(\", \") + \" or \" + u;\n            }\n            var s = /^[aeiou]/.test(r[0]) ? \"an\" : \"a\";\n            return o ? this.error(\"Expected \" + s + \" \" + r + ', found \"' + o + '\" instead.', {\n                index: i\n            }) : this.error(\"Expected \" + s + \" \" + r + \".\", {\n                index: i\n            });\n        }, t.requiredSpace = function(r) {\n            return this.options.lossy ? \" \" : r;\n        }, t.optionalSpace = function(r) {\n            return this.options.lossy ? \"\" : r;\n        }, t.lossySpace = function(r, i) {\n            return this.options.lossy ? i ? \" \" : \"\" : r;\n        }, t.parseParenthesisToken = function(r) {\n            var i = this.content(r);\n            return r[w.FIELDS.TYPE] === C.space ? this.requiredSpace(i) : i;\n        }, t.newNode = function(r, i) {\n            return i && (/^ +$/.test(i) && (this.options.lossy || (this.spaces = (this.spaces || \"\") + i), i = !0), r.namespace = i, Et(r, \"namespace\")), this.spaces && (r.spaces.before = this.spaces, this.spaces = \"\"), this.current.append(r);\n        }, t.content = function(r) {\n            return r === void 0 && (r = this.currToken), this.css.slice(r[w.FIELDS.START_POS], r[w.FIELDS.END_POS]);\n        }, t.locateNextMeaningfulToken = function(r) {\n            r === void 0 && (r = this.position + 1);\n            for(var i = r; i < this.tokens.length;)if (Zp[this.tokens[i][w.FIELDS.TYPE]]) {\n                i++;\n                continue;\n            } else return i;\n            return -1;\n        }, Jp(e, [\n            {\n                key: \"currToken\",\n                get: function() {\n                    return this.tokens[this.position];\n                }\n            },\n            {\n                key: \"nextToken\",\n                get: function() {\n                    return this.tokens[this.position + 1];\n                }\n            },\n            {\n                key: \"prevToken\",\n                get: function() {\n                    return this.tokens[this.position - 1];\n                }\n            }\n        ]), e;\n    }();\n    fr.default = t0;\n    Hs.exports = fr.default;\n});\nvar Xs = T((cr, Ys)=>{\n    \"use strict\";\n    cr.__esModule = !0;\n    cr.default = void 0;\n    var r0 = n0(Vs());\n    function n0(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    var i0 = function() {\n        function e(n, r) {\n            this.func = n || function() {}, this.funcRes = null, this.options = r;\n        }\n        var t = e.prototype;\n        return t._shouldUpdateSelector = function(r, i) {\n            i === void 0 && (i = {});\n            var o = Object.assign({}, this.options, i);\n            return o.updateSelector === !1 ? !1 : typeof r != \"string\";\n        }, t._isLossy = function(r) {\n            r === void 0 && (r = {});\n            var i = Object.assign({}, this.options, r);\n            return i.lossless === !1;\n        }, t._root = function(r, i) {\n            i === void 0 && (i = {});\n            var o = new r0.default(r, this._parseOptions(i));\n            return o.root;\n        }, t._parseOptions = function(r) {\n            return {\n                lossy: this._isLossy(r)\n            };\n        }, t._run = function(r, i) {\n            var o = this;\n            return i === void 0 && (i = {}), new Promise(function(u, s) {\n                try {\n                    var a = o._root(r, i);\n                    Promise.resolve(o.func(a)).then(function(l) {\n                        var f = void 0;\n                        return o._shouldUpdateSelector(r, i) && (f = a.toString(), r.selector = f), {\n                            transform: l,\n                            root: a,\n                            string: f\n                        };\n                    }).then(u, s);\n                } catch (l) {\n                    s(l);\n                    return;\n                }\n            });\n        }, t._runSync = function(r, i) {\n            i === void 0 && (i = {});\n            var o = this._root(r, i), u = this.func(o);\n            if (u && typeof u.then == \"function\") throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n            var s = void 0;\n            return i.updateSelector && typeof r != \"string\" && (s = o.toString(), r.selector = s), {\n                transform: u,\n                root: o,\n                string: s\n            };\n        }, t.ast = function(r, i) {\n            return this._run(r, i).then(function(o) {\n                return o.root;\n            });\n        }, t.astSync = function(r, i) {\n            return this._runSync(r, i).root;\n        }, t.transform = function(r, i) {\n            return this._run(r, i).then(function(o) {\n                return o.transform;\n            });\n        }, t.transformSync = function(r, i) {\n            return this._runSync(r, i).transform;\n        }, t.process = function(r, i) {\n            return this._run(r, i).then(function(o) {\n                return o.string || o.root.toString();\n            });\n        }, t.processSync = function(r, i) {\n            var o = this._runSync(r, i);\n            return o.string || o.root.toString();\n        }, e;\n    }();\n    cr.default = i0;\n    Ys.exports = cr.default;\n});\nvar Qs = T((Q)=>{\n    \"use strict\";\n    Q.__esModule = !0;\n    Q.universal = Q.tag = Q.string = Q.selector = Q.root = Q.pseudo = Q.nesting = Q.id = Q.comment = Q.combinator = Q.className = Q.attribute = void 0;\n    var o0 = Ce(Oi()), u0 = Ce(hi()), s0 = Ce(Ri()), a0 = Ce(Di()), l0 = Ce(bi()), f0 = Ce(Mi()), c0 = Ce(Si()), d0 = Ce(li()), p0 = Ce(ci()), h0 = Ce(wi()), m0 = Ce(xi()), D0 = Ce(Bi());\n    function Ce(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    var g0 = function(t) {\n        return new o0.default(t);\n    };\n    Q.attribute = g0;\n    var b0 = function(t) {\n        return new u0.default(t);\n    };\n    Q.className = b0;\n    var v0 = function(t) {\n        return new s0.default(t);\n    };\n    Q.combinator = v0;\n    var y0 = function(t) {\n        return new a0.default(t);\n    };\n    Q.comment = y0;\n    var x0 = function(t) {\n        return new l0.default(t);\n    };\n    Q.id = x0;\n    var F0 = function(t) {\n        return new f0.default(t);\n    };\n    Q.nesting = F0;\n    var w0 = function(t) {\n        return new c0.default(t);\n    };\n    Q.pseudo = w0;\n    var E0 = function(t) {\n        return new d0.default(t);\n    };\n    Q.root = E0;\n    var S0 = function(t) {\n        return new p0.default(t);\n    };\n    Q.selector = S0;\n    var C0 = function(t) {\n        return new h0.default(t);\n    };\n    Q.string = C0;\n    var _0 = function(t) {\n        return new m0.default(t);\n    };\n    Q.tag = _0;\n    var k0 = function(t) {\n        return new D0.default(t);\n    };\n    Q.universal = k0;\n});\nvar ea = T((q)=>{\n    \"use strict\";\n    q.__esModule = !0;\n    q.isNode = Vi;\n    q.isPseudoElement = Zs;\n    q.isPseudoClass = W0;\n    q.isContainer = $0;\n    q.isNamespace = q0;\n    q.isUniversal = q.isTag = q.isString = q.isSelector = q.isRoot = q.isPseudo = q.isNesting = q.isIdentifier = q.isComment = q.isCombinator = q.isClassName = q.isAttribute = void 0;\n    var ne = pe(), ye, T0 = (ye = {}, ye[ne.ATTRIBUTE] = !0, ye[ne.CLASS] = !0, ye[ne.COMBINATOR] = !0, ye[ne.COMMENT] = !0, ye[ne.ID] = !0, ye[ne.NESTING] = !0, ye[ne.PSEUDO] = !0, ye[ne.ROOT] = !0, ye[ne.SELECTOR] = !0, ye[ne.STRING] = !0, ye[ne.TAG] = !0, ye[ne.UNIVERSAL] = !0, ye);\n    function Vi(e) {\n        return typeof e == \"object\" && T0[e.type];\n    }\n    function _e(e, t) {\n        return Vi(t) && t.type === e;\n    }\n    var Ks = _e.bind(null, ne.ATTRIBUTE);\n    q.isAttribute = Ks;\n    var A0 = _e.bind(null, ne.CLASS);\n    q.isClassName = A0;\n    var O0 = _e.bind(null, ne.COMBINATOR);\n    q.isCombinator = O0;\n    var P0 = _e.bind(null, ne.COMMENT);\n    q.isComment = P0;\n    var B0 = _e.bind(null, ne.ID);\n    q.isIdentifier = B0;\n    var I0 = _e.bind(null, ne.NESTING);\n    q.isNesting = I0;\n    var Yi = _e.bind(null, ne.PSEUDO);\n    q.isPseudo = Yi;\n    var R0 = _e.bind(null, ne.ROOT);\n    q.isRoot = R0;\n    var L0 = _e.bind(null, ne.SELECTOR);\n    q.isSelector = L0;\n    var M0 = _e.bind(null, ne.STRING);\n    q.isString = M0;\n    var Js = _e.bind(null, ne.TAG);\n    q.isTag = Js;\n    var N0 = _e.bind(null, ne.UNIVERSAL);\n    q.isUniversal = N0;\n    function Zs(e) {\n        return Yi(e) && e.value && (e.value.startsWith(\"::\") || e.value.toLowerCase() === \":before\" || e.value.toLowerCase() === \":after\" || e.value.toLowerCase() === \":first-letter\" || e.value.toLowerCase() === \":first-line\");\n    }\n    function W0(e) {\n        return Yi(e) && !Zs(e);\n    }\n    function $0(e) {\n        return !!(Vi(e) && e.walk);\n    }\n    function q0(e) {\n        return Ks(e) || Js(e);\n    }\n});\nvar ta = T((Pe)=>{\n    \"use strict\";\n    Pe.__esModule = !0;\n    var Xi = pe();\n    Object.keys(Xi).forEach(function(e) {\n        e === \"default\" || e === \"__esModule\" || e in Pe && Pe[e] === Xi[e] || (Pe[e] = Xi[e]);\n    });\n    var Qi = Qs();\n    Object.keys(Qi).forEach(function(e) {\n        e === \"default\" || e === \"__esModule\" || e in Pe && Pe[e] === Qi[e] || (Pe[e] = Qi[e]);\n    });\n    var Ki = ea();\n    Object.keys(Ki).forEach(function(e) {\n        e === \"default\" || e === \"__esModule\" || e in Pe && Pe[e] === Ki[e] || (Pe[e] = Ki[e]);\n    });\n});\nvar ia = T((dr, na)=>{\n    \"use strict\";\n    dr.__esModule = !0;\n    dr.default = void 0;\n    var z0 = j0(Xs()), U0 = G0(ta());\n    function ra() {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap;\n        return ra = function() {\n            return e;\n        }, e;\n    }\n    function G0(e) {\n        if (e && e.__esModule) return e;\n        if (e === null || typeof e != \"object\" && typeof e != \"function\") return {\n            default: e\n        };\n        var t = ra();\n        if (t && t.has(e)) return t.get(e);\n        var n = {}, r = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var i in e)if (Object.prototype.hasOwnProperty.call(e, i)) {\n            var o = r ? Object.getOwnPropertyDescriptor(e, i) : null;\n            o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i];\n        }\n        return n.default = e, t && t.set(e, n), n;\n    }\n    function j0(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    var Ji = function(t) {\n        return new z0.default(t);\n    };\n    Object.assign(Ji, U0);\n    delete Ji.__esModule;\n    var H0 = Ji;\n    dr.default = H0;\n    na.exports = dr.default;\n});\nvar oa = T((Zi)=>{\n    \"use strict\";\n    Object.defineProperty(Zi, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(Zi, \"default\", {\n        enumerable: !0,\n        get: ()=>V0\n    });\n    function V0(e) {\n        return e.replace(/\\\\,/g, \"\\\\2c \");\n    }\n});\nvar sa = T((Sb, ua)=>{\n    \"use strict\";\n    ua.exports = {\n        aliceblue: [\n            240,\n            248,\n            255\n        ],\n        antiquewhite: [\n            250,\n            235,\n            215\n        ],\n        aqua: [\n            0,\n            255,\n            255\n        ],\n        aquamarine: [\n            127,\n            255,\n            212\n        ],\n        azure: [\n            240,\n            255,\n            255\n        ],\n        beige: [\n            245,\n            245,\n            220\n        ],\n        bisque: [\n            255,\n            228,\n            196\n        ],\n        black: [\n            0,\n            0,\n            0\n        ],\n        blanchedalmond: [\n            255,\n            235,\n            205\n        ],\n        blue: [\n            0,\n            0,\n            255\n        ],\n        blueviolet: [\n            138,\n            43,\n            226\n        ],\n        brown: [\n            165,\n            42,\n            42\n        ],\n        burlywood: [\n            222,\n            184,\n            135\n        ],\n        cadetblue: [\n            95,\n            158,\n            160\n        ],\n        chartreuse: [\n            127,\n            255,\n            0\n        ],\n        chocolate: [\n            210,\n            105,\n            30\n        ],\n        coral: [\n            255,\n            127,\n            80\n        ],\n        cornflowerblue: [\n            100,\n            149,\n            237\n        ],\n        cornsilk: [\n            255,\n            248,\n            220\n        ],\n        crimson: [\n            220,\n            20,\n            60\n        ],\n        cyan: [\n            0,\n            255,\n            255\n        ],\n        darkblue: [\n            0,\n            0,\n            139\n        ],\n        darkcyan: [\n            0,\n            139,\n            139\n        ],\n        darkgoldenrod: [\n            184,\n            134,\n            11\n        ],\n        darkgray: [\n            169,\n            169,\n            169\n        ],\n        darkgreen: [\n            0,\n            100,\n            0\n        ],\n        darkgrey: [\n            169,\n            169,\n            169\n        ],\n        darkkhaki: [\n            189,\n            183,\n            107\n        ],\n        darkmagenta: [\n            139,\n            0,\n            139\n        ],\n        darkolivegreen: [\n            85,\n            107,\n            47\n        ],\n        darkorange: [\n            255,\n            140,\n            0\n        ],\n        darkorchid: [\n            153,\n            50,\n            204\n        ],\n        darkred: [\n            139,\n            0,\n            0\n        ],\n        darksalmon: [\n            233,\n            150,\n            122\n        ],\n        darkseagreen: [\n            143,\n            188,\n            143\n        ],\n        darkslateblue: [\n            72,\n            61,\n            139\n        ],\n        darkslategray: [\n            47,\n            79,\n            79\n        ],\n        darkslategrey: [\n            47,\n            79,\n            79\n        ],\n        darkturquoise: [\n            0,\n            206,\n            209\n        ],\n        darkviolet: [\n            148,\n            0,\n            211\n        ],\n        deeppink: [\n            255,\n            20,\n            147\n        ],\n        deepskyblue: [\n            0,\n            191,\n            255\n        ],\n        dimgray: [\n            105,\n            105,\n            105\n        ],\n        dimgrey: [\n            105,\n            105,\n            105\n        ],\n        dodgerblue: [\n            30,\n            144,\n            255\n        ],\n        firebrick: [\n            178,\n            34,\n            34\n        ],\n        floralwhite: [\n            255,\n            250,\n            240\n        ],\n        forestgreen: [\n            34,\n            139,\n            34\n        ],\n        fuchsia: [\n            255,\n            0,\n            255\n        ],\n        gainsboro: [\n            220,\n            220,\n            220\n        ],\n        ghostwhite: [\n            248,\n            248,\n            255\n        ],\n        gold: [\n            255,\n            215,\n            0\n        ],\n        goldenrod: [\n            218,\n            165,\n            32\n        ],\n        gray: [\n            128,\n            128,\n            128\n        ],\n        green: [\n            0,\n            128,\n            0\n        ],\n        greenyellow: [\n            173,\n            255,\n            47\n        ],\n        grey: [\n            128,\n            128,\n            128\n        ],\n        honeydew: [\n            240,\n            255,\n            240\n        ],\n        hotpink: [\n            255,\n            105,\n            180\n        ],\n        indianred: [\n            205,\n            92,\n            92\n        ],\n        indigo: [\n            75,\n            0,\n            130\n        ],\n        ivory: [\n            255,\n            255,\n            240\n        ],\n        khaki: [\n            240,\n            230,\n            140\n        ],\n        lavender: [\n            230,\n            230,\n            250\n        ],\n        lavenderblush: [\n            255,\n            240,\n            245\n        ],\n        lawngreen: [\n            124,\n            252,\n            0\n        ],\n        lemonchiffon: [\n            255,\n            250,\n            205\n        ],\n        lightblue: [\n            173,\n            216,\n            230\n        ],\n        lightcoral: [\n            240,\n            128,\n            128\n        ],\n        lightcyan: [\n            224,\n            255,\n            255\n        ],\n        lightgoldenrodyellow: [\n            250,\n            250,\n            210\n        ],\n        lightgray: [\n            211,\n            211,\n            211\n        ],\n        lightgreen: [\n            144,\n            238,\n            144\n        ],\n        lightgrey: [\n            211,\n            211,\n            211\n        ],\n        lightpink: [\n            255,\n            182,\n            193\n        ],\n        lightsalmon: [\n            255,\n            160,\n            122\n        ],\n        lightseagreen: [\n            32,\n            178,\n            170\n        ],\n        lightskyblue: [\n            135,\n            206,\n            250\n        ],\n        lightslategray: [\n            119,\n            136,\n            153\n        ],\n        lightslategrey: [\n            119,\n            136,\n            153\n        ],\n        lightsteelblue: [\n            176,\n            196,\n            222\n        ],\n        lightyellow: [\n            255,\n            255,\n            224\n        ],\n        lime: [\n            0,\n            255,\n            0\n        ],\n        limegreen: [\n            50,\n            205,\n            50\n        ],\n        linen: [\n            250,\n            240,\n            230\n        ],\n        magenta: [\n            255,\n            0,\n            255\n        ],\n        maroon: [\n            128,\n            0,\n            0\n        ],\n        mediumaquamarine: [\n            102,\n            205,\n            170\n        ],\n        mediumblue: [\n            0,\n            0,\n            205\n        ],\n        mediumorchid: [\n            186,\n            85,\n            211\n        ],\n        mediumpurple: [\n            147,\n            112,\n            219\n        ],\n        mediumseagreen: [\n            60,\n            179,\n            113\n        ],\n        mediumslateblue: [\n            123,\n            104,\n            238\n        ],\n        mediumspringgreen: [\n            0,\n            250,\n            154\n        ],\n        mediumturquoise: [\n            72,\n            209,\n            204\n        ],\n        mediumvioletred: [\n            199,\n            21,\n            133\n        ],\n        midnightblue: [\n            25,\n            25,\n            112\n        ],\n        mintcream: [\n            245,\n            255,\n            250\n        ],\n        mistyrose: [\n            255,\n            228,\n            225\n        ],\n        moccasin: [\n            255,\n            228,\n            181\n        ],\n        navajowhite: [\n            255,\n            222,\n            173\n        ],\n        navy: [\n            0,\n            0,\n            128\n        ],\n        oldlace: [\n            253,\n            245,\n            230\n        ],\n        olive: [\n            128,\n            128,\n            0\n        ],\n        olivedrab: [\n            107,\n            142,\n            35\n        ],\n        orange: [\n            255,\n            165,\n            0\n        ],\n        orangered: [\n            255,\n            69,\n            0\n        ],\n        orchid: [\n            218,\n            112,\n            214\n        ],\n        palegoldenrod: [\n            238,\n            232,\n            170\n        ],\n        palegreen: [\n            152,\n            251,\n            152\n        ],\n        paleturquoise: [\n            175,\n            238,\n            238\n        ],\n        palevioletred: [\n            219,\n            112,\n            147\n        ],\n        papayawhip: [\n            255,\n            239,\n            213\n        ],\n        peachpuff: [\n            255,\n            218,\n            185\n        ],\n        peru: [\n            205,\n            133,\n            63\n        ],\n        pink: [\n            255,\n            192,\n            203\n        ],\n        plum: [\n            221,\n            160,\n            221\n        ],\n        powderblue: [\n            176,\n            224,\n            230\n        ],\n        purple: [\n            128,\n            0,\n            128\n        ],\n        rebeccapurple: [\n            102,\n            51,\n            153\n        ],\n        red: [\n            255,\n            0,\n            0\n        ],\n        rosybrown: [\n            188,\n            143,\n            143\n        ],\n        royalblue: [\n            65,\n            105,\n            225\n        ],\n        saddlebrown: [\n            139,\n            69,\n            19\n        ],\n        salmon: [\n            250,\n            128,\n            114\n        ],\n        sandybrown: [\n            244,\n            164,\n            96\n        ],\n        seagreen: [\n            46,\n            139,\n            87\n        ],\n        seashell: [\n            255,\n            245,\n            238\n        ],\n        sienna: [\n            160,\n            82,\n            45\n        ],\n        silver: [\n            192,\n            192,\n            192\n        ],\n        skyblue: [\n            135,\n            206,\n            235\n        ],\n        slateblue: [\n            106,\n            90,\n            205\n        ],\n        slategray: [\n            112,\n            128,\n            144\n        ],\n        slategrey: [\n            112,\n            128,\n            144\n        ],\n        snow: [\n            255,\n            250,\n            250\n        ],\n        springgreen: [\n            0,\n            255,\n            127\n        ],\n        steelblue: [\n            70,\n            130,\n            180\n        ],\n        tan: [\n            210,\n            180,\n            140\n        ],\n        teal: [\n            0,\n            128,\n            128\n        ],\n        thistle: [\n            216,\n            191,\n            216\n        ],\n        tomato: [\n            255,\n            99,\n            71\n        ],\n        turquoise: [\n            64,\n            224,\n            208\n        ],\n        violet: [\n            238,\n            130,\n            238\n        ],\n        wheat: [\n            245,\n            222,\n            179\n        ],\n        white: [\n            255,\n            255,\n            255\n        ],\n        whitesmoke: [\n            245,\n            245,\n            245\n        ],\n        yellow: [\n            255,\n            255,\n            0\n        ],\n        yellowgreen: [\n            154,\n            205,\n            50\n        ]\n    };\n});\nvar to = T((eo)=>{\n    \"use strict\";\n    Object.defineProperty(eo, \"__esModule\", {\n        value: !0\n    });\n    function Y0(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    Y0(eo, {\n        parseColor: ()=>eh,\n        formatColor: ()=>th\n    });\n    var aa = X0(sa());\n    function X0(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    var Q0 = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, K0 = /^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, Ze = /(?:\\d+|\\d*\\.\\d+)%?/, fn = /(?:\\s*,\\s*|\\s+)/, la = /\\s*[,/]\\s*/, et = /var\\(--(?:[^ )]*?)\\)/, J0 = new RegExp(`^(rgb)a?\\\\(\\\\s*(${Ze.source}|${et.source})(?:${fn.source}(${Ze.source}|${et.source}))?(?:${fn.source}(${Ze.source}|${et.source}))?(?:${la.source}(${Ze.source}|${et.source}))?\\\\s*\\\\)$`), Z0 = new RegExp(`^(hsl)a?\\\\(\\\\s*((?:${Ze.source})(?:deg|rad|grad|turn)?|${et.source})(?:${fn.source}(${Ze.source}|${et.source}))?(?:${fn.source}(${Ze.source}|${et.source}))?(?:${la.source}(${Ze.source}|${et.source}))?\\\\s*\\\\)$`);\n    function eh(e, { loose: t = !1 } = {}) {\n        var n, r;\n        if (typeof e != \"string\") return null;\n        if (e = e.trim(), e === \"transparent\") return {\n            mode: \"rgb\",\n            color: [\n                \"0\",\n                \"0\",\n                \"0\"\n            ],\n            alpha: \"0\"\n        };\n        if (e in aa.default) return {\n            mode: \"rgb\",\n            color: aa.default[e].map((a)=>a.toString())\n        };\n        let i = e.replace(K0, (a, l, f, c, d)=>[\n                \"#\",\n                l,\n                l,\n                f,\n                f,\n                c,\n                c,\n                d ? d + d : \"\"\n            ].join(\"\")).match(Q0);\n        if (i !== null) return {\n            mode: \"rgb\",\n            color: [\n                parseInt(i[1], 16),\n                parseInt(i[2], 16),\n                parseInt(i[3], 16)\n            ].map((a)=>a.toString()),\n            alpha: i[4] ? (parseInt(i[4], 16) / 255).toString() : void 0\n        };\n        var o;\n        let u = (o = e.match(J0)) !== null && o !== void 0 ? o : e.match(Z0);\n        if (u === null) return null;\n        let s = [\n            u[2],\n            u[3],\n            u[4]\n        ].filter(Boolean).map((a)=>a.toString());\n        return !t && s.length !== 3 || s.length < 3 && !s.some((a)=>/^var\\(.*?\\)$/.test(a)) ? null : {\n            mode: u[1],\n            color: s,\n            alpha: (n = u[5]) === null || n === void 0 || (r = n.toString) === null || r === void 0 ? void 0 : r.call(n)\n        };\n    }\n    function th({ mode: e, color: t, alpha: n }) {\n        let r = n !== void 0;\n        return `${e}(${t.join(\" \")}${r ? ` / ${n}` : \"\"})`;\n    }\n});\nvar no = T((ro)=>{\n    \"use strict\";\n    Object.defineProperty(ro, \"__esModule\", {\n        value: !0\n    });\n    function rh(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    rh(ro, {\n        withAlphaValue: ()=>nh,\n        default: ()=>ih\n    });\n    var cn = to();\n    function nh(e, t, n) {\n        if (typeof e == \"function\") return e({\n            opacityValue: t\n        });\n        let r = (0, cn.parseColor)(e, {\n            loose: !0\n        });\n        return r === null ? n : (0, cn.formatColor)({\n            ...r,\n            alpha: t\n        });\n    }\n    function ih({ color: e, property: t, variable: n }) {\n        let r = [].concat(t);\n        if (typeof e == \"function\") return {\n            [n]: \"1\",\n            ...Object.fromEntries(r.map((o)=>[\n                    o,\n                    e({\n                        opacityVariable: n,\n                        opacityValue: `var(${n})`\n                    })\n                ]))\n        };\n        let i = (0, cn.parseColor)(e);\n        return i === null ? Object.fromEntries(r.map((o)=>[\n                o,\n                e\n            ])) : i.alpha !== void 0 ? Object.fromEntries(r.map((o)=>[\n                o,\n                e\n            ])) : {\n            [n]: \"1\",\n            ...Object.fromEntries(r.map((o)=>[\n                    o,\n                    (0, cn.formatColor)({\n                        ...i,\n                        alpha: `var(${n})`\n                    })\n                ]))\n        };\n    }\n});\nvar ha = T((io)=>{\n    \"use strict\";\n    Object.defineProperty(io, \"__esModule\", {\n        value: !0\n    });\n    function oh(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    oh(io, {\n        pattern: ()=>sh,\n        withoutCapturing: ()=>ca,\n        any: ()=>da,\n        optional: ()=>ah,\n        zeroOrMore: ()=>lh,\n        nestedBrackets: ()=>pa,\n        escape: ()=>lt\n    });\n    var fa = /[\\\\^$.*+?()[\\]{}|]/g, uh = RegExp(fa.source);\n    function pr(e) {\n        return e = Array.isArray(e) ? e : [\n            e\n        ], e = e.map((t)=>t instanceof RegExp ? t.source : t), e.join(\"\");\n    }\n    function sh(e) {\n        return new RegExp(pr(e), \"g\");\n    }\n    function ca(e) {\n        return new RegExp(`(?:${pr(e)})`, \"g\");\n    }\n    function da(e) {\n        return `(?:${e.map(pr).join(\"|\")})`;\n    }\n    function ah(e) {\n        return `(?:${pr(e)})?`;\n    }\n    function lh(e) {\n        return `(?:${pr(e)})*`;\n    }\n    function pa(e, t, n = 1) {\n        return ca([\n            lt(e),\n            /[^\\s]*/,\n            n === 1 ? `[^${lt(e)}${lt(t)}s]*` : da([\n                `[^${lt(e)}${lt(t)}s]*`,\n                pa(e, t, n - 1)\n            ]),\n            /[^\\s]*/,\n            lt(t)\n        ]);\n    }\n    function lt(e) {\n        return e && uh.test(e) ? e.replace(fa, \"\\\\$&\") : e || \"\";\n    }\n});\nvar Da = T((oo)=>{\n    \"use strict\";\n    Object.defineProperty(oo, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(oo, \"splitAtTopLevelOnly\", {\n        enumerable: !0,\n        get: ()=>dh\n    });\n    var fh = ch(ha());\n    function ma(e) {\n        if (typeof WeakMap != \"function\") return null;\n        var t = new WeakMap, n = new WeakMap;\n        return (ma = function(r) {\n            return r ? n : t;\n        })(e);\n    }\n    function ch(e, t) {\n        if (!t && e && e.__esModule) return e;\n        if (e === null || typeof e != \"object\" && typeof e != \"function\") return {\n            default: e\n        };\n        var n = ma(t);\n        if (n && n.has(e)) return n.get(e);\n        var r = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var o in e)if (o !== \"default\" && Object.prototype.hasOwnProperty.call(e, o)) {\n            var u = i ? Object.getOwnPropertyDescriptor(e, o) : null;\n            u && (u.get || u.set) ? Object.defineProperty(r, o, u) : r[o] = e[o];\n        }\n        return r.default = e, n && n.set(e, r), r;\n    }\n    function* dh(e, t) {\n        let n = new RegExp(`[(){}\\\\[\\\\]${fh.escape(t)}]`, \"g\"), r = 0, i = 0, o = !1, u = 0, s = 0, a = t.length;\n        for (let l of e.matchAll(n)){\n            let f = l[0] === t[u], c = u === a - 1, d = f && c;\n            l[0] === \"(\" && r++, l[0] === \")\" && r--, l[0] === \"[\" && r++, l[0] === \"]\" && r--, l[0] === \"{\" && r++, l[0] === \"}\" && r--, f && r === 0 && (s === 0 && (s = l.index), u++), d && r === 0 && (o = !0, yield e.substring(i, s), i = s + a), u === a && (u = 0, s = 0);\n        }\n        o ? yield e.substring(i) : yield e;\n    }\n});\nvar ba = T((uo)=>{\n    \"use strict\";\n    Object.defineProperty(uo, \"__esModule\", {\n        value: !0\n    });\n    function ph(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    ph(uo, {\n        parseBoxShadowValue: ()=>gh,\n        formatBoxShadowValue: ()=>bh\n    });\n    var hh = Da(), mh = new Set([\n        \"inset\",\n        \"inherit\",\n        \"initial\",\n        \"revert\",\n        \"unset\"\n    ]), Dh = /\\ +(?![^(]*\\))/g, ga = /^-?(\\d+|\\.\\d+)(.*?)$/g;\n    function gh(e) {\n        return Array.from((0, hh.splitAtTopLevelOnly)(e, \",\")).map((n)=>{\n            let r = n.trim(), i = {\n                raw: r\n            }, o = r.split(Dh), u = new Set;\n            for (let s of o)ga.lastIndex = 0, !u.has(\"KEYWORD\") && mh.has(s) ? (i.keyword = s, u.add(\"KEYWORD\")) : ga.test(s) ? u.has(\"X\") ? u.has(\"Y\") ? u.has(\"BLUR\") ? u.has(\"SPREAD\") || (i.spread = s, u.add(\"SPREAD\")) : (i.blur = s, u.add(\"BLUR\")) : (i.y = s, u.add(\"Y\")) : (i.x = s, u.add(\"X\")) : i.color ? (i.unknown || (i.unknown = []), i.unknown.push(s)) : i.color = s;\n            return i.valid = i.x !== void 0 && i.y !== void 0, i;\n        });\n    }\n    function bh(e) {\n        return e.map((t)=>t.valid ? [\n                t.keyword,\n                t.x,\n                t.y,\n                t.blur,\n                t.spread,\n                t.color\n            ].filter(Boolean).join(\" \") : t.raw).join(\", \");\n    }\n});\nvar Sa = T((ao)=>{\n    \"use strict\";\n    Object.defineProperty(ao, \"__esModule\", {\n        value: !0\n    });\n    function vh(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    vh(ao, {\n        normalize: ()=>tt,\n        url: ()=>xa,\n        number: ()=>Fh,\n        percentage: ()=>Fa,\n        length: ()=>wa,\n        lineWidth: ()=>Sh,\n        shadow: ()=>Ch,\n        color: ()=>_h,\n        image: ()=>kh,\n        gradient: ()=>Ea,\n        position: ()=>Oh,\n        familyName: ()=>Ph,\n        genericName: ()=>Ih,\n        absoluteSize: ()=>Lh,\n        relativeSize: ()=>Nh\n    });\n    var yh = to(), xh = ba(), so = [\n        \"min\",\n        \"max\",\n        \"clamp\",\n        \"calc\"\n    ], ya = /,(?![^(]*\\))/g, dn = /_(?![^(]*\\))/g;\n    function tt(e, t = !0) {\n        return e.includes(\"url(\") ? e.split(/(url\\(.*?\\))/g).filter(Boolean).map((n)=>/^url\\(.*?\\)$/.test(n) ? n : tt(n, !1)).join(\"\") : (e = e.replace(/([^\\\\])_+/g, (n, r)=>r + \" \".repeat(n.length - 1)).replace(/^_/g, \" \").replace(/\\\\_/g, \"_\"), t && (e = e.trim()), e = e.replace(/(calc|min|max|clamp)\\(.+\\)/g, (n)=>n.replace(/(-?\\d*\\.?\\d(?!\\b-.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, \"$1 $2 \")), e);\n    }\n    function xa(e) {\n        return e.startsWith(\"url(\");\n    }\n    function Fh(e) {\n        return !isNaN(Number(e)) || so.some((t)=>new RegExp(`^${t}\\\\(.+?`).test(e));\n    }\n    function Fa(e) {\n        return e.split(dn).every((t)=>/%$/g.test(t) || so.some((n)=>new RegExp(`^${n}\\\\(.+?%`).test(t)));\n    }\n    var wh = [\n        \"cm\",\n        \"mm\",\n        \"Q\",\n        \"in\",\n        \"pc\",\n        \"pt\",\n        \"px\",\n        \"em\",\n        \"ex\",\n        \"ch\",\n        \"rem\",\n        \"lh\",\n        \"vw\",\n        \"vh\",\n        \"vmin\",\n        \"vmax\"\n    ], va = `(?:${wh.join(\"|\")})`;\n    function wa(e) {\n        return e.split(dn).every((t)=>t === \"0\" || new RegExp(`${va}$`).test(t) || so.some((n)=>new RegExp(`^${n}\\\\(.+?${va}`).test(t)));\n    }\n    var Eh = new Set([\n        \"thin\",\n        \"medium\",\n        \"thick\"\n    ]);\n    function Sh(e) {\n        return Eh.has(e);\n    }\n    function Ch(e) {\n        let t = (0, xh.parseBoxShadowValue)(tt(e));\n        for (let n of t)if (!n.valid) return !1;\n        return !0;\n    }\n    function _h(e) {\n        let t = 0;\n        return e.split(dn).every((r)=>(r = tt(r), r.startsWith(\"var(\") ? !0 : (0, yh.parseColor)(r, {\n                loose: !0\n            }) !== null ? (t++, !0) : !1)) ? t > 0 : !1;\n    }\n    function kh(e) {\n        let t = 0;\n        return e.split(ya).every((r)=>(r = tt(r), r.startsWith(\"var(\") ? !0 : xa(r) || Ea(r) || [\n                \"element(\",\n                \"image(\",\n                \"cross-fade(\",\n                \"image-set(\"\n            ].some((i)=>r.startsWith(i)) ? (t++, !0) : !1)) ? t > 0 : !1;\n    }\n    var Th = new Set([\n        \"linear-gradient\",\n        \"radial-gradient\",\n        \"repeating-linear-gradient\",\n        \"repeating-radial-gradient\",\n        \"conic-gradient\"\n    ]);\n    function Ea(e) {\n        e = tt(e);\n        for (let t of Th)if (e.startsWith(`${t}(`)) return !0;\n        return !1;\n    }\n    var Ah = new Set([\n        \"center\",\n        \"top\",\n        \"right\",\n        \"bottom\",\n        \"left\"\n    ]);\n    function Oh(e) {\n        let t = 0;\n        return e.split(dn).every((r)=>(r = tt(r), r.startsWith(\"var(\") ? !0 : Ah.has(r) || wa(r) || Fa(r) ? (t++, !0) : !1)) ? t > 0 : !1;\n    }\n    function Ph(e) {\n        let t = 0;\n        return e.split(ya).every((r)=>(r = tt(r), r.startsWith(\"var(\") ? !0 : r.includes(\" \") && !/(['\"])([^\"']+)\\1/g.test(r) || /^\\d/g.test(r) ? !1 : (t++, !0))) ? t > 0 : !1;\n    }\n    var Bh = new Set([\n        \"serif\",\n        \"sans-serif\",\n        \"monospace\",\n        \"cursive\",\n        \"fantasy\",\n        \"system-ui\",\n        \"ui-serif\",\n        \"ui-sans-serif\",\n        \"ui-monospace\",\n        \"ui-rounded\",\n        \"math\",\n        \"emoji\",\n        \"fangsong\"\n    ]);\n    function Ih(e) {\n        return Bh.has(e);\n    }\n    var Rh = new Set([\n        \"xx-small\",\n        \"x-small\",\n        \"small\",\n        \"medium\",\n        \"large\",\n        \"x-large\",\n        \"x-large\",\n        \"xxx-large\"\n    ]);\n    function Lh(e) {\n        return Rh.has(e);\n    }\n    var Mh = new Set([\n        \"larger\",\n        \"smaller\"\n    ]);\n    function Nh(e) {\n        return Mh.has(e);\n    }\n});\nvar Ba = T((co)=>{\n    \"use strict\";\n    Object.defineProperty(co, \"__esModule\", {\n        value: !0\n    });\n    function Wh(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    Wh(co, {\n        updateAllClasses: ()=>zh,\n        asValue: ()=>mr,\n        parseColorFormat: ()=>lo,\n        asColor: ()=>Aa,\n        asLookupValue: ()=>Oa,\n        coerceValue: ()=>Hh\n    });\n    var $h = fo(ia()), qh = fo(oa()), Ca = no(), xe = Sa(), _a = fo(Xn());\n    function fo(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function zh(e, t) {\n        return (0, $h.default)((i)=>{\n            i.walkClasses((o)=>{\n                let u = t(o.value);\n                o.value = u, o.raws && o.raws.value && (o.raws.value = (0, qh.default)(o.raws.value));\n            });\n        }).processSync(e);\n    }\n    function Ta(e, t) {\n        if (!hr(e)) return;\n        let n = e.slice(1, -1);\n        if (t(n)) return (0, xe.normalize)(n);\n    }\n    function Uh(e, t = {}, n) {\n        let r = t[e];\n        if (r !== void 0) return (0, _a.default)(r);\n        if (hr(e)) {\n            let i = Ta(e, n);\n            return i === void 0 ? void 0 : (0, _a.default)(i);\n        }\n    }\n    function mr(e, t = {}, { validate: n = ()=>!0 } = {}) {\n        var r;\n        let i = (r = t.values) === null || r === void 0 ? void 0 : r[e];\n        return i !== void 0 ? i : t.supportsNegativeValues && e.startsWith(\"-\") ? Uh(e.slice(1), t.values, n) : Ta(e, n);\n    }\n    function hr(e) {\n        return e.startsWith(\"[\") && e.endsWith(\"]\");\n    }\n    function Gh(e) {\n        let t = e.lastIndexOf(\"/\");\n        return t === -1 || t === e.length - 1 ? [\n            e\n        ] : [\n            e.slice(0, t),\n            e.slice(t + 1)\n        ];\n    }\n    function lo(e) {\n        if (typeof e == \"string\" && e.includes(\"<alpha-value>\")) {\n            let t = e;\n            return ({ opacityValue: n = 1 })=>t.replace(\"<alpha-value>\", n);\n        }\n        return e;\n    }\n    function Aa(e, t = {}, { tailwindConfig: n = {} } = {}) {\n        var r;\n        if (((r = t.values) === null || r === void 0 ? void 0 : r[e]) !== void 0) {\n            var i;\n            return lo((i = t.values) === null || i === void 0 ? void 0 : i[e]);\n        }\n        let [o, u] = Gh(e);\n        if (u !== void 0) {\n            var s, a, l, f;\n            let c = (f = (s = t.values) === null || s === void 0 ? void 0 : s[o]) !== null && f !== void 0 ? f : hr(o) ? o.slice(1, -1) : void 0;\n            return c === void 0 ? void 0 : (c = lo(c), hr(u) ? (0, Ca.withAlphaValue)(c, u.slice(1, -1)) : ((a = n.theme) === null || a === void 0 || (l = a.opacity) === null || l === void 0 ? void 0 : l[u]) === void 0 ? void 0 : (0, Ca.withAlphaValue)(c, n.theme.opacity[u]));\n        }\n        return mr(e, t, {\n            validate: xe.color\n        });\n    }\n    function Oa(e, t = {}) {\n        var n;\n        return (n = t.values) === null || n === void 0 ? void 0 : n[e];\n    }\n    function ke(e) {\n        return (t, n)=>mr(t, n, {\n                validate: e\n            });\n    }\n    var Pa = {\n        any: mr,\n        color: Aa,\n        url: ke(xe.url),\n        image: ke(xe.image),\n        length: ke(xe.length),\n        percentage: ke(xe.percentage),\n        position: ke(xe.position),\n        lookup: Oa,\n        \"generic-name\": ke(xe.genericName),\n        \"family-name\": ke(xe.familyName),\n        number: ke(xe.number),\n        \"line-width\": ke(xe.lineWidth),\n        \"absolute-size\": ke(xe.absoluteSize),\n        \"relative-size\": ke(xe.relativeSize),\n        shadow: ke(xe.shadow)\n    }, ka = Object.keys(Pa);\n    function jh(e, t) {\n        let n = e.indexOf(t);\n        return n === -1 ? [\n            void 0,\n            e\n        ] : [\n            e.slice(0, n),\n            e.slice(n + 1)\n        ];\n    }\n    function Hh(e, t, n, r) {\n        if (hr(t)) {\n            let i = t.slice(1, -1), [o, u] = jh(i, \":\");\n            if (!/^[\\w-_]+$/g.test(o)) u = i;\n            else if (o !== void 0 && !ka.includes(o)) return [];\n            if (u.length > 0 && ka.includes(o)) return [\n                mr(`[${u}]`, n),\n                o\n            ];\n        }\n        for (let i of [].concat(e)){\n            let o = Pa[i](t, n, {\n                tailwindConfig: r\n            });\n            if (o !== void 0) return [\n                o,\n                i\n            ];\n        }\n        return [];\n    }\n});\nvar Ia = T((po)=>{\n    \"use strict\";\n    Object.defineProperty(po, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(po, \"default\", {\n        enumerable: !0,\n        get: ()=>Vh\n    });\n    function Vh(e) {\n        return typeof e == \"function\" ? e({}) : e;\n    }\n});\nvar Wa = T((mo)=>{\n    \"use strict\";\n    Object.defineProperty(mo, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(mo, \"default\", {\n        enumerable: !0,\n        get: ()=>pm\n    });\n    var Yh = ft(Xn()), Xh = ft(zu()), Qh = ft(Uu()), Kh = ft(Jn()), Jh = ft(ju()), Ma = Hu(), Ra = Vu(), Zh = Xu(), em = ft(Qu()), tm = Ku(), rm = Ba(), nm = no(), im = ft(Ia());\n    function ft(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function St(e) {\n        return typeof e == \"function\";\n    }\n    function Dr(e) {\n        return typeof e == \"object\" && e !== null;\n    }\n    function gr(e, ...t) {\n        let n = t.pop();\n        for (let r of t)for(let i in r){\n            let o = n(e[i], r[i]);\n            o === void 0 ? Dr(e[i]) && Dr(r[i]) ? e[i] = gr(e[i], r[i], n) : e[i] = r[i] : e[i] = o;\n        }\n        return e;\n    }\n    var ho = {\n        colors: Jh.default,\n        negative (e) {\n            return Object.keys(e).filter((t)=>e[t] !== \"0\").reduce((t, n)=>{\n                let r = (0, Yh.default)(e[n]);\n                return r !== void 0 && (t[`-${n}`] = r), t;\n            }, {});\n        },\n        breakpoints (e) {\n            return Object.keys(e).filter((t)=>typeof e[t] == \"string\").reduce((t, n)=>({\n                    ...t,\n                    [`screen-${n}`]: e[n]\n                }), {});\n        }\n    };\n    function om(e, ...t) {\n        return St(e) ? e(...t) : e;\n    }\n    function um(e) {\n        return e.reduce((t, { extend: n })=>gr(t, n, (r, i)=>r === void 0 ? [\n                    i\n                ] : Array.isArray(r) ? [\n                    i,\n                    ...r\n                ] : [\n                    i,\n                    r\n                ]), {});\n    }\n    function sm(e) {\n        return {\n            ...e.reduce((t, n)=>(0, Ma.defaults)(t, n), {}),\n            extend: um(e)\n        };\n    }\n    function La(e, t) {\n        if (Array.isArray(e) && Dr(e[0])) return e.concat(t);\n        if (Array.isArray(t) && Dr(t[0]) && Dr(e)) return [\n            e,\n            ...t\n        ];\n        if (Array.isArray(t)) return t;\n    }\n    function am({ extend: e, ...t }) {\n        return gr(t, e, (n, r)=>!St(n) && !r.some(St) ? gr({}, n, ...r, La) : (i, o)=>gr({}, ...[\n                    n,\n                    ...r\n                ].map((u)=>om(u, i, o)), La));\n    }\n    function* lm(e) {\n        let t = (0, Ra.toPath)(e);\n        if (t.length === 0 || (yield t, Array.isArray(e))) return;\n        let n = /^(.*?)\\s*\\/\\s*([^/]+)$/, r = e.match(n);\n        if (r !== null) {\n            let [, i, o] = r, u = (0, Ra.toPath)(i);\n            u.alpha = o, yield u;\n        }\n    }\n    function fm(e) {\n        let t = (n, r)=>{\n            for (let i of lm(n)){\n                let o = 0, u = e;\n                for(; u != null && o < i.length;)u = u[i[o++]], u = St(u) && (i.alpha === void 0 || o <= i.length - 1) ? u(t, ho) : u;\n                if (u !== void 0) {\n                    if (i.alpha !== void 0) {\n                        let s = (0, rm.parseColorFormat)(u);\n                        return (0, nm.withAlphaValue)(s, i.alpha, (0, im.default)(s));\n                    }\n                    return (0, em.default)(u) ? (0, tm.cloneDeep)(u) : u;\n                }\n            }\n            return r;\n        };\n        return Object.assign(t, {\n            theme: t,\n            ...ho\n        }), Object.keys(e).reduce((n, r)=>(n[r] = St(e[r]) ? e[r](t, ho) : e[r], n), {});\n    }\n    function Na(e) {\n        let t = [];\n        return e.forEach((n)=>{\n            t = [\n                ...t,\n                n\n            ];\n            var r;\n            let i = (r = n == null ? void 0 : n.plugins) !== null && r !== void 0 ? r : [];\n            i.length !== 0 && i.forEach((o)=>{\n                o.__isOptionsFunction && (o = o());\n                var u;\n                t = [\n                    ...t,\n                    ...Na([\n                        (u = o == null ? void 0 : o.config) !== null && u !== void 0 ? u : {}\n                    ])\n                ];\n            });\n        }), t;\n    }\n    function cm(e) {\n        return [\n            ...e\n        ].reduceRight((n, r)=>St(r) ? r({\n                corePlugins: n\n            }) : (0, Qh.default)(r, n), Xh.default);\n    }\n    function dm(e) {\n        return [\n            ...e\n        ].reduceRight((n, r)=>[\n                ...n,\n                ...r\n            ], []);\n    }\n    function pm(e) {\n        let t = [\n            ...Na(e),\n            {\n                prefix: \"\",\n                important: !1,\n                separator: \":\",\n                variantOrder: Kh.default.variantOrder\n            }\n        ];\n        var n, r;\n        return (0, Zh.normalizeConfig)((0, Ma.defaults)({\n            theme: fm(am(sm(t.map((i)=>(n = i == null ? void 0 : i.theme) !== null && n !== void 0 ? n : {})))),\n            corePlugins: cm(t.map((i)=>i.corePlugins)),\n            plugins: dm(e.map((i)=>(r = i == null ? void 0 : i.plugins) !== null && r !== void 0 ? r : []))\n        }, ...t));\n    }\n});\nvar $a = {};\nyn($a, {\n    default: ()=>hm\n});\nvar hm, qa = vn(()=>{\n    hm = {\n        yellow: (e)=>e\n    };\n});\nvar ja = T((Do)=>{\n    \"use strict\";\n    Object.defineProperty(Do, \"__esModule\", {\n        value: !0\n    });\n    function mm(e, t) {\n        for(var n in t)Object.defineProperty(e, n, {\n            enumerable: !0,\n            get: t[n]\n        });\n    }\n    mm(Do, {\n        flagEnabled: ()=>bm,\n        issueFlagNotices: ()=>vm,\n        default: ()=>ym\n    });\n    var Dm = Ga((qa(), Br($a))), gm = Ga((Qr(), Br(Xr)));\n    function Ga(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    var za = {\n        optimizeUniversalDefaults: !1\n    }, br = {\n        future: [\n            \"hoverOnlyWhenSupported\",\n            \"respectDefaultRingColorOpacity\"\n        ],\n        experimental: [\n            \"optimizeUniversalDefaults\",\n            \"matchVariant\"\n        ]\n    };\n    function bm(e, t) {\n        if (br.future.includes(t)) {\n            var n, r, i;\n            return e.future === \"all\" || ((i = (r = e == null || (n = e.future) === null || n === void 0 ? void 0 : n[t]) !== null && r !== void 0 ? r : za[t]) !== null && i !== void 0 ? i : !1);\n        }\n        if (br.experimental.includes(t)) {\n            var o, u, s;\n            return e.experimental === \"all\" || ((s = (u = e == null || (o = e.experimental) === null || o === void 0 ? void 0 : o[t]) !== null && u !== void 0 ? u : za[t]) !== null && s !== void 0 ? s : !1);\n        }\n        return !1;\n    }\n    function Ua(e) {\n        if (e.experimental === \"all\") return br.experimental;\n        var t;\n        return Object.keys((t = e == null ? void 0 : e.experimental) !== null && t !== void 0 ? t : {}).filter((n)=>br.experimental.includes(n) && e.experimental[n]);\n    }\n    function vm(e) {\n        if (process.env.JEST_WORKER_ID === void 0 && Ua(e).length > 0) {\n            let t = Ua(e).map((n)=>Dm.default.yellow(n)).join(\", \");\n            gm.default.warn(\"experimental-flags-enabled\", [\n                `You have enabled experimental features: ${t}`,\n                \"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\"\n            ]);\n        }\n    }\n    var ym = br;\n});\nvar Va = T((go)=>{\n    \"use strict\";\n    Object.defineProperty(go, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(go, \"default\", {\n        enumerable: !0,\n        get: ()=>Ha\n    });\n    var xm = wm(Jn()), Fm = ja();\n    function wm(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Ha(e) {\n        var t;\n        let n = ((t = e == null ? void 0 : e.presets) !== null && t !== void 0 ? t : [\n            xm.default\n        ]).slice().reverse().flatMap((o)=>Ha(typeof o == \"function\" ? o() : o)), r = {\n            respectDefaultRingColorOpacity: {\n                theme: {\n                    ringColor: {\n                        DEFAULT: \"#3b82f67f\"\n                    }\n                }\n            }\n        }, i = Object.keys(r).filter((o)=>(0, Fm.flagEnabled)(e, o)).map((o)=>r[o]);\n        return [\n            e,\n            ...i,\n            ...n\n        ];\n    }\n});\nvar Xa = T((bo)=>{\n    \"use strict\";\n    Object.defineProperty(bo, \"__esModule\", {\n        value: !0\n    });\n    Object.defineProperty(bo, \"default\", {\n        enumerable: !0,\n        get: ()=>Cm\n    });\n    var Em = Ya(Wa()), Sm = Ya(Va());\n    function Ya(e) {\n        return e && e.__esModule ? e : {\n            default: e\n        };\n    }\n    function Cm(...e) {\n        let [, ...t] = (0, Sm.default)(e[0]);\n        return (0, Em.default)([\n            ...e,\n            ...t\n        ]);\n    }\n});\nvar Ka = T((Nb, Qa)=>{\n    var vo = Xa();\n    Qa.exports = (vo.__esModule ? vo : {\n        default: vo\n    }).default;\n});\nvar gt;\nfunction Rl(e) {\n    gt = e;\n}\nvar Ot = null;\nasync function qe() {\n    return gt || (Ot ? (await Ot, gt) : (Ot = Promise.resolve().then(()=>(Ho(), jo)).then((e)=>e.getYogaModule()).then((e)=>gt = e), await Ot, Ot = null, gt));\n}\nvar Pt = (e, t)=>()=>(t || e((t = {\n            exports: {}\n        }).exports, t), t.exports), Ll = Pt((e, t)=>{\n    t.exports = [\n        \"em\",\n        \"ex\",\n        \"ch\",\n        \"rem\",\n        \"vh\",\n        \"vw\",\n        \"vmin\",\n        \"vmax\",\n        \"px\",\n        \"mm\",\n        \"cm\",\n        \"in\",\n        \"pt\",\n        \"pc\",\n        \"mozmm\"\n    ];\n}), Ml = Pt((e, t)=>{\n    t.exports = [\n        \"deg\",\n        \"grad\",\n        \"rad\",\n        \"turn\"\n    ];\n}), Nl = Pt((e, t)=>{\n    t.exports = [\n        \"dpi\",\n        \"dpcm\",\n        \"dppx\"\n    ];\n}), Wl = Pt((e, t)=>{\n    t.exports = [\n        \"Hz\",\n        \"kHz\"\n    ];\n}), $l = Pt((e, t)=>{\n    t.exports = [\n        \"s\",\n        \"ms\"\n    ];\n}), ql = Ll(), Vo = Ml(), Yo = Nl(), Xo = Wl(), Qo = $l();\nfunction Fn(e) {\n    if (/\\.\\D?$/.test(e)) throw new Error(\"The dot should be followed by a number\");\n    if (/^[+-]{2}/.test(e)) throw new Error(\"Only one leading +/- is allowed\");\n    if (zl(e) > 1) throw new Error(\"Only one dot is allowed\");\n    if (/%$/.test(e)) {\n        this.type = \"percentage\", this.value = xn(e), this.unit = \"%\";\n        return;\n    }\n    var t = Gl(e);\n    if (!t) {\n        this.type = \"number\", this.value = xn(e);\n        return;\n    }\n    this.type = Hl(t), this.value = xn(e.substr(0, e.length - t.length)), this.unit = t;\n}\nFn.prototype.valueOf = function() {\n    return this.value;\n};\nFn.prototype.toString = function() {\n    return this.value + (this.unit || \"\");\n};\nfunction Qe(e) {\n    return new Fn(e);\n}\nfunction zl(e) {\n    var t = e.match(/\\./g);\n    return t ? t.length : 0;\n}\nfunction xn(e) {\n    var t = parseFloat(e);\n    if (isNaN(t)) throw new Error(\"Invalid number: \" + e);\n    return t;\n}\nvar Ul = [].concat(Vo, Xo, ql, Yo, Qo);\nfunction Gl(e) {\n    var t = e.match(/\\D+$/), n = t && t[0];\n    if (n && Ul.indexOf(n) === -1) throw new Error(\"Invalid unit: \" + n);\n    return n;\n}\nvar jl = Object.assign(Ir(Vo, \"angle\"), Ir(Xo, \"frequency\"), Ir(Yo, \"resolution\"), Ir(Qo, \"time\"));\nfunction Ir(e, t) {\n    return Object.fromEntries(e.map((n)=>[\n            n,\n            t\n        ]));\n}\nfunction Hl(e) {\n    return jl[e] || \"length\";\n}\n\nfunction bt(e) {\n    let t = typeof e;\n    return !(t === \"number\" || t === \"bigint\" || t === \"string\" || t === \"boolean\");\n}\nfunction Ko(e) {\n    return /^class\\s/.test(e.toString());\n}\nfunction Jo(e) {\n    return \"dangerouslySetInnerHTML\" in e;\n}\nfunction Zo(e) {\n    let t = typeof e > \"u\" ? [] : [].concat(e).flat(1 / 0), n = [];\n    for(let r = 0; r < t.length; r++){\n        let i = t[r];\n        typeof i > \"u\" || typeof i == \"boolean\" || i === null || (typeof i == \"number\" && (i = String(i)), typeof i == \"string\" && n.length && typeof n[n.length - 1] == \"string\" ? n[n.length - 1] += i : n.push(i));\n    }\n    return n;\n}\nfunction W(e, t, n, r, i = !1) {\n    if (typeof e == \"number\") return e;\n    try {\n        if (e = e.trim(), /[ /\\(,]/.test(e)) return;\n        if (e === String(+e)) return +e;\n        let o = new Qe(e);\n        if (o.type === \"length\") switch(o.unit){\n            case \"em\":\n                return o.value * t;\n            case \"rem\":\n                return o.value * 16;\n            case \"vw\":\n                return ~~(o.value * r._viewportWidth / 100);\n            case \"vh\":\n                return ~~(o.value * r._viewportHeight / 100);\n            default:\n                return o.value;\n        }\n        else if (o.type === \"angle\") switch(o.unit){\n            case \"deg\":\n                return o.value;\n            case \"rad\":\n                return o.value * 180 / Math.PI;\n            default:\n                return o.value;\n        }\n        else if (o.type === \"percentage\" && i) return o.value / 100 * n;\n    } catch  {}\n}\nfunction Bt(e, t) {\n    return [\n        e[0] * t[0] + e[2] * t[1],\n        e[1] * t[0] + e[3] * t[1],\n        e[0] * t[2] + e[2] * t[3],\n        e[1] * t[2] + e[3] * t[3],\n        e[0] * t[4] + e[2] * t[5] + e[4],\n        e[1] * t[4] + e[3] * t[5] + e[5]\n    ];\n}\nfunction ve(e, t, n, r) {\n    let i = t[e];\n    if (typeof i > \"u\") {\n        if (r && typeof e < \"u\") throw new Error(`Invalid value for CSS property \"${r}\". Allowed values: ${Object.keys(t).map((o)=>`\"${o}\"`).join(\" | \")}. Received: \"${e}\".`);\n        i = n;\n    }\n    return i;\n}\nvar wn, En, eu = [\n    32,\n    160,\n    4961,\n    65792,\n    65793,\n    4153,\n    4241,\n    10\n].map((e)=>String.fromCodePoint(e));\nfunction be(e, t, n) {\n    if (!wn || !En) {\n        if (!(typeof Intl < \"u\" && \"Segmenter\" in Intl)) throw new Error(\"Intl.Segmenter does not exist, please use import a polyfill.\");\n        wn = new Intl.Segmenter(n, {\n            granularity: \"word\"\n        }), En = new Intl.Segmenter(n, {\n            granularity: \"grapheme\"\n        });\n    }\n    if (t === \"grapheme\") return [\n        ...En.segment(e)\n    ].map((r)=>r.segment);\n    {\n        let r = [\n            ...wn.segment(e)\n        ].map((u)=>u.segment), i = [], o = 0;\n        for(; o < r.length;){\n            let u = r[o];\n            if (u == \"\\xa0\") {\n                let s = o === 0 ? \"\" : i.pop(), a = o === r.length - 1 ? \"\" : r[o + 1];\n                i.push(s + \"\\xa0\" + a), o += 2;\n            } else i.push(u), o++;\n        }\n        return i;\n    }\n}\nfunction S(e, t, n) {\n    let r = \"\";\n    for (let [i, o] of Object.entries(t))typeof o < \"u\" && (r += ` ${i}=\"${o}\"`);\n    return n ? `<${e}${r}>${n}</${e}>` : `<${e}${r}/>`;\n}\nfunction tu(e = 20) {\n    let t = new Map;\n    function n(o, u) {\n        if (t.size >= e) {\n            let s = t.keys().next().value;\n            t.delete(s);\n        }\n        t.set(o, u);\n    }\n    function r(o) {\n        if (!t.has(o)) return;\n        let s = t.get(o);\n        return t.delete(o), t.set(o, s), s;\n    }\n    function i() {\n        t.clear();\n    }\n    return {\n        set: n,\n        get: r,\n        clear: i\n    };\n}\nfunction vt(e) {\n    return e ? e.split(/[, ]/).filter(Boolean).map(Number) : null;\n}\nfunction Yl(e) {\n    return Object.prototype.toString.call(e);\n}\nfunction Rr(e) {\n    return typeof e == \"string\";\n}\nfunction ru(e) {\n    return typeof e == \"number\";\n}\nfunction nu(e) {\n    return Yl(e) === \"[object Undefined]\";\n}\nfunction iu(e, t) {\n    if (t === \"break-all\") return {\n        words: be(e, \"grapheme\"),\n        requiredBreaks: []\n    };\n    if (t === \"keep-all\") return {\n        words: be(e, \"word\"),\n        requiredBreaks: []\n    };\n    let n = new linebreak__WEBPACK_IMPORTED_MODULE_0__[\"default\"](e), r = 0, i = n.nextBreak(), o = [], u = [\n        !1\n    ];\n    for(; i;){\n        let s = e.slice(r, i.position);\n        o.push(s), i.required ? u.push(!0) : u.push(!1), r = i.position, i = n.nextBreak();\n    }\n    return {\n        words: o,\n        requiredBreaks: u\n    };\n}\nvar ou = (e)=>e.replaceAll(/([A-Z])/g, (t, n)=>`-${n.toLowerCase()}`);\nfunction Lr(e, t = \",\") {\n    let n = [], r = 0, i = 0;\n    t = new RegExp(t);\n    for(let o = 0; o < e.length; o++)e[o] === \"(\" ? i++ : e[o] === \")\" && i--, i === 0 && t.test(e[o]) && (n.push(e.slice(r, o).trim()), r = o + 1);\n    return n.push(e.slice(r).trim()), n;\n}\nvar Xl = \"image/avif\", Ql = \"image/webp\", Mr = \"image/apng\", Nr = \"image/png\", Wr = \"image/jpeg\", $r = \"image/gif\", Cn = \"image/svg+xml\";\nfunction au(e) {\n    let t = new DataView(e), n = 4, r = t.byteLength;\n    for(; n < r;){\n        let i = t.getUint16(n, !1);\n        if (i > r) throw new TypeError(\"Invalid JPEG\");\n        let o = t.getUint8(i + 1 + n);\n        if (o === 192 || o === 193 || o === 194) return [\n            t.getUint16(i + 7 + n, !1),\n            t.getUint16(i + 5 + n, !1)\n        ];\n        n += i + 2;\n    }\n    throw new TypeError(\"Invalid JPEG\");\n}\nfunction lu(e) {\n    let t = new Uint8Array(e.slice(6, 10));\n    return [\n        t[0] | t[1] << 8,\n        t[2] | t[3] << 8\n    ];\n}\nfunction fu(e) {\n    let t = new DataView(e);\n    return [\n        t.getUint16(18, !1),\n        t.getUint16(22, !1)\n    ];\n}\nvar Re = tu(100), Sn = new Map, Kl = [\n    Nr,\n    Mr,\n    Wr,\n    $r,\n    Cn\n];\nfunction Jl(e) {\n    let t = \"\", n = new Uint8Array(e);\n    for(let r = 0; r < n.byteLength; r++)t += String.fromCharCode(n[r]);\n    return btoa(t);\n}\nfunction Zl(e) {\n    let t = atob(e), n = t.length, r = new Uint8Array(n);\n    for(let i = 0; i < n; i++)r[i] = t.charCodeAt(i);\n    return r.buffer;\n}\nfunction uu(e, t) {\n    let n = t.match(/<svg[^>]*>/)[0], r = n.match(/viewBox=['\"](.+)['\"]/), i = r ? vt(r[1]) : null, o = n.match(/width=['\"](\\d*\\.\\d+|\\d+)['\"]/), u = n.match(/height=['\"](\\d*\\.\\d+|\\d+)['\"]/);\n    if (!i && (!o || !u)) throw new Error(`Failed to parse SVG from ${e}: missing \"viewBox\"`);\n    let s = i ? [\n        i[2],\n        i[3]\n    ] : [\n        +o[1],\n        +u[1]\n    ], a = s[0] / s[1];\n    return o && u ? [\n        +o[1],\n        +u[1]\n    ] : o ? [\n        +o[1],\n        +o[1] / a\n    ] : u ? [\n        +u[1] * a,\n        +u[1]\n    ] : [\n        s[0],\n        s[1]\n    ];\n}\nfunction su(e) {\n    let t, n = ef(new Uint8Array(e));\n    switch(n){\n        case Nr:\n        case Mr:\n            t = fu(e);\n            break;\n        case $r:\n            t = lu(e);\n            break;\n        case Wr:\n            t = au(e);\n            break;\n    }\n    if (!Kl.includes(n)) throw new Error(`Unsupported image type: ${n || \"unknown\"}`);\n    return [\n        `data:${n};base64,${Jl(e)}`,\n        t\n    ];\n}\nasync function yt(e) {\n    if (!e) throw new Error(\"Image source is not provided.\");\n    if (typeof e == \"object\") {\n        let [i, o] = su(e);\n        return [\n            i,\n            ...o\n        ];\n    }\n    if ((e.startsWith('\"') && e.endsWith('\"') || e.startsWith(\"'\") && e.endsWith(\"'\")) && (e = e.slice(1, -1)),  true && !e.startsWith(\"http\") && !e.startsWith(\"data:\")) throw new Error(`Image source must be an absolute URL: ${e}`);\n    if (e.startsWith(\"data:\")) {\n        let i;\n        try {\n            i = /data:(?<imageType>[a-z/+]+)(;(charset=)?(?<encodingType>.*))?,(?<dataString>.*)/g.exec(e).groups;\n        } catch  {\n            return console.warn(\"Image data URI resolved without size:\" + e), [\n                e\n            ];\n        }\n        let { imageType: o, encodingType: u, dataString: s } = i;\n        if (o === Cn) {\n            let a = u === \"base64\" ? atob(s) : decodeURIComponent(s.replace(/ /g, \"%20\")), l = u === \"base64\" ? e : `data:image/svg+xml;base64,${btoa(a)}`, f = uu(e, a);\n            return Re.set(e, [\n                l,\n                ...f\n            ]), [\n                l,\n                ...f\n            ];\n        } else if (u === \"base64\") {\n            let a, l = Zl(s);\n            switch(o){\n                case Nr:\n                case Mr:\n                    a = fu(l);\n                    break;\n                case $r:\n                    a = lu(l);\n                    break;\n                case Wr:\n                    a = au(l);\n                    break;\n            }\n            return Re.set(e, [\n                e,\n                ...a\n            ]), [\n                e,\n                ...a\n            ];\n        } else return console.warn(\"Image data URI resolved without size:\" + e), Re.set(e, [\n            e\n        ]), [\n            e\n        ];\n    }\n    if (!globalThis.fetch) throw new Error(\"`fetch` is required to be polyfilled to load images.\");\n    if (Sn.has(e)) return Sn.get(e);\n    let t = Re.get(e);\n    if (t) return t;\n    let n = e, r = fetch(n).then((i)=>{\n        let o = i.headers.get(\"content-type\");\n        return o === \"image/svg+xml\" || o === \"application/svg+xml\" ? i.text() : i.arrayBuffer();\n    }).then((i)=>{\n        if (typeof i == \"string\") try {\n            let s = `data:image/svg+xml;base64,${btoa(i)}`, a = uu(n, i);\n            return [\n                s,\n                ...a\n            ];\n        } catch (s) {\n            throw new Error(`Failed to parse SVG image: ${s.message}`);\n        }\n        let [o, u] = su(i);\n        return [\n            o,\n            ...u\n        ];\n    }).then((i)=>(Re.set(n, i), i)).catch((i)=>(console.error(`Can't load image ${n}: ` + i.message), Re.set(n, []), []));\n    return Sn.set(n, r), r;\n}\nfunction ef(e) {\n    return [\n        255,\n        216,\n        255\n    ].every((t, n)=>e[n] === t) ? Wr : [\n        137,\n        80,\n        78,\n        71,\n        13,\n        10,\n        26,\n        10\n    ].every((t, n)=>e[n] === t) ? tf(e) ? Mr : Nr : [\n        71,\n        73,\n        70,\n        56\n    ].every((t, n)=>e[n] === t) ? $r : [\n        82,\n        73,\n        70,\n        70,\n        0,\n        0,\n        0,\n        0,\n        87,\n        69,\n        66,\n        80\n    ].every((t, n)=>!t || e[n] === t) ? Ql : [\n        60,\n        63,\n        120,\n        109,\n        108\n    ].every((t, n)=>e[n] === t) ? Cn : [\n        0,\n        0,\n        0,\n        0,\n        102,\n        116,\n        121,\n        112,\n        97,\n        118,\n        105,\n        102\n    ].every((t, n)=>!t || e[n] === t) ? Xl : null;\n}\nfunction tf(e) {\n    let t = new DataView(e.buffer), n, r, i = 8, o = !1;\n    for(; !o && n !== \"IEND\" && i < e.length;){\n        r = t.getUint32(i);\n        let u = e.subarray(i + 4, i + 8);\n        n = String.fromCharCode(...u), o = n === \"acTL\", i += 12 + r;\n    }\n    return o;\n}\nvar _n = {\n    accentHeight: \"accent-height\",\n    alignmentBaseline: \"alignment-baseline\",\n    arabicForm: \"arabic-form\",\n    baselineShift: \"baseline-shift\",\n    capHeight: \"cap-height\",\n    clipPath: \"clip-path\",\n    clipRule: \"clip-rule\",\n    colorInterpolation: \"color-interpolation\",\n    colorInterpolationFilters: \"color-interpolation-filters\",\n    colorProfile: \"color-profile\",\n    colorRendering: \"color-rendering\",\n    dominantBaseline: \"dominant-baseline\",\n    enableBackground: \"enable-background\",\n    fillOpacity: \"fill-opacity\",\n    fillRule: \"fill-rule\",\n    floodColor: \"flood-color\",\n    floodOpacity: \"flood-opacity\",\n    fontFamily: \"font-family\",\n    fontSize: \"font-size\",\n    fontSizeAdjust: \"font-size-adjust\",\n    fontStretch: \"font-stretch\",\n    fontStyle: \"font-style\",\n    fontVariant: \"font-variant\",\n    fontWeight: \"font-weight\",\n    glyphName: \"glyph-name\",\n    glyphOrientationHorizontal: \"glyph-orientation-horizontal\",\n    glyphOrientationVertical: \"glyph-orientation-vertical\",\n    horizAdvX: \"horiz-adv-x\",\n    horizOriginX: \"horiz-origin-x\",\n    href: \"href\",\n    imageRendering: \"image-rendering\",\n    letterSpacing: \"letter-spacing\",\n    lightingColor: \"lighting-color\",\n    markerEnd: \"marker-end\",\n    markerMid: \"marker-mid\",\n    markerStart: \"marker-start\",\n    overlinePosition: \"overline-position\",\n    overlineThickness: \"overline-thickness\",\n    paintOrder: \"paint-order\",\n    panose1: \"panose-1\",\n    pointerEvents: \"pointer-events\",\n    renderingIntent: \"rendering-intent\",\n    shapeRendering: \"shape-rendering\",\n    stopColor: \"stop-color\",\n    stopOpacity: \"stop-opacity\",\n    strikethroughPosition: \"strikethrough-position\",\n    strikethroughThickness: \"strikethrough-thickness\",\n    strokeDasharray: \"stroke-dasharray\",\n    strokeDashoffset: \"stroke-dashoffset\",\n    strokeLinecap: \"stroke-linecap\",\n    strokeLinejoin: \"stroke-linejoin\",\n    strokeMiterlimit: \"stroke-miterlimit\",\n    strokeOpacity: \"stroke-opacity\",\n    strokeWidth: \"stroke-width\",\n    textAnchor: \"text-anchor\",\n    textDecoration: \"text-decoration\",\n    textRendering: \"text-rendering\",\n    underlinePosition: \"underline-position\",\n    underlineThickness: \"underline-thickness\",\n    unicodeBidi: \"unicode-bidi\",\n    unicodeRange: \"unicode-range\",\n    unitsPerEm: \"units-per-em\",\n    vAlphabetic: \"v-alphabetic\",\n    vHanging: \"v-hanging\",\n    vIdeographic: \"v-ideographic\",\n    vMathematical: \"v-mathematical\",\n    vectorEffect: \"vector-effect\",\n    vertAdvY: \"vert-adv-y\",\n    vertOriginX: \"vert-origin-x\",\n    vertOriginY: \"vert-origin-y\",\n    wordSpacing: \"word-spacing\",\n    writingMode: \"writing-mode\",\n    xHeight: \"x-height\",\n    xlinkActuate: \"xlink:actuate\",\n    xlinkArcrole: \"xlink:arcrole\",\n    xlinkHref: \"xlink:href\",\n    xlinkRole: \"xlink:role\",\n    xlinkShow: \"xlink:show\",\n    xlinkTitle: \"xlink:title\",\n    xlinkType: \"xlink:type\",\n    xmlBase: \"xml:base\",\n    xmlLang: \"xml:lang\",\n    xmlSpace: \"xml:space\",\n    xmlnsXlink: \"xmlns:xlink\"\n}, rf = /[\\r\\n%#()<>?[\\\\\\]^`{|}\"']/g;\nfunction kn(e, t) {\n    if (!e) return \"\";\n    if (Array.isArray(e)) return e.map((l)=>kn(l, t)).join(\"\");\n    if (typeof e != \"object\") return String(e);\n    let n = e.type;\n    if (n === \"text\") throw new Error(\"<text> nodes are not currently supported, please convert them to <path>\");\n    let { children: r, style: i, ...o } = e.props || {}, u = (i == null ? void 0 : i.color) || t, s = `${Object.entries(o).map(([l, f])=>(typeof f == \"string\" && f.toLowerCase() === \"currentcolor\" && (f = u), l === \"href\" && n === \"image\" ? ` ${_n[l] || l}=\"${Re.get(f)[0]}\"` : ` ${_n[l] || l}=\"${f}\"`)).join(\"\")}`, a = i ? ` style=\"${Object.entries(i).map(([l, f])=>`${ou(l)}:${f}`).join(\";\")}\"` : \"\";\n    return `<${n}${s}${a}>${kn(r, u)}</${n}>`;\n}\nasync function cu(e) {\n    let t = new Set, n = (r)=>{\n        if (r && bt(r)) {\n            if (Array.isArray(r)) {\n                r.forEach((i)=>n(i));\n                return;\n            } else typeof r == \"object\" && (r.type === \"image\" ? t.has(r.props.href) || t.add(r.props.href) : r.type === \"img\" && (t.has(r.props.src) || t.add(r.props.src)));\n            Array.isArray(r.props.children) ? r.props.children.map((i)=>n(i)) : n(r.props.children);\n        }\n    };\n    return n(e), Promise.all(Array.from(t).map((r)=>yt(r)));\n}\nasync function du(e, t) {\n    let { viewBox: n, viewbox: r, width: i, height: o, className: u, style: s, children: a, ...l } = e.props || {};\n    n ||= r, l.xmlns = \"http://www.w3.org/2000/svg\";\n    let f = (s == null ? void 0 : s.color) || t, c = vt(n), d = c ? c[3] / c[2] : null;\n    return i = i || d && o ? o / d : null, o = o || d && i ? i * d : null, l.width = i, l.height = o, n && (l.viewBox = n), `data:image/svg+xml;utf8,${`<svg ${Object.entries(l).map(([h, p])=>(typeof p == \"string\" && p.toLowerCase() === \"currentcolor\" && (p = f), ` ${_n[h] || h}=\"${p}\"`)).join(\"\")}>${kn(a, f)}</svg>`.replace(rf, encodeURIComponent)}`;\n}\nvar Ee = \"flex\", pu = {\n    p: {\n        display: Ee,\n        marginTop: \"1em\",\n        marginBottom: \"1em\"\n    },\n    div: {\n        display: Ee\n    },\n    blockquote: {\n        display: Ee,\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        marginLeft: 40,\n        marginRight: 40\n    },\n    center: {\n        display: Ee,\n        textAlign: \"center\"\n    },\n    hr: {\n        display: Ee,\n        marginTop: \"0.5em\",\n        marginBottom: \"0.5em\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        borderWidth: 1,\n        borderStyle: \"solid\"\n    },\n    h1: {\n        display: Ee,\n        fontSize: \"2em\",\n        marginTop: \"0.67em\",\n        marginBottom: \"0.67em\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontWeight: \"bold\"\n    },\n    h2: {\n        display: Ee,\n        fontSize: \"1.5em\",\n        marginTop: \"0.83em\",\n        marginBottom: \"0.83em\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontWeight: \"bold\"\n    },\n    h3: {\n        display: Ee,\n        fontSize: \"1.17em\",\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontWeight: \"bold\"\n    },\n    h4: {\n        display: Ee,\n        marginTop: \"1.33em\",\n        marginBottom: \"1.33em\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontWeight: \"bold\"\n    },\n    h5: {\n        display: Ee,\n        fontSize: \"0.83em\",\n        marginTop: \"1.67em\",\n        marginBottom: \"1.67em\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontWeight: \"bold\"\n    },\n    h6: {\n        display: Ee,\n        fontSize: \"0.67em\",\n        marginTop: \"2.33em\",\n        marginBottom: \"2.33em\",\n        marginLeft: 0,\n        marginRight: 0,\n        fontWeight: \"bold\"\n    },\n    u: {\n        textDecoration: \"underline\"\n    },\n    strong: {\n        fontWeight: \"bold\"\n    },\n    b: {\n        fontWeight: \"bold\"\n    },\n    i: {\n        fontStyle: \"italic\"\n    },\n    em: {\n        fontStyle: \"italic\"\n    },\n    code: {\n        fontFamily: \"monospace\"\n    },\n    kbd: {\n        fontFamily: \"monospace\"\n    },\n    pre: {\n        display: Ee,\n        fontFamily: \"monospace\",\n        whiteSpace: \"pre\",\n        marginTop: \"1em\",\n        marginBottom: \"1em\"\n    },\n    mark: {\n        backgroundColor: \"yellow\",\n        color: \"black\"\n    },\n    big: {\n        fontSize: \"larger\"\n    },\n    small: {\n        fontSize: \"smaller\"\n    },\n    s: {\n        textDecoration: \"line-through\"\n    }\n};\nvar nf = new Set([\n    \"color\",\n    \"font\",\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontStyle\",\n    \"fontWeight\",\n    \"letterSpacing\",\n    \"lineHeight\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textShadowOffset\",\n    \"textShadowColor\",\n    \"textShadowRadius\",\n    \"textDecorationLine\",\n    \"textDecorationStyle\",\n    \"textDecorationColor\",\n    \"whiteSpace\",\n    \"transform\",\n    \"wordBreak\",\n    \"tabSize\",\n    \"opacity\",\n    \"filter\",\n    \"_viewportWidth\",\n    \"_viewportHeight\",\n    \"_inheritedClipPathId\",\n    \"_inheritedMaskId\",\n    \"_inheritedBackgroundClipTextPath\"\n]);\nfunction Tn(e) {\n    let t = {};\n    for(let n in e)nf.has(n) && (t[n] = e[n]);\n    return t;\n}\n\n\n\n\n\nfunction uf(e, t) {\n    try {\n        let n = new Qe(e);\n        switch(n.unit){\n            case \"px\":\n                return {\n                    absolute: n.value\n                };\n            case \"em\":\n                return {\n                    absolute: n.value * t\n                };\n            case \"rem\":\n                return {\n                    absolute: n.value * 16\n                };\n            case \"%\":\n                return {\n                    relative: n.value\n                };\n            default:\n                return {};\n        }\n    } catch  {\n        return {};\n    }\n}\nfunction An(e, t, n) {\n    switch(e){\n        case \"top\":\n            return {\n                yRelative: 0\n            };\n        case \"left\":\n            return {\n                xRelative: 0\n            };\n        case \"right\":\n            return {\n                xRelative: 100\n            };\n        case \"bottom\":\n            return {\n                yRelative: 100\n            };\n        case \"center\":\n            return {};\n        default:\n            {\n                let r = uf(e, t);\n                return r.absolute ? {\n                    [n ? \"xAbsolute\" : \"yAbsolute\"]: r.absolute\n                } : r.relative ? {\n                    [n ? \"xRelative\" : \"yRelative\"]: r.relative\n                } : {};\n            }\n    }\n}\nfunction On(e, t) {\n    if (typeof e == \"number\") return {\n        xAbsolute: e\n    };\n    let n;\n    try {\n        n = postcss_value_parser__WEBPACK_IMPORTED_MODULE_5__(e).nodes.filter((r)=>r.type === \"word\").map((r)=>r.value);\n    } catch  {\n        return {};\n    }\n    return n.length === 1 ? An(n[0], t, !0) : n.length === 2 ? ((n[0] === \"top\" || n[0] === \"bottom\" || n[1] === \"left\" || n[1] === \"right\") && n.reverse(), {\n        ...An(n[0], t, !0),\n        ...An(n[1], t, !1)\n    }) : {};\n}\n\nfunction It(e, t) {\n    let n = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getPropertyName)(`mask-${t}`);\n    return e[n] || e[`WebkitM${n.substring(1)}`];\n}\nfunction hu(e) {\n    let t = e.maskImage || e.WebkitMaskImage, n = {\n        position: It(e, \"position\") || \"0% 0%\",\n        size: It(e, \"size\") || \"100% 100%\",\n        repeat: It(e, \"repeat\") || \"repeat\",\n        origin: It(e, \"origin\") || \"border-box\",\n        clip: It(e, \"origin\") || \"border-box\"\n    };\n    return Lr(t).filter((i)=>i && i !== \"none\").reverse().map((i)=>({\n            image: i,\n            ...n\n        }));\n}\nvar df = new Set([\n    \"flex\",\n    \"flexGrow\",\n    \"flexShrink\",\n    \"flexBasis\",\n    \"fontWeight\",\n    \"lineHeight\",\n    \"opacity\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\"\n]), pf = new Set([\n    \"lineHeight\"\n]);\nfunction hf(e, t, n, r) {\n    return e === \"textDecoration\" && !n.includes(t.textDecorationColor) && (t.textDecorationColor = r), t;\n}\nfunction Rt(e, t) {\n    let n = Number(t);\n    return isNaN(n) ? t : df.has(e) ? pf.has(e) ? n : String(t) : n + \"px\";\n}\nfunction mf(e, t, n) {\n    if (e === \"lineHeight\") return {\n        lineHeight: Rt(e, t)\n    };\n    if (e === \"fontFamily\") return {\n        fontFamily: t.split(\",\").map((r)=>r.trim().replace(/(^['\"])|(['\"]$)/g, \"\").toLocaleLowerCase())\n    };\n    if (e === \"borderRadius\") {\n        if (typeof t != \"string\" || !t.includes(\"/\")) return;\n        let [r, i] = t.split(\"/\"), o = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(e, r, !0), u = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(e, i, !0);\n        for(let s in o)u[s] = Rt(e, o[s]) + \" \" + Rt(e, u[s]);\n        return u;\n    }\n    if (/^border(Top|Right|Bottom|Left)?$/.test(e)) {\n        let r = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"border\", t, !0);\n        r.borderWidth === 1 && !String(t).includes(\"1px\") && (r.borderWidth = 3), r.borderColor === \"black\" && !String(t).includes(\"black\") && (r.borderColor = n);\n        let i = {\n            Width: Rt(e + \"Width\", r.borderWidth),\n            Style: ve(r.borderStyle, {\n                solid: \"solid\",\n                dashed: \"dashed\"\n            }, \"solid\", e + \"Style\"),\n            Color: r.borderColor\n        }, o = {};\n        for (let u of e === \"border\" ? [\n            \"Top\",\n            \"Right\",\n            \"Bottom\",\n            \"Left\"\n        ] : [\n            e.slice(6)\n        ])for(let s in i)o[\"border\" + u + s] = i[s];\n        return o;\n    }\n    if (e === \"boxShadow\") {\n        if (!t) throw new Error('Invalid `boxShadow` value: \"' + t + '\".');\n        return {\n            [e]: typeof t == \"string\" ? (0,css_box_shadow__WEBPACK_IMPORTED_MODULE_3__.parse)(t) : t\n        };\n    }\n    if (e === \"transform\") {\n        if (typeof t != \"string\") throw new Error(\"Invalid `transform` value.\");\n        let r = {}, i = t.replace(/(-?[\\d.]+%)/g, (u, s)=>{\n            let a = ~~(Math.random() * 1e9);\n            return r[a] = s, a + \"px\";\n        }), o = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"transform\", i, !0);\n        for (let u of o.transform)for(let s in u)r[u[s]] && (u[s] = r[u[s]]);\n        return o;\n    }\n    if (e === \"background\") return t = t.toString().trim(), /^(linear-gradient|radial-gradient|url)\\(/.test(t) ? (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"backgroundImage\", t, !0) : (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"background\", t, !0);\n    if (e === \"textShadow\") {\n        t = t.toString().trim();\n        let r = {}, i = Lr(t);\n        for (let o of i){\n            let u = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"textShadow\", o, !0);\n            for(let s in u)r[s] ? r[s].push(u[s]) : r[s] = [\n                u[s]\n            ];\n        }\n        return r;\n    }\n}\nfunction mu(e) {\n    return e === \"transform\" ? \" Only absolute lengths such as `10px` are supported.\" : \"\";\n}\nvar Du = /rgb\\((\\d+)\\s+(\\d+)\\s+(\\d+)\\s*\\/\\s*([\\.\\d]+)\\)/;\nfunction bu(e) {\n    if (typeof e == \"string\" && Du.test(e.trim())) return e.trim().replace(Du, (t, n, r, i, o)=>`rgba(${n}, ${r}, ${i}, ${o})`);\n    if (typeof e == \"object\" && e !== null) {\n        for(let t in e)e[t] = bu(e[t]);\n        return e;\n    }\n    return e;\n}\nfunction qr(e, t) {\n    let n = {};\n    if (e) {\n        let i = gf(e.color, t.color);\n        n.color = i;\n        for(let o in e){\n            if (o.startsWith(\"_\")) {\n                n[o] = e[o];\n                continue;\n            }\n            if (o === \"color\") continue;\n            let u = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getPropertyName)(o), s = vf(e[o], i);\n            try {\n                let a = mf(u, s, i) || hf(u, (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(u, Rt(u, s), !0), s, i);\n                Object.assign(n, a);\n            } catch (a) {\n                throw new Error(a.message + (a.message.includes(s) ? `\n  ` + mu(u) : `\n  in CSS rule \\`${u}: ${s}\\`.${mu(u)}`));\n            }\n        }\n    }\n    if (n.backgroundImage) {\n        let { backgrounds: i } = (0,css_background_parser__WEBPACK_IMPORTED_MODULE_2__.parseElementStyle)(n);\n        n.backgroundImage = i;\n    }\n    (n.maskImage || n.WebkitMaskImage) && (n.maskImage = hu(n));\n    let r = Df(n.fontSize, t.fontSize);\n    typeof n.fontSize < \"u\" && (n.fontSize = r), n.transformOrigin && (n.transformOrigin = On(n.transformOrigin, r));\n    for(let i in n){\n        let o = n[i];\n        if (i === \"lineHeight\") typeof o == \"string\" && (o = n[i] = W(o, r, r, t, !0) / r);\n        else {\n            if (typeof o == \"string\") {\n                let u = W(o, r, r, t);\n                typeof u < \"u\" && (n[i] = u), o = n[i];\n            }\n            if (typeof o == \"string\" || typeof o == \"object\") {\n                let u = bu(o);\n                u && (n[i] = u), o = n[i];\n            }\n        }\n        if (i === \"opacity\" && typeof o == \"number\" && (n.opacity = o * t.opacity), i === \"transform\") {\n            let u = o;\n            for (let s of u){\n                let a = Object.keys(s)[0], l = s[a], f = typeof l == \"string\" ? W(l, r, r, t) ?? l : l;\n                s[a] = f;\n            }\n        }\n        if (i === \"textShadowRadius\") {\n            let u = o;\n            n.textShadowRadius = u.map((s)=>W(s, r, 0, t, !1));\n        }\n        if (i === \"textShadowOffset\") {\n            let u = o;\n            n.textShadowOffset = u.map(({ height: s, width: a })=>({\n                    height: W(s, r, 0, t, !1),\n                    width: W(a, r, 0, t, !1)\n                }));\n        }\n    }\n    return n;\n}\nfunction Df(e, t) {\n    if (typeof e == \"number\") return e;\n    try {\n        let n = new Qe(e);\n        switch(n.unit){\n            case \"em\":\n                return n.value * t;\n            case \"rem\":\n                return n.value * 16;\n        }\n    } catch  {\n        return t;\n    }\n}\nfunction gu(e) {\n    if (e.startsWith(\"hsl\")) {\n        let t = (0,parse_css_color__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(e), [n, r, i] = t.values;\n        return `hsl(${[\n            n,\n            `${r}%`,\n            `${i}%`\n        ].concat(t.alpha === 1 ? [] : [\n            t.alpha\n        ]).join(\",\")})`;\n    }\n    return e;\n}\nfunction gf(e, t) {\n    return e && e.toLowerCase() !== \"currentcolor\" ? gu(e) : gu(t);\n}\nfunction bf(e, t) {\n    return e.replace(/currentcolor/gi, t);\n}\nfunction vf(e, t) {\n    return Rr(e) && (e = bf(e, t)), e;\n}\nasync function Pn(e, t, n, r, i) {\n    let o = await qe(), u = {\n        ...n,\n        ...qr(pu[t], n),\n        ...qr(r, n)\n    };\n    if (t === \"img\") {\n        let [s, a, l] = await yt(i.src);\n        if (a === void 0 && l === void 0) {\n            if (i.width === void 0 || i.height === void 0) throw new Error(\"Image size cannot be determined. Please provide the width and height of the image.\");\n            a = parseInt(i.width), l = parseInt(i.height);\n        }\n        let f = l / a, c = (u.borderLeftWidth || 0) + (u.borderRightWidth || 0) + (u.paddingLeft || 0) + (u.paddingRight || 0), d = (u.borderTopWidth || 0) + (u.borderBottomWidth || 0) + (u.paddingTop || 0) + (u.paddingBottom || 0), h = u.width || i.width, p = u.height || i.height, m = typeof h == \"number\" && typeof p == \"number\";\n        m && (h -= c, p -= d), h === void 0 && p === void 0 ? (h = \"100%\", e.setAspectRatio(1 / f)) : h === void 0 ? typeof p == \"number\" ? h = p / f : e.setAspectRatio(1 / f) : p === void 0 && (typeof h == \"number\" ? p = h * f : e.setAspectRatio(1 / f)), u.width = m ? h + c : h, u.height = m ? p + d : p, u.__src = s;\n    }\n    if (t === \"svg\") {\n        let s = i.viewBox || i.viewbox, a = vt(s), l = a ? a[3] / a[2] : null, { width: f, height: c } = i;\n        typeof f > \"u\" && c ? l == null ? f = 0 : typeof c == \"string\" && c.endsWith(\"%\") ? f = parseInt(c) / l + \"%\" : (c = W(c, n.fontSize, 1, n), f = c / l) : typeof c > \"u\" && f ? l == null ? f = 0 : typeof f == \"string\" && f.endsWith(\"%\") ? c = parseInt(f) * l + \"%\" : (f = W(f, n.fontSize, 1, n), c = f * l) : (typeof f < \"u\" && (f = W(f, n.fontSize, 1, n) || f), typeof c < \"u\" && (c = W(c, n.fontSize, 1, n) || c), f ||= a == null ? void 0 : a[2], c ||= a == null ? void 0 : a[3]), !u.width && f && (u.width = f), !u.height && c && (u.height = c);\n    }\n    return e.setDisplay(ve(u.display, {\n        flex: o.DISPLAY_FLEX,\n        block: o.DISPLAY_FLEX,\n        none: o.DISPLAY_NONE,\n        \"-webkit-box\": o.DISPLAY_FLEX\n    }, o.DISPLAY_FLEX, \"display\")), e.setAlignContent(ve(u.alignContent, {\n        stretch: o.ALIGN_STRETCH,\n        center: o.ALIGN_CENTER,\n        \"flex-start\": o.ALIGN_FLEX_START,\n        \"flex-end\": o.ALIGN_FLEX_END,\n        \"space-between\": o.ALIGN_SPACE_BETWEEN,\n        \"space-around\": o.ALIGN_SPACE_AROUND,\n        baseline: o.ALIGN_BASELINE,\n        normal: o.ALIGN_AUTO\n    }, o.ALIGN_AUTO, \"alignContent\")), e.setAlignItems(ve(u.alignItems, {\n        stretch: o.ALIGN_STRETCH,\n        center: o.ALIGN_CENTER,\n        \"flex-start\": o.ALIGN_FLEX_START,\n        \"flex-end\": o.ALIGN_FLEX_END,\n        baseline: o.ALIGN_BASELINE,\n        normal: o.ALIGN_AUTO\n    }, o.ALIGN_STRETCH, \"alignItems\")), e.setAlignSelf(ve(u.alignSelf, {\n        stretch: o.ALIGN_STRETCH,\n        center: o.ALIGN_CENTER,\n        \"flex-start\": o.ALIGN_FLEX_START,\n        \"flex-end\": o.ALIGN_FLEX_END,\n        baseline: o.ALIGN_BASELINE,\n        normal: o.ALIGN_AUTO\n    }, o.ALIGN_AUTO, \"alignSelf\")), e.setJustifyContent(ve(u.justifyContent, {\n        center: o.JUSTIFY_CENTER,\n        \"flex-start\": o.JUSTIFY_FLEX_START,\n        \"flex-end\": o.JUSTIFY_FLEX_END,\n        \"space-between\": o.JUSTIFY_SPACE_BETWEEN,\n        \"space-around\": o.JUSTIFY_SPACE_AROUND\n    }, o.JUSTIFY_FLEX_START, \"justifyContent\")), e.setFlexDirection(ve(u.flexDirection, {\n        row: o.FLEX_DIRECTION_ROW,\n        column: o.FLEX_DIRECTION_COLUMN,\n        \"row-reverse\": o.FLEX_DIRECTION_ROW_REVERSE,\n        \"column-reverse\": o.FLEX_DIRECTION_COLUMN_REVERSE\n    }, o.FLEX_DIRECTION_ROW, \"flexDirection\")), e.setFlexWrap(ve(u.flexWrap, {\n        wrap: o.WRAP_WRAP,\n        nowrap: o.WRAP_NO_WRAP,\n        \"wrap-reverse\": o.WRAP_WRAP_REVERSE\n    }, o.WRAP_NO_WRAP, \"flexWrap\")), typeof u.gap < \"u\" && e.setGap(o.GUTTER_ALL, u.gap), typeof u.rowGap < \"u\" && e.setGap(o.GUTTER_ROW, u.rowGap), typeof u.columnGap < \"u\" && e.setGap(o.GUTTER_COLUMN, u.columnGap), typeof u.flexBasis < \"u\" && e.setFlexBasis(u.flexBasis), e.setFlexGrow(typeof u.flexGrow > \"u\" ? 0 : u.flexGrow), e.setFlexShrink(typeof u.flexShrink > \"u\" ? 0 : u.flexShrink), typeof u.maxHeight < \"u\" && e.setMaxHeight(u.maxHeight), typeof u.maxWidth < \"u\" && e.setMaxWidth(u.maxWidth), typeof u.minHeight < \"u\" && e.setMinHeight(u.minHeight), typeof u.minWidth < \"u\" && e.setMinWidth(u.minWidth), e.setOverflow(ve(u.overflow, {\n        visible: o.OVERFLOW_VISIBLE,\n        hidden: o.OVERFLOW_HIDDEN\n    }, o.OVERFLOW_VISIBLE, \"overflow\")), e.setMargin(o.EDGE_TOP, u.marginTop || 0), e.setMargin(o.EDGE_BOTTOM, u.marginBottom || 0), e.setMargin(o.EDGE_LEFT, u.marginLeft || 0), e.setMargin(o.EDGE_RIGHT, u.marginRight || 0), e.setBorder(o.EDGE_TOP, u.borderTopWidth || 0), e.setBorder(o.EDGE_BOTTOM, u.borderBottomWidth || 0), e.setBorder(o.EDGE_LEFT, u.borderLeftWidth || 0), e.setBorder(o.EDGE_RIGHT, u.borderRightWidth || 0), e.setPadding(o.EDGE_TOP, u.paddingTop || 0), e.setPadding(o.EDGE_BOTTOM, u.paddingBottom || 0), e.setPadding(o.EDGE_LEFT, u.paddingLeft || 0), e.setPadding(o.EDGE_RIGHT, u.paddingRight || 0), e.setPositionType(ve(u.position, {\n        absolute: o.POSITION_TYPE_ABSOLUTE,\n        relative: o.POSITION_TYPE_RELATIVE\n    }, o.POSITION_TYPE_RELATIVE, \"position\")), typeof u.top < \"u\" && e.setPosition(o.EDGE_TOP, u.top), typeof u.bottom < \"u\" && e.setPosition(o.EDGE_BOTTOM, u.bottom), typeof u.left < \"u\" && e.setPosition(o.EDGE_LEFT, u.left), typeof u.right < \"u\" && e.setPosition(o.EDGE_RIGHT, u.right), typeof u.height < \"u\" ? e.setHeight(u.height) : e.setHeightAuto(), typeof u.width < \"u\" ? e.setWidth(u.width) : e.setWidthAuto(), [\n        u,\n        Tn(u)\n    ];\n}\n\nvar vu = [\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n];\nfunction yf(e, t, n) {\n    let r = [\n        ...vu\n    ];\n    for (let i of e){\n        let o = Object.keys(i)[0], u = i[o];\n        if (typeof u == \"string\") if (o === \"translateX\") u = parseFloat(u) / 100 * t, i[o] = u;\n        else if (o === \"translateY\") u = parseFloat(u) / 100 * n, i[o] = u;\n        else throw new Error(`Invalid transform: \"${o}: ${u}\".`);\n        let s = u, a = [\n            ...vu\n        ];\n        switch(o){\n            case \"translateX\":\n                a[4] = s;\n                break;\n            case \"translateY\":\n                a[5] = s;\n                break;\n            case \"scale\":\n                a[0] = s, a[3] = s;\n                break;\n            case \"scaleX\":\n                a[0] = s;\n                break;\n            case \"scaleY\":\n                a[3] = s;\n                break;\n            case \"rotate\":\n                {\n                    let l = s * Math.PI / 180, f = Math.cos(l), c = Math.sin(l);\n                    a[0] = f, a[1] = c, a[2] = -c, a[3] = f;\n                    break;\n                }\n            case \"skewX\":\n                a[2] = Math.tan(s * Math.PI / 180);\n                break;\n            case \"skewY\":\n                a[1] = Math.tan(s * Math.PI / 180);\n                break;\n        }\n        r = Bt(a, r);\n    }\n    e.splice(0, e.length), e.push(...r), e.__resolved = !0;\n}\nfunction Lt({ left: e, top: t, width: n, height: r }, i, o, u) {\n    let s;\n    i.__resolved || yf(i, n, r);\n    let a = i;\n    if (o) s = a;\n    else {\n        let l = (u == null ? void 0 : u.xAbsolute) ?? ((u == null ? void 0 : u.xRelative) ?? 50) * n / 100, f = (u == null ? void 0 : u.yAbsolute) ?? ((u == null ? void 0 : u.yRelative) ?? 50) * r / 100, c = e + l, d = t + f;\n        s = Bt([\n            1,\n            0,\n            0,\n            1,\n            c,\n            d\n        ], Bt(a, [\n            1,\n            0,\n            0,\n            1,\n            -c,\n            -d\n        ])), a.__parent && (s = Bt(a.__parent, s)), a.splice(0, 6, ...s);\n    }\n    return `matrix(${s.map((l)=>l.toFixed(2)).join(\",\")})`;\n}\nfunction xu({ left: e, top: t, width: n, height: r, isInheritingTransform: i }, o) {\n    let u = \"\", s = 1;\n    return o.transform && (u = Lt({\n        left: e,\n        top: t,\n        width: n,\n        height: r\n    }, o.transform, i, o.transformOrigin)), o.opacity !== void 0 && (s = +o.opacity), {\n        matrix: u,\n        opacity: s\n    };\n}\nfunction Bn({ id: e, content: t, filter: n, left: r, top: i, width: o, height: u, matrix: s, opacity: a, image: l, clipPathId: f, debug: c, shape: d, decorationShape: h }, p) {\n    let m = \"\";\n    if (c && (m = S(\"rect\", {\n        x: r,\n        y: i - u,\n        width: o,\n        height: u,\n        fill: \"transparent\",\n        stroke: \"#575eff\",\n        \"stroke-width\": 1,\n        transform: s || void 0,\n        \"clip-path\": f ? `url(#${f})` : void 0\n    })), l) {\n        let D = {\n            href: l,\n            x: r,\n            y: i,\n            width: o,\n            height: u,\n            transform: s || void 0,\n            \"clip-path\": f ? `url(#${f})` : void 0,\n            style: p.filter ? `filter:${p.filter}` : void 0\n        };\n        return [\n            (n ? `${n}<g filter=\"url(#satori_s-${e})\">` : \"\") + S(\"image\", {\n                ...D,\n                opacity: a !== 1 ? a : void 0\n            }) + (h || \"\") + (n ? \"</g>\" : \"\") + m,\n            \"\"\n        ];\n    }\n    let v = {\n        x: r,\n        y: i,\n        width: o,\n        height: u,\n        \"font-weight\": p.fontWeight,\n        \"font-style\": p.fontStyle,\n        \"font-size\": p.fontSize,\n        \"font-family\": p.fontFamily,\n        \"letter-spacing\": p.letterSpacing || void 0,\n        transform: s || void 0,\n        \"clip-path\": f ? `url(#${f})` : void 0,\n        style: p.filter ? `filter:${p.filter}` : void 0\n    };\n    return [\n        (n ? `${n}<g filter=\"url(#satori_s-${e})\">` : \"\") + S(\"text\", {\n            ...v,\n            fill: p.color,\n            opacity: a !== 1 ? a : void 0\n        }, escape_html__WEBPACK_IMPORTED_MODULE_6__(t)) + (h || \"\") + (n ? \"</g>\" : \"\") + m,\n        d ? S(\"text\", v, escape_html__WEBPACK_IMPORTED_MODULE_6__(t)) : \"\"\n    ];\n}\nfunction xf(e, t, n) {\n    return e.replace(/([MA])([0-9.-]+),([0-9.-]+)/g, function(r, i, o, u) {\n        return i + (parseFloat(o) + t) + \",\" + (parseFloat(u) + n);\n    });\n}\nvar zr = 1.1;\nfunction Fu({ id: e, width: t, height: n }, r) {\n    if (!r.shadowColor || !r.shadowOffset || typeof r.shadowRadius > \"u\") return \"\";\n    let i = r.shadowColor.length, o = \"\", u = \"\", s = 0, a = t, l = 0, f = n;\n    for(let c = 0; c < i; c++){\n        let d = r.shadowRadius[c] * r.shadowRadius[c] / 4;\n        s = Math.min(r.shadowOffset[c].width - d, s), a = Math.max(r.shadowOffset[c].width + d + t, a), l = Math.min(r.shadowOffset[c].height - d, l), f = Math.max(r.shadowOffset[c].height + d + n, f), o += S(\"feDropShadow\", {\n            dx: r.shadowOffset[c].width,\n            dy: r.shadowOffset[c].height,\n            stdDeviation: r.shadowRadius[c] / 2,\n            \"flood-color\": r.shadowColor[c],\n            \"flood-opacity\": 1,\n            ...i > 1 ? {\n                in: \"SourceGraphic\",\n                result: `satori_s-${e}-result-${c}`\n            } : {}\n        }), i > 1 && (u = S(\"feMergeNode\", {\n            in: `satori_s-${e}-result-${c}`\n        }) + u);\n    }\n    return S(\"filter\", {\n        id: `satori_s-${e}`,\n        x: (s / t * 100 * zr).toFixed(2) + \"%\",\n        y: (l / n * 100 * zr).toFixed(2) + \"%\",\n        width: ((a - s) / t * 100 * zr).toFixed(2) + \"%\",\n        height: ((f - l) / n * 100 * zr).toFixed(2) + \"%\"\n    }, o + (u ? S(\"feMerge\", {}, u) : \"\"));\n}\nfunction wu({ width: e, height: t, shape: n, opacity: r, id: i }, o) {\n    if (!o.boxShadow) return null;\n    let u = \"\", s = \"\";\n    for(let a = o.boxShadow.length - 1; a >= 0; a--){\n        let l = \"\", f = o.boxShadow[a];\n        f.spreadRadius && f.inset && (f.spreadRadius = -f.spreadRadius);\n        let c = f.blurRadius * f.blurRadius / 4 + (f.spreadRadius || 0), d = Math.min(-c - (f.inset ? f.offsetX : 0), 0), h = Math.max(c + e - (f.inset ? f.offsetX : 0), e), p = Math.min(-c - (f.inset ? f.offsetY : 0), 0), m = Math.max(c + t - (f.inset ? f.offsetY : 0), t), v = `satori_s-${i}-${a}`, D = `satori_ms-${i}-${a}`, b = f.spreadRadius ? n.replace('stroke-width=\"0\"', `stroke-width=\"${f.spreadRadius * 2}\"`) : n;\n        l += S(\"mask\", {\n            id: D,\n            maskUnits: \"userSpaceOnUse\"\n        }, S(\"rect\", {\n            x: 0,\n            y: 0,\n            width: o._viewportWidth || \"100%\",\n            height: o._viewportHeight || \"100%\",\n            fill: f.inset ? \"#000\" : \"#fff\"\n        }) + b.replace('fill=\"#fff\"', f.inset ? 'fill=\"#fff\"' : 'fill=\"#000\"').replace('stroke=\"#fff\"', \"\"));\n        let y = b.replace(/d=\"([^\"]+)\"/, (F, x)=>'d=\"' + xf(x, f.offsetX, f.offsetY) + '\"').replace(/x=\"([^\"]+)\"/, (F, x)=>'x=\"' + (parseFloat(x) + f.offsetX) + '\"').replace(/y=\"([^\"]+)\"/, (F, x)=>'y=\"' + (parseFloat(x) + f.offsetY) + '\"');\n        f.spreadRadius && f.spreadRadius < 0 && (l += S(\"mask\", {\n            id: D + \"-neg\",\n            maskUnits: \"userSpaceOnUse\"\n        }, y.replace('stroke=\"#fff\"', 'stroke=\"#000\"').replace(/stroke-width=\"[^\"]+\"/, `stroke-width=\"${-f.spreadRadius * 2}\"`))), f.spreadRadius && f.spreadRadius < 0 && (y = S(\"g\", {\n            mask: `url(#${D}-neg)`\n        }, y)), l += S(\"defs\", {}, S(\"filter\", {\n            id: v,\n            x: `${d / e * 100}%`,\n            y: `${p / t * 100}%`,\n            width: `${(h - d) / e * 100}%`,\n            height: `${(m - p) / t * 100}%`\n        }, S(\"feGaussianBlur\", {\n            stdDeviation: f.blurRadius / 2,\n            result: \"b\"\n        }) + S(\"feFlood\", {\n            \"flood-color\": f.color,\n            in: \"SourceGraphic\",\n            result: \"f\"\n        }) + S(\"feComposite\", {\n            in: \"f\",\n            in2: \"b\",\n            operator: f.inset ? \"out\" : \"in\"\n        }))) + S(\"g\", {\n            mask: `url(#${D})`,\n            filter: `url(#${v})`,\n            opacity: r\n        }, y), f.inset ? s += l : u += l;\n    }\n    return [\n        u,\n        s\n    ];\n}\nfunction In({ width: e, left: t, top: n, ascender: r, clipPathId: i }, o) {\n    let { textDecorationColor: u, textDecorationStyle: s, textDecorationLine: a, fontSize: l, color: f } = o;\n    if (!a || a === \"none\") return \"\";\n    let c = Math.max(1, l * .1), d = a === \"line-through\" ? n + r * .7 : a === \"underline\" ? n + r * 1.1 : n, h = s === \"dashed\" ? `${c * 1.2} ${c * 2}` : s === \"dotted\" ? `0 ${c * 2}` : void 0;\n    return S(\"line\", {\n        x1: t,\n        y1: d,\n        x2: t + e,\n        y2: d,\n        stroke: u || f,\n        \"stroke-width\": c,\n        \"stroke-dasharray\": h,\n        \"stroke-linecap\": s === \"dotted\" ? \"round\" : \"square\",\n        \"clip-path\": i ? `url(#${i})` : void 0\n    });\n}\nfunction Rn(e) {\n    return e = e.replace(\"U+\", \"0x\"), String.fromCodePoint(Number(e));\n}\nvar ut = Rn(\"U+0020\"), Ln = Rn(\"U+0009\"), xt = Rn(\"U+2026\");\nfunction Eu(e, t, n) {\n    let { fontSize: r, letterSpacing: i } = n, o = new Map;\n    function u(l) {\n        if (o.has(l)) return o.get(l);\n        let f = e.measure(l, {\n            fontSize: r,\n            letterSpacing: i\n        });\n        return o.set(l, f), f;\n    }\n    function s(l) {\n        let f = 0;\n        for (let c of l)t(c) ? f += r : f += u(c);\n        return f;\n    }\n    function a(l) {\n        return s(be(l, \"grapheme\"));\n    }\n    return {\n        measureGrapheme: u,\n        measureGraphemeArray: s,\n        measureText: a\n    };\n}\nfunction Su(e, t, n) {\n    let { textTransform: r, whiteSpace: i, wordBreak: o } = t;\n    e = Ff(e, r, n);\n    let { content: u, shouldCollapseTabsAndSpaces: s, allowSoftWrap: a } = Sf(e, i), { words: l, requiredBreaks: f, allowBreakWord: c } = Ef(u, o), [d, h] = wf(t, a);\n    return {\n        words: l,\n        requiredBreaks: f,\n        allowSoftWrap: a,\n        allowBreakWord: c,\n        processedContent: u,\n        shouldCollapseTabsAndSpaces: s,\n        lineLimit: d,\n        blockEllipsis: h\n    };\n}\nfunction Ff(e, t, n) {\n    return t === \"uppercase\" ? e = e.toLocaleUpperCase(n) : t === \"lowercase\" ? e = e.toLocaleLowerCase(n) : t === \"capitalize\" && (e = be(e, \"word\", n).map((r)=>be(r, \"grapheme\", n).map((i, o)=>o === 0 ? i.toLocaleUpperCase(n) : i).join(\"\")).join(\"\")), e;\n}\nfunction wf(e, t) {\n    let { textOverflow: n, lineClamp: r, WebkitLineClamp: i, WebkitBoxOrient: o, overflow: u, display: s } = e;\n    if (s === \"block\" && r) {\n        let [a, l = xt] = Cf(r);\n        if (a) return [\n            a,\n            l\n        ];\n    }\n    return n === \"ellipsis\" && s === \"-webkit-box\" && o === \"vertical\" && ru(i) && i > 0 ? [\n        i,\n        xt\n    ] : n === \"ellipsis\" && u === \"hidden\" && !t ? [\n        1,\n        xt\n    ] : [\n        1 / 0\n    ];\n}\nfunction Ef(e, t) {\n    let n = [\n        \"break-all\",\n        \"break-word\"\n    ].includes(t), { words: r, requiredBreaks: i } = iu(e, t);\n    return {\n        words: r,\n        requiredBreaks: i,\n        allowBreakWord: n\n    };\n}\nfunction Sf(e, t) {\n    let n = [\n        \"pre\",\n        \"pre-wrap\",\n        \"pre-line\"\n    ].includes(t), r = [\n        \"normal\",\n        \"nowrap\",\n        \"pre-line\"\n    ].includes(t), i = ![\n        \"pre\",\n        \"nowrap\"\n    ].includes(t);\n    return n || (e = e.replace(/\\n/g, ut)), r && (e = e.replace(/([ ]|\\t)+/g, ut).trim()), {\n        content: e,\n        shouldCollapseTabsAndSpaces: r,\n        allowSoftWrap: i\n    };\n}\nfunction Cf(e) {\n    if (typeof e == \"number\") return [\n        e\n    ];\n    let t = /^(\\d+)\\s*\"(.*)\"$/, n = /^(\\d+)\\s*'(.*)'$/, r = t.exec(e), i = n.exec(e);\n    if (r) {\n        let o = +r[1], u = r[2];\n        return [\n            o,\n            u\n        ];\n    } else if (i) {\n        let o = +i[1], u = i[2];\n        return [\n            o,\n            u\n        ];\n    }\n    return [];\n}\nvar _f = new Set([\n    Ln\n]);\nfunction kf(e) {\n    return _f.has(e);\n}\nasync function* Mn(e, t) {\n    let n = await qe(), { parentStyle: r, inheritedStyle: i, parent: o, font: u, id: s, isInheritingTransform: a, debug: l, embedFont: f, graphemeImages: c, locale: d, canLoadAdditionalAssets: h } = t, { textAlign: p, lineHeight: m, textWrap: v, fontSize: D, filter: b, tabSize: y = 8, letterSpacing: F, _inheritedBackgroundClipTextPath: x, flexShrink: k } = r, { words: B, requiredBreaks: I, allowSoftWrap: G, allowBreakWord: ue, processedContent: ae, shouldCollapseTabsAndSpaces: ie, lineLimit: N, blockEllipsis: R } = Su(e, r, d), j = Tf(n, p);\n    o.insertChild(j, o.getChildCount()), nu(k) && o.setFlexShrink(1);\n    let K = u.getEngine(D, m, r, d), ce = h ? be(ae, \"grapheme\").filter((M)=>!kf(M) && !K.has(M)) : [];\n    yield ce.map((M)=>({\n            word: M,\n            locale: d\n        })), ce.length && (K = u.getEngine(D, m, r, d));\n    function ee(M) {\n        return !!(c && c[M]);\n    }\n    let { measureGrapheme: te, measureGraphemeArray: Ae, measureText: A } = Eu(K, ee, {\n        fontSize: D,\n        letterSpacing: F\n    }), O = Rr(y) ? W(y, D, 1, r) : te(ut) * y, L = (M, J)=>{\n        if (M.length === 0) return {\n            originWidth: 0,\n            endingSpacesWidth: 0,\n            text: M\n        };\n        let { index: oe, tabCount: U } = Af(M), le = 0;\n        if (U > 0) {\n            let fe = M.slice(0, oe), se = M.slice(oe + U), Y = A(fe), Ie = Y + J;\n            le = (O === 0 ? Y : (Math.floor(Ie / O) + U) * O) + A(se);\n        } else le = A(M);\n        let H = M.trimEnd() === M ? le : A(M.trimEnd());\n        return {\n            originWidth: le,\n            endingSpacesWidth: le - H,\n            text: M\n        };\n    }, P = [], he = [], me = [], Be = [], kt = [];\n    function Dn(M) {\n        let J = 0, oe = 0, U = -1, le = 0, H = 0, fe = 0, se = 0;\n        P = [], me = [\n            0\n        ], Be = [], kt = [];\n        let Y = 0, Ie = 0;\n        for(; Y < B.length && J < N;){\n            let $ = B[Y], nt = I[Y], we = 0, { originWidth: Ve, endingSpacesWidth: Ar, text: Ye } = L($, H);\n            $ = Ye, we = Ve;\n            let Z = Ar;\n            nt && fe === 0 && (fe = K.height($));\n            let De = \",.!?:-@)>]}%#\".indexOf($[0]) < 0, Xe = !H, Or = Y && De && H + we > M + Z && G;\n            if (ue && we > M && (!H || Or || nt)) {\n                let ge = be($, \"grapheme\");\n                B.splice(Y, 1, ...ge), H > 0 && (P.push(H - Ie), he.push(se), J++, le += fe, H = 0, fe = 0, se = 0, me.push(1), U = -1), Ie = Z;\n                continue;\n            }\n            if (nt || Or) ie && $ === ut && (we = 0), P.push(H - Ie), he.push(se), J++, le += fe, H = we, fe = we ? K.height($) : 0, se = we ? K.baseline($) : 0, me.push(1), U = -1, nt || (oe = Math.max(oe, M));\n            else {\n                H += we;\n                let ge = K.height($);\n                ge > fe && (fe = ge, se = K.baseline($)), Xe && me[me.length - 1]++;\n            }\n            Xe && U++, oe = Math.max(oe, H);\n            let it = H - we;\n            if (we === 0) kt.push({\n                y: le,\n                x: it,\n                width: 0,\n                line: J,\n                lineIndex: U,\n                isImage: !1\n            });\n            else {\n                let ge = be($, \"word\");\n                for(let Oe = 0; Oe < ge.length; Oe++){\n                    let ot = ge[Oe], $e = 0, At = !1;\n                    ee(ot) ? ($e = D, At = !0) : $e = te(ot), Be.push(ot), kt.push({\n                        y: le,\n                        x: it,\n                        width: $e,\n                        line: J,\n                        lineIndex: U,\n                        isImage: At\n                    }), it += $e;\n                }\n            }\n            Y++, Ie = Z;\n        }\n        return H && (J < N && (le += fe), J++, P.push(H), he.push(se)), {\n            width: oe,\n            height: le\n        };\n    }\n    let Er = {\n        width: 0,\n        height: 0\n    };\n    j.setMeasureFunc((M)=>{\n        let { width: J, height: oe } = Dn(M);\n        if (v === \"balance\") {\n            let le = J / 2, H = J, fe = J;\n            for(; le + 1 < H;){\n                fe = (le + H) / 2;\n                let { height: Y } = Dn(fe);\n                Y > oe ? le = fe : H = fe;\n            }\n            Dn(H);\n            let se = Math.ceil(H);\n            return Er = {\n                width: se,\n                height: oe\n            }, {\n                width: se,\n                height: oe\n            };\n        }\n        let U = Math.ceil(J);\n        return Er = {\n            width: U,\n            height: oe\n        }, {\n            width: U,\n            height: oe\n        };\n    });\n    let [El, Sl] = yield, gn = \"\", Sr = \"\", je = i._inheritedClipPathId, Mo = i._inheritedMaskId, { left: No, top: Wo, width: bn, height: Cl } = j.getComputedLayout(), Cr = o.getComputedWidth() - o.getComputedPadding(n.EDGE_LEFT) - o.getComputedPadding(n.EDGE_RIGHT) - o.getComputedBorder(n.EDGE_LEFT) - o.getComputedBorder(n.EDGE_RIGHT), pt = El + No, ht = Sl + Wo, { matrix: We, opacity: _r } = xu({\n        left: No,\n        top: Wo,\n        width: bn,\n        height: Cl,\n        isInheritingTransform: a\n    }, r), mt = \"\";\n    if (r.textShadowOffset) {\n        let { textShadowColor: M, textShadowOffset: J, textShadowRadius: oe } = r;\n        mt = Fu({\n            width: Er.width,\n            height: Er.height,\n            id: s\n        }, {\n            shadowColor: M,\n            shadowOffset: J,\n            shadowRadius: oe\n        }), mt = S(\"defs\", {}, mt);\n    }\n    let Tt = \"\", kr = \"\", $o = \"\", Tr = -1, Dt = {}, He = null, qo = 0;\n    for(let M = 0; M < Be.length; M++){\n        let J = kt[M], oe = kt[M + 1];\n        if (!J) continue;\n        let U = Be[M], le = null, H = !1, fe = c ? c[U] : null, se = J.y, Y = J.x, Ie = J.width, $ = J.line;\n        if ($ === Tr) continue;\n        let nt = !1;\n        if (P.length > 1) {\n            let Z = bn - P[$];\n            if (p === \"right\" || p === \"end\") Y += Z;\n            else if (p === \"center\") Y += Z / 2;\n            else if (p === \"justify\" && $ < P.length - 1) {\n                let De = me[$], Xe = De > 1 ? Z / (De - 1) : 0;\n                Y += Xe * J.lineIndex, nt = !0;\n            }\n        }\n        let we = he[$], Ve = K.baseline(U), Ar = K.height(U), Ye = we - Ve;\n        if (Dt[$] || (Dt[$] = [\n            Y,\n            ht + se + Ye,\n            Ve,\n            nt ? bn : P[$]\n        ]), N !== 1 / 0) {\n            let it = function(ge, Oe) {\n                let ot = be(Oe, \"grapheme\", d), $e = \"\", At = 0;\n                for (let zo of ot){\n                    let Uo = ge + Ae([\n                        $e + zo\n                    ]);\n                    if ($e && Uo + De > Cr) break;\n                    $e += zo, At = Uo;\n                }\n                return {\n                    subset: $e,\n                    resolvedWidth: At\n                };\n            }, Z = R, De = te(R);\n            De > Cr && (Z = xt, De = te(Z));\n            let Xe = te(ut), Or = $ < P.length - 1;\n            if ($ + 1 === N && (Or || P[$] > Cr)) {\n                if (Y + Ie + De + Xe > Cr) {\n                    let { subset: ge, resolvedWidth: Oe } = it(Y, U);\n                    U = ge + Z, Tr = $, Dt[$][2] = Oe, H = !0;\n                } else if (oe && oe.line !== $) if (p === \"center\") {\n                    let { subset: ge, resolvedWidth: Oe } = it(Y, U);\n                    U = ge + Z, Tr = $, Dt[$][2] = Oe, H = !0;\n                } else {\n                    let ge = Be[M + 1], { subset: Oe, resolvedWidth: ot } = it(Ie + Y, ge);\n                    U = U + Oe + Z, Tr = $, Dt[$][2] = ot, H = !0;\n                }\n            }\n        }\n        if (fe) se += 0;\n        else if (f) {\n            if (!U.includes(Ln) && !eu.includes(U) && Be[M + 1] && oe && !oe.isImage && se === oe.y && !H) {\n                He === null && (qo = Y), He = He === null ? U : He + U;\n                continue;\n            }\n            let Z = He === null ? U : He + U, De = He === null ? Y : qo, Xe = J.width + Y - De;\n            le = K.getSVG(Z.replace(/(\\t)+/g, \"\"), {\n                fontSize: D,\n                left: pt + De,\n                top: ht + se + Ve + Ye,\n                letterSpacing: F\n            }), He = null, l && ($o += S(\"rect\", {\n                x: pt + De,\n                y: ht + se + Ye,\n                width: Xe,\n                height: Ar,\n                fill: \"transparent\",\n                stroke: \"#575eff\",\n                \"stroke-width\": 1,\n                transform: We || void 0,\n                \"clip-path\": je ? `url(#${je})` : void 0\n            }) + S(\"line\", {\n                x1: pt + Y,\n                x2: pt + Y + J.width,\n                y1: ht + se + Ye + Ve,\n                y2: ht + se + Ye + Ve,\n                stroke: \"#14c000\",\n                \"stroke-width\": 1,\n                transform: We || void 0,\n                \"clip-path\": je ? `url(#${je})` : void 0\n            }));\n        } else se += Ve + Ye;\n        if (r.textDecorationLine) {\n            let Z = Dt[$];\n            Z && !Z[4] && (Tt += In({\n                left: pt + Z[0],\n                top: Z[1],\n                width: Z[3],\n                ascender: Z[2],\n                clipPathId: je\n            }, r), Z[4] = 1);\n        }\n        if (le !== null) kr += le + \" \";\n        else {\n            let [Z, De] = Bn({\n                content: U,\n                filter: mt,\n                id: s,\n                left: pt + Y,\n                top: ht + se,\n                width: Ie,\n                height: Ar,\n                matrix: We,\n                opacity: _r,\n                image: fe,\n                clipPathId: je,\n                debug: l,\n                shape: !!x,\n                decorationShape: Tt\n            }, r);\n            gn += Z, Sr += De, Tt = \"\";\n        }\n        if (H) break;\n    }\n    if (kr) {\n        let M = r.color !== \"transparent\" && _r !== 0 ? S(\"path\", {\n            fill: r.color,\n            d: kr,\n            transform: We || void 0,\n            opacity: _r !== 1 ? _r : void 0,\n            \"clip-path\": je ? `url(#${je})` : void 0,\n            mask: Mo ? `url(#${Mo})` : void 0,\n            style: b ? `filter:${b}` : void 0\n        }) : \"\";\n        x && (Sr = S(\"path\", {\n            d: kr,\n            transform: We || void 0\n        })), gn += (mt ? mt + S(\"g\", {\n            filter: `url(#satori_s-${s})`\n        }, M + Tt) : M + Tt) + $o;\n    }\n    return Sr && (r._inheritedBackgroundClipTextPath.value += Sr), gn;\n}\nfunction Tf(e, t) {\n    let n = e.Node.create();\n    return n.setAlignItems(e.ALIGN_BASELINE), n.setJustifyContent(ve(t, {\n        left: e.JUSTIFY_FLEX_START,\n        right: e.JUSTIFY_FLEX_END,\n        center: e.JUSTIFY_CENTER,\n        justify: e.JUSTIFY_SPACE_BETWEEN,\n        start: e.JUSTIFY_FLEX_START,\n        end: e.JUSTIFY_FLEX_END\n    }, e.JUSTIFY_FLEX_START, \"textAlign\")), n;\n}\nfunction Af(e) {\n    let t = /(\\t)+/.exec(e);\n    return t ? {\n        index: t.index,\n        tabCount: t[0].length\n    } : {\n        index: null,\n        tabCount: 0\n    };\n}\n\nvar Nn = Nn || {}, Cu = {\n    type: \"directional\",\n    value: \"bottom\"\n};\nNn.parse = function() {\n    var e = {\n        linearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,\n        repeatingLinearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,\n        radialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,\n        repeatingRadialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,\n        sideOrCorner: /^to (left (top|bottom)|right (top|bottom)|top (left|right)|bottom (left|right)|left|right|top|bottom)/i,\n        extentKeywords: /^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,\n        positionKeywords: /^(left|center|right|top|bottom)/i,\n        pixelValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,\n        percentageValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,\n        emLikeValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))(r?em|vw|vh)/,\n        angleValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,\n        zeroValue: /[0]/,\n        startCall: /^\\(/,\n        endCall: /^\\)/,\n        comma: /^,/,\n        hexColor: /^\\#([0-9a-fA-F]+)/,\n        literalColor: /^([a-zA-Z]+)/,\n        rgbColor: /^rgb/i,\n        rgbaColor: /^rgba/i,\n        number: /^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/\n    }, t = \"\";\n    function n(A) {\n        var O = new Error(t + \": \" + A);\n        throw O.source = t, O;\n    }\n    function r() {\n        var A = i();\n        return t.length > 0 && n(\"Invalid input not EOF\"), A;\n    }\n    function i() {\n        return k(o);\n    }\n    function o() {\n        return s(\"linear-gradient\", e.linearGradient, l, Cu) || s(\"repeating-linear-gradient\", e.repeatingLinearGradient, l, Cu) || s(\"radial-gradient\", e.radialGradient, h) || s(\"repeating-radial-gradient\", e.repeatingRadialGradient, h);\n    }\n    function u(A = {}) {\n        var L, P, he, me;\n        let O = {\n            ...A\n        };\n        return Object.assign(O, {\n            style: (O.style || []).length > 0 ? O.style : [\n                {\n                    type: \"extent-keyword\",\n                    value: \"farthest-corner\"\n                }\n            ],\n            at: {\n                type: \"position\",\n                value: {\n                    x: {\n                        type: \"position-keyword\",\n                        value: \"center\",\n                        ...((P = (L = O.at) == null ? void 0 : L.value) == null ? void 0 : P.x) || {}\n                    },\n                    y: {\n                        type: \"position-keyword\",\n                        value: \"center\",\n                        ...((me = (he = O.at) == null ? void 0 : he.value) == null ? void 0 : me.y) || {}\n                    }\n                }\n            }\n        }), A.value || Object.assign(O, {\n            type: \"shape\",\n            value: O.style.some((Be)=>[\n                    \"%\",\n                    \"extent-keyword\"\n                ].includes(Be.type)) ? \"ellipse\" : \"circle\"\n        }), O;\n    }\n    function s(A, O, L, P) {\n        return a(O, function(he) {\n            var me = L();\n            return me ? te(e.comma) || n(\"Missing comma before color stops\") : me = P, {\n                type: A,\n                orientation: A.endsWith(\"radial-gradient\") ? (me == null ? void 0 : me.map((Be)=>u(Be))) ?? [\n                    u()\n                ] : me,\n                colorStops: k(B)\n            };\n        });\n    }\n    function a(A, O) {\n        var L = te(A);\n        if (L) {\n            te(e.startCall) || n(\"Missing (\");\n            var P = O(L);\n            return te(e.endCall) || n(\"Missing )\"), P;\n        }\n    }\n    function l() {\n        return f() || c() || d();\n    }\n    function f() {\n        return ee(\"directional\", e.sideOrCorner, 1);\n    }\n    function c() {\n        return ee(\"angular\", e.angleValue, 1);\n    }\n    function d() {\n        return ee(\"directional\", e.zeroValue, 0);\n    }\n    function h() {\n        var A, O = p(), L;\n        return O && (A = [], A.push(O), L = t, te(e.comma) && (O = p(), O ? A.push(O) : t = L)), A;\n    }\n    function p() {\n        let A = m(), O = y();\n        if (!(!A && !O)) return {\n            ...A,\n            at: O\n        };\n    }\n    function m() {\n        let A = v() || D(), O = b() || K() || R(), L = ee(\"%\", e.percentageValue, 1);\n        if (A) return {\n            ...A,\n            style: [\n                O,\n                L\n            ].filter((P)=>P)\n        };\n        if (O) return {\n            style: [\n                O,\n                L\n            ].filter((P)=>P),\n            ...v() || D()\n        };\n    }\n    function v() {\n        return ee(\"shape\", /^(circle)/i, 0);\n    }\n    function D() {\n        return ee(\"shape\", /^(ellipse)/i, 0);\n    }\n    function b() {\n        return ee(\"extent-keyword\", e.extentKeywords, 1);\n    }\n    function y() {\n        if (ee(\"position\", /^at/, 0)) {\n            var A = F();\n            return A || n(\"Missing positioning value\"), A;\n        }\n    }\n    function F() {\n        var A = x();\n        if (A.x || A.y) return {\n            type: \"position\",\n            value: A\n        };\n    }\n    function x() {\n        return {\n            x: R(),\n            y: R()\n        };\n    }\n    function k(A) {\n        var O = A(), L = [];\n        if (O) for(L.push(O); te(e.comma);)O = A(), O ? L.push(O) : n(\"One extra comma\");\n        return L;\n    }\n    function B() {\n        var A = I();\n        return A || n(\"Expected color definition\"), A.length = R(), A;\n    }\n    function I() {\n        return ue() || ie() || ae() || G();\n    }\n    function G() {\n        return ee(\"literal\", e.literalColor, 0);\n    }\n    function ue() {\n        return ee(\"hex\", e.hexColor, 1);\n    }\n    function ae() {\n        return a(e.rgbColor, function() {\n            return {\n                type: \"rgb\",\n                value: k(N)\n            };\n        });\n    }\n    function ie() {\n        return a(e.rgbaColor, function() {\n            return {\n                type: \"rgba\",\n                value: k(N)\n            };\n        });\n    }\n    function N() {\n        return te(e.number)[1];\n    }\n    function R() {\n        return ee(\"%\", e.percentageValue, 1) || j() || K();\n    }\n    function j() {\n        return ee(\"position-keyword\", e.positionKeywords, 1);\n    }\n    function K() {\n        return ee(\"px\", e.pixelValue, 1) || ce(e.emLikeValue, 1);\n    }\n    function ce(A, O) {\n        var L = te(A);\n        if (L) return {\n            type: L[5],\n            value: L[O]\n        };\n    }\n    function ee(A, O, L) {\n        var P = te(O);\n        if (P) return {\n            type: A,\n            value: P[L]\n        };\n    }\n    function te(A) {\n        var O, L;\n        return L = /^[\\n\\r\\t\\s]+/.exec(t), L && Ae(L[0].length), O = A.exec(t), O && Ae(O[0].length), O;\n    }\n    function Ae(A) {\n        t = t.substr(A);\n    }\n    return function(A) {\n        return t = A.toString(), r();\n    };\n}();\nvar Wn = Nn;\nfunction Pf(e) {\n    return e.type === \"literal\" ? e.value : e.type === \"hex\" ? `#${e.value}` : e.type === \"rgb\" ? `rgb(${e.value.join(\",\")})` : e.type === \"rgba\" ? `rgba(${e.value.join(\",\")})` : \"transparent\";\n}\nfunction Bf(e) {\n    let t = 0, n = 0, r = 0, i = 0;\n    return e.includes(\"top\") ? n = 1 : e.includes(\"bottom\") && (i = 1), e.includes(\"left\") ? t = 1 : e.includes(\"right\") && (r = 1), !t && !r && !n && !i && (n = 1), [\n        t,\n        n,\n        r,\n        i\n    ];\n}\nfunction If(e, t) {\n    return typeof e == \"string\" && e.endsWith(\"%\") ? t * parseFloat(e) / 100 : +e;\n}\nfunction $n(e, { x: t, y: n, defaultX: r, defaultY: i }) {\n    return (e ? e.split(\" \").map((o)=>{\n        try {\n            let u = new Qe(o);\n            return u.type === \"length\" || u.type === \"number\" ? u.value : u.value + u.unit;\n        } catch  {\n            return null;\n        }\n    }).filter((o)=>o !== null) : [\n        r,\n        i\n    ]).map((o, u)=>If(o, [\n            t,\n            n\n        ][u]));\n}\nfunction _u(e, t, n) {\n    let r = [];\n    for (let s of t){\n        let a = Pf(s);\n        if (!r.length && (r.push({\n            offset: 0,\n            color: a\n        }), typeof s.length > \"u\" || s.length.value === \"0\")) continue;\n        let l = typeof s.length > \"u\" ? void 0 : s.length.type === \"%\" ? s.length.value / 100 : s.length.value / e;\n        r.push({\n            offset: l,\n            color: a\n        });\n    }\n    r.length || r.push({\n        offset: 0,\n        color: \"transparent\"\n    });\n    let i = r[r.length - 1];\n    i.offset !== 1 && (typeof i.offset > \"u\" ? i.offset = 1 : r.push({\n        offset: 1,\n        color: i.color\n    }));\n    let o = 0, u = 1;\n    for(let s = 0; s < r.length; s++)if (typeof r[s].offset > \"u\") {\n        for(u < s && (u = s); typeof r[u].offset > \"u\";)u++;\n        r[s].offset = (r[u].offset - r[o].offset) / (u - o) * (s - o) + r[o].offset;\n    } else o = s;\n    return n === \"mask\" ? r.map((s)=>{\n        let a = (0,parse_css_color__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(s.color);\n        return a.alpha === 0 ? {\n            ...s,\n            color: \"rgba(0, 0, 0, 1)\"\n        } : {\n            ...s,\n            color: `rgba(255, 255, 255, ${a.alpha})`\n        };\n    }) : r;\n}\nasync function Mt({ id: e, width: t, height: n, left: r, top: i }, { image: o, size: u, position: s, repeat: a }, l, f) {\n    a = a || \"repeat\", f = f || \"background\";\n    let c = a === \"repeat-x\" || a === \"repeat\", d = a === \"repeat-y\" || a === \"repeat\", h = $n(u, {\n        x: t,\n        y: n,\n        defaultX: t,\n        defaultY: n\n    }), p = $n(s, {\n        x: t,\n        y: n,\n        defaultX: 0,\n        defaultY: 0\n    });\n    if (o.startsWith(\"linear-gradient(\")) {\n        let m = Wn.parse(o)[0], [v, D] = h, b, y, F, x, k;\n        if (m.orientation.type === \"directional\") [b, y, F, x] = Bf(m.orientation.value), k = Math.sqrt(Math.pow((F - b) * v, 2) + Math.pow((x - y) * D, 2));\n        else if (m.orientation.type === \"angular\") {\n            let N = function(R) {\n                if (R = (R % (Math.PI * 2) + Math.PI * 2) % (Math.PI * 2), Math.abs(R - Math.PI / 2) < 1e-6) {\n                    b = 0, y = 0, F = 1, x = 0, k = v;\n                    return;\n                } else if (Math.abs(R) < 1e-6) {\n                    b = 0, y = 1, F = 0, x = 0, k = D;\n                    return;\n                }\n                if (R >= Math.PI / 2 && R < Math.PI) {\n                    N(Math.PI - R), y = 1 - y, x = 1 - x;\n                    return;\n                } else if (R >= Math.PI) {\n                    N(R - Math.PI);\n                    let L = b;\n                    b = F, F = L, L = y, y = x, x = L;\n                    return;\n                }\n                let j = Math.tan(R), K = j * ie, ce = Math.atan(K), ee = Math.sqrt(2) * Math.cos(Math.PI / 4 - ce);\n                b = 0, y = 1, F = Math.sin(ce) * ee, x = 1 - Math.cos(ce) * ee;\n                let te = 1, Ae = 1 / j, A = Math.abs((te * ie + Ae) / Math.sqrt(te * te + Ae * Ae) / Math.sqrt(ie * ie + 1));\n                k = Math.sqrt(v * v + D * D) * A;\n            }, ie = v / D;\n            N(+m.orientation.value / 180 * Math.PI);\n        }\n        let B = _u(k, m.colorStops, f), I = `satori_bi${e}`, G = `satori_pattern_${e}`, ue = S(\"pattern\", {\n            id: G,\n            x: p[0] / t,\n            y: p[1] / n,\n            width: c ? v / t : \"1\",\n            height: d ? D / n : \"1\",\n            patternUnits: \"objectBoundingBox\"\n        }, S(\"linearGradient\", {\n            id: I,\n            x1: b,\n            y1: y,\n            x2: F,\n            y2: x\n        }, B.map((ae)=>S(\"stop\", {\n                offset: ae.offset * 100 + \"%\",\n                \"stop-color\": ae.color\n            })).join(\"\")) + S(\"rect\", {\n            x: 0,\n            y: 0,\n            width: v,\n            height: D,\n            fill: `url(#${I})`\n        }));\n        return [\n            G,\n            ue\n        ];\n    }\n    if (o.startsWith(\"radial-gradient(\")) {\n        let m = Wn.parse(o)[0], v = m.orientation[0], [D, b] = h, y = \"circle\", F = D / 2, x = b / 2;\n        if (v.type === \"shape\") {\n            if (y = v.value, v.at) if (v.at.type === \"position\") {\n                let N = Rf(v.at.value.x, v.at.value.y, D, b, l.fontSize, l);\n                F = N.x, x = N.y;\n            } else throw new Error(\"orientation.at.type not implemented: \" + v.at.type);\n        } else throw new Error(\"orientation.type not implemented: \" + v.type);\n        let k = _u(t, m.colorStops, f), B = `satori_radial_${e}`, I = `satori_pattern_${e}`, G = `satori_mask_${e}`, ue = Lf(y, v.style, l.fontSize, {\n            x: F,\n            y: x\n        }, [\n            D,\n            b\n        ], l), ae = S(\"pattern\", {\n            id: I,\n            x: p[0] / t,\n            y: p[1] / n,\n            width: c ? D / t : \"1\",\n            height: d ? b / n : \"1\",\n            patternUnits: \"objectBoundingBox\"\n        }, S(\"radialGradient\", {\n            id: B\n        }, k.map((N)=>S(\"stop\", {\n                offset: N.offset,\n                \"stop-color\": N.color\n            })).join(\"\")) + S(\"mask\", {\n            id: G\n        }, S(\"rect\", {\n            x: 0,\n            y: 0,\n            width: D,\n            height: b,\n            fill: \"#fff\"\n        })) + S(\"rect\", {\n            x: 0,\n            y: 0,\n            width: D,\n            height: b,\n            fill: k.at(-1).color\n        }) + S(y, {\n            cx: F,\n            cy: x,\n            width: D,\n            height: b,\n            ...ue,\n            fill: `url(#${B})`,\n            mask: `url(#${G})`\n        }));\n        return [\n            I,\n            ae\n        ];\n    }\n    if (o.startsWith(\"url(\")) {\n        let m = $n(u, {\n            x: t,\n            y: n,\n            defaultX: 0,\n            defaultY: 0\n        }), [v, D, b] = await yt(o.slice(4, -1)), y = f === \"mask\" ? D || m[0] : m[0] || D, F = f === \"mask\" ? b || m[1] : m[1] || b;\n        return [\n            `satori_bi${e}`,\n            S(\"pattern\", {\n                id: `satori_bi${e}`,\n                patternContentUnits: \"userSpaceOnUse\",\n                patternUnits: \"userSpaceOnUse\",\n                x: p[0] + r,\n                y: p[1] + i,\n                width: c ? y : \"100%\",\n                height: d ? F : \"100%\"\n            }, S(\"image\", {\n                x: 0,\n                y: 0,\n                width: y,\n                height: F,\n                preserveAspectRatio: \"none\",\n                href: v\n            }))\n        ];\n    }\n    throw new Error(`Invalid background image: \"${o}\"`);\n}\nfunction Rf(e, t, n, r, i, o) {\n    let u = {\n        x: n / 2,\n        y: r / 2\n    };\n    return e.type === \"position-keyword\" ? Object.assign(u, ku(e.value, n, r, \"x\")) : u.x = W(`${e.value}${e.type}`, i, n, o, !0), t.type === \"position-keyword\" ? Object.assign(u, ku(t.value, n, r, \"y\")) : u.y = W(`${t.value}${t.type}`, i, r, o, !0), u;\n}\nfunction ku(e, t, n, r) {\n    switch(e){\n        case \"center\":\n            return {\n                [r]: r === \"x\" ? t / 2 : n / 2\n            };\n        case \"left\":\n            return {\n                x: 0\n            };\n        case \"top\":\n            return {\n                y: 0\n            };\n        case \"right\":\n            return {\n                x: t\n            };\n        case \"bottom\":\n            return {\n                y: n\n            };\n    }\n}\nfunction Lf(e, t, n, r, i, o) {\n    let [u, s] = i, { x: a, y: l } = r, f = {}, c = 0, d = 0;\n    if (!t.some((p)=>p.type === \"extent-keyword\")) {\n        if (t.some((p)=>p.value.startsWith(\"-\"))) throw new Error(\"disallow setting negative values to the size of the shape. Check https://w3c.github.io/csswg-drafts/css-images/#valdef-rg-size-length-0\");\n        return e === \"circle\" ? {\n            r: W(`${t[0].value}${t[0].type}`, n, u, o, !0)\n        } : {\n            rx: W(`${t[0].value}${t[0].type}`, n, u, o, !0),\n            ry: W(`${t[1].value}${t[1].type}`, n, s, o, !0)\n        };\n    }\n    switch(t[0].value){\n        case \"farthest-corner\":\n            c = Math.max(Math.abs(u - a), Math.abs(a)), d = Math.max(Math.abs(s - l), Math.abs(l));\n            break;\n        case \"closest-corner\":\n            c = Math.min(Math.abs(u - a), Math.abs(a)), d = Math.min(Math.abs(s - l), Math.abs(l));\n            break;\n        case \"farthest-side\":\n            return e === \"circle\" ? f.r = Math.max(Math.abs(u - a), Math.abs(a), Math.abs(s - l), Math.abs(l)) : (f.rx = Math.max(Math.abs(u - a), Math.abs(a)), f.ry = Math.max(Math.abs(s - l), Math.abs(l))), f;\n        case \"closest-side\":\n            return e === \"circle\" ? f.r = Math.min(Math.abs(u - a), Math.abs(a), Math.abs(s - l), Math.abs(l)) : (f.rx = Math.min(Math.abs(u - a), Math.abs(a)), f.ry = Math.min(Math.abs(s - l), Math.abs(l))), f;\n    }\n    if (e === \"circle\") f.r = Math.sqrt(c * c + d * d);\n    else {\n        let p = d !== 0 ? c / d : 1;\n        c === 0 ? (f.rx = 0, f.ry = 0) : (f.ry = Math.sqrt(c * c + d * d * p * p) / p, f.rx = f.ry * p);\n    }\n    return f;\n}\nfunction Mf([e, t]) {\n    return Math.round(e * 1e3) === 0 && Math.round(t * 1e3) === 0 ? 0 : Math.round(e * t / Math.sqrt(e * e + t * t) * 1e3) / 1e3;\n}\nfunction Ur(e, t, n) {\n    return n < e + t && (n / 2 < e && n / 2 < t ? e = t = n / 2 : n / 2 < e ? e = n - t : n / 2 < t && (t = n - e)), [\n        e,\n        t\n    ];\n}\nfunction Gr(e) {\n    e[0] = e[1] = Math.min(e[0], e[1]);\n}\nfunction jr(e, t, n, r, i) {\n    if (typeof e == \"string\") {\n        let o = e.split(\" \").map((s)=>s.trim()), u = !o[1] && !o[0].endsWith(\"%\");\n        return o[1] = o[1] || o[0], [\n            u,\n            [\n                Math.min(W(o[0], r, t, i, !0), t),\n                Math.min(W(o[1], r, n, i, !0), n)\n            ]\n        ];\n    }\n    return typeof e == \"number\" ? [\n        !0,\n        [\n            Math.min(e, t),\n            Math.min(e, n)\n        ]\n    ] : [\n        !0,\n        void 0\n    ];\n}\nvar Hr = (e)=>e && e[0] !== 0 && e[1] !== 0;\nfunction Je({ left: e, top: t, width: n, height: r }, i, o) {\n    let { borderTopLeftRadius: u, borderTopRightRadius: s, borderBottomLeftRadius: a, borderBottomRightRadius: l, fontSize: f } = i, c, d, h, p;\n    if ([c, u] = jr(u, n, r, f, i), [d, s] = jr(s, n, r, f, i), [h, a] = jr(a, n, r, f, i), [p, l] = jr(l, n, r, f, i), !o && !Hr(u) && !Hr(s) && !Hr(a) && !Hr(l)) return \"\";\n    u ||= [\n        0,\n        0\n    ], s ||= [\n        0,\n        0\n    ], a ||= [\n        0,\n        0\n    ], l ||= [\n        0,\n        0\n    ], [u[0], s[0]] = Ur(u[0], s[0], n), [a[0], l[0]] = Ur(a[0], l[0], n), [u[1], a[1]] = Ur(u[1], a[1], r), [s[1], l[1]] = Ur(s[1], l[1], r), c && Gr(u), d && Gr(s), h && Gr(a), p && Gr(l);\n    let m = [];\n    m[0] = [\n        s,\n        s\n    ], m[1] = [\n        l,\n        [\n            -l[0],\n            l[1]\n        ]\n    ], m[2] = [\n        a,\n        [\n            -a[0],\n            -a[1]\n        ]\n    ], m[3] = [\n        u,\n        [\n            u[0],\n            -u[1]\n        ]\n    ];\n    let v = `h${n - u[0] - s[0]} a${m[0][0]} 0 0 1 ${m[0][1]}`, D = `v${r - s[1] - l[1]} a${m[1][0]} 0 0 1 ${m[1][1]}`, b = `h${l[0] + a[0] - n} a${m[2][0]} 0 0 1 ${m[2][1]}`, y = `v${a[1] + u[1] - r} a${m[3][0]} 0 0 1 ${m[3][1]}`;\n    if (o) {\n        let x = function(ie) {\n            let N = Mf([\n                u,\n                s,\n                l,\n                a\n            ][ie]);\n            return ie === 0 ? [\n                [\n                    e + u[0] - N,\n                    t + u[1] - N\n                ],\n                [\n                    e + u[0],\n                    t\n                ]\n            ] : ie === 1 ? [\n                [\n                    e + n - s[0] + N,\n                    t + s[1] - N\n                ],\n                [\n                    e + n,\n                    t + s[1]\n                ]\n            ] : ie === 2 ? [\n                [\n                    e + n - l[0] + N,\n                    t + r - l[1] + N\n                ],\n                [\n                    e + n - l[0],\n                    t + r\n                ]\n            ] : [\n                [\n                    e + a[0] - N,\n                    t + r - a[1] + N\n                ],\n                [\n                    e,\n                    t + r - a[1]\n                ]\n            ];\n        }, F = o.indexOf(!1);\n        if (!o.includes(!0)) throw new Error(\"Invalid `partialSides`.\");\n        if (F === -1) F = 0;\n        else for(; !o[F];)F = (F + 1) % 4;\n        let k = \"\", B = x(F), I = `M${B[0]} A${m[(F + 3) % 4][0]} 0 0 1 ${B[1]}`, G = 0;\n        for(; G < 4 && o[(F + G) % 4]; G++)k += I + \" \", I = [\n            v,\n            D,\n            b,\n            y\n        ][(F + G) % 4];\n        let ue = (F + G) % 4;\n        k += I.split(\" \")[0];\n        let ae = x(ue);\n        return k += ` A${m[(ue + 3) % 4][0]} 0 0 1 ${ae[0]}`, k;\n    }\n    return `M${e + u[0]},${t} ${v} ${D} ${b} ${y}`;\n}\nfunction Tu(e, t, n) {\n    return n[e + \"Width\"] === n[t + \"Width\"] && n[e + \"Style\"] === n[t + \"Style\"] && n[e + \"Color\"] === n[t + \"Color\"];\n}\nfunction Au({ id: e, currentClipPathId: t, borderPath: n, borderType: r, left: i, top: o, width: u, height: s }, a) {\n    if (!(a.borderTopWidth || a.borderRightWidth || a.borderBottomWidth || a.borderLeftWidth)) return null;\n    let f = `satori_bc-${e}`;\n    return [\n        S(\"clipPath\", {\n            id: f,\n            \"clip-path\": t ? `url(#${t})` : void 0\n        }, S(r, {\n            x: i,\n            y: o,\n            width: u,\n            height: s,\n            d: n || void 0\n        })),\n        f\n    ];\n}\nfunction Nt({ left: e, top: t, width: n, height: r, props: i, asContentMask: o, maskBorderOnly: u }, s) {\n    let a = [\n        \"borderTop\",\n        \"borderRight\",\n        \"borderBottom\",\n        \"borderLeft\"\n    ];\n    if (!o && !a.some((h)=>s[h + \"Width\"])) return \"\";\n    let l = \"\", f = 0;\n    for(; f > 0 && Tu(a[f], a[(f + 3) % 4], s);)f = (f + 3) % 4;\n    let c = [\n        !1,\n        !1,\n        !1,\n        !1\n    ], d = [];\n    for(let h = 0; h < 4; h++){\n        let p = (f + h) % 4, m = (f + h + 1) % 4, v = a[p], D = a[m];\n        if (c[p] = !0, d = [\n            s[v + \"Width\"],\n            s[v + \"Style\"],\n            s[v + \"Color\"],\n            v\n        ], !Tu(v, D, s)) {\n            let b = (d[0] || 0) + (o && !u && s[v.replace(\"border\", \"padding\")] || 0);\n            b && (l += S(\"path\", {\n                width: n,\n                height: r,\n                ...i,\n                fill: \"none\",\n                stroke: o ? \"#000\" : d[2],\n                \"stroke-width\": b * 2,\n                \"stroke-dasharray\": !o && d[1] === \"dashed\" ? b * 2 + \" \" + b : void 0,\n                d: Je({\n                    left: e,\n                    top: t,\n                    width: n,\n                    height: r\n                }, s, c)\n            })), c = [\n                !1,\n                !1,\n                !1,\n                !1\n            ];\n        }\n    }\n    if (c.some(Boolean)) {\n        let h = (d[0] || 0) + (o && !u && s[d[3].replace(\"border\", \"padding\")] || 0);\n        h && (l += S(\"path\", {\n            width: n,\n            height: r,\n            ...i,\n            fill: \"none\",\n            stroke: o ? \"#000\" : d[2],\n            \"stroke-width\": h * 2,\n            \"stroke-dasharray\": !o && d[1] === \"dashed\" ? h * 2 + \" \" + h : void 0,\n            d: Je({\n                left: e,\n                top: t,\n                width: n,\n                height: r\n            }, s, c)\n        }));\n    }\n    return l;\n}\nfunction qn({ id: e, left: t, top: n, width: r, height: i, matrix: o, borderOnly: u }, s) {\n    let a = (s.borderLeftWidth || 0) + (u ? 0 : s.paddingLeft || 0), l = (s.borderTopWidth || 0) + (u ? 0 : s.paddingTop || 0), f = (s.borderRightWidth || 0) + (u ? 0 : s.paddingRight || 0), c = (s.borderBottomWidth || 0) + (u ? 0 : s.paddingBottom || 0), d = {\n        x: t + a,\n        y: n + l,\n        width: r - a - f,\n        height: i - l - c\n    };\n    return S(\"mask\", {\n        id: e\n    }, S(\"rect\", {\n        ...d,\n        fill: \"#fff\",\n        mask: s._inheritedMaskId ? `url(#${s._inheritedMaskId})` : void 0\n    }) + Nt({\n        left: t,\n        top: n,\n        width: r,\n        height: i,\n        props: {\n            transform: o || void 0\n        },\n        asContentMask: !0,\n        maskBorderOnly: u\n    }, s));\n}\n\nvar Wt = {\n    circle: /circle\\((.+)\\)/,\n    ellipse: /ellipse\\((.+)\\)/,\n    path: /path\\((.+)\\)/,\n    polygon: /polygon\\((.+)\\)/,\n    inset: /inset\\((.+)\\)/\n};\nfunction Iu({ width: e, height: t }, n, r) {\n    function i(l) {\n        let f = l.match(Wt.circle);\n        if (!f) return null;\n        let [, c] = f, [d, h = \"\"] = c.split(\"at\").map((v)=>v.trim()), { x: p, y: m } = Bu(h, e, t);\n        return {\n            type: \"circle\",\n            r: W(d, r.fontSize, Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2)) / Math.sqrt(2), r, !0),\n            cx: W(p, r.fontSize, e, r, !0),\n            cy: W(m, r.fontSize, t, r, !0)\n        };\n    }\n    function o(l) {\n        let f = l.match(Wt.ellipse);\n        if (!f) return null;\n        let [, c] = f, [d, h = \"\"] = c.split(\"at\").map((b)=>b.trim()), [p, m] = d.split(\" \"), { x: v, y: D } = Bu(h, e, t);\n        return {\n            type: \"ellipse\",\n            rx: W(p || \"50%\", r.fontSize, e, r, !0),\n            ry: W(m || \"50%\", r.fontSize, t, r, !0),\n            cx: W(v, r.fontSize, e, r, !0),\n            cy: W(D, r.fontSize, t, r, !0)\n        };\n    }\n    function u(l) {\n        let f = l.match(Wt.path);\n        if (!f) return null;\n        let [c, d] = Pu(f[1]);\n        return {\n            type: \"path\",\n            d,\n            \"fill-rule\": c\n        };\n    }\n    function s(l) {\n        let f = l.match(Wt.polygon);\n        if (!f) return null;\n        let [c, d] = Pu(f[1]);\n        return {\n            type: \"polygon\",\n            \"fill-rule\": c,\n            points: d.split(\",\").map((h)=>h.split(\" \").map((p, m)=>W(p, r.fontSize, m === 0 ? e : t, r, !0)).join(\" \")).join(\",\")\n        };\n    }\n    function a(l) {\n        let f = l.match(Wt.inset);\n        if (!f) return null;\n        let [c, d] = (f[1].includes(\"round\") ? f[1] : `${f[1].trim()} round 0`).split(\"round\"), h = (0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"borderRadius\", d, !0), p = Object.values(h).map((F)=>String(F)).map((F, x)=>W(F, r.fontSize, x === 0 || x === 2 ? t : e, r, !0) || 0), m = Object.values((0,css_to_react_native__WEBPACK_IMPORTED_MODULE_1__.getStylesForProperty)(\"margin\", c, !0)).map((F)=>String(F)).map((F, x)=>W(F, r.fontSize, x === 0 || x === 2 ? t : e, r, !0) || 0), v = m[3], D = m[0], b = e - (m[1] + m[3]), y = t - (m[0] + m[2]);\n        return p.some((F)=>F > 0) ? {\n            type: \"path\",\n            d: Je({\n                left: v,\n                top: D,\n                width: b,\n                height: y\n            }, {\n                ...n,\n                ...h\n            })\n        } : {\n            type: \"rect\",\n            x: v,\n            y: D,\n            width: b,\n            height: y\n        };\n    }\n    return {\n        parseCircle: i,\n        parseEllipse: o,\n        parsePath: u,\n        parsePolygon: s,\n        parseInset: a\n    };\n}\nfunction Pu(e) {\n    let [, t = \"nonzero\", n] = e.replace(/('|\")/g, \"\").match(/^(nonzero|evenodd)?,?(.+)/) || [];\n    return [\n        t,\n        n\n    ];\n}\nfunction Bu(e, t, n) {\n    let r = e.split(\" \"), i = {\n        x: r[0] || \"50%\",\n        y: r[1] || \"50%\"\n    };\n    return r.forEach((o)=>{\n        o === \"top\" ? i.y = 0 : o === \"bottom\" ? i.y = n : o === \"left\" ? i.x = 0 : o === \"right\" ? i.x = t : o === \"center\" && (i.x = t / 2, i.y = n / 2);\n    }), i;\n}\nfunction Vr(e) {\n    return `satori_cp-${e}`;\n}\nfunction Ru(e) {\n    return `url(#${Vr(e)})`;\n}\nfunction Lu(e, t, n) {\n    if (t.clipPath === \"none\") return \"\";\n    let r = Iu(e, t, n), i = t.clipPath, o = {\n        type: \"\"\n    };\n    for (let u of Object.keys(r))if (o = r[u](i), o) break;\n    if (o) {\n        let { type: u, ...s } = o;\n        return S(\"clipPath\", {\n            id: Vr(e.id),\n            \"clip-path\": e.currentClipPath,\n            transform: `translate(${e.left}, ${e.top})`\n        }, S(u, s));\n    }\n    return \"\";\n}\nfunction zn({ left: e, top: t, width: n, height: r, path: i, matrix: o, id: u, currentClipPath: s, src: a }, l, f) {\n    let c = \"\", d = l.clipPath && l.clipPath !== \"none\" ? Lu({\n        left: e,\n        top: t,\n        width: n,\n        height: r,\n        path: i,\n        id: u,\n        matrix: o,\n        currentClipPath: s,\n        src: a\n    }, l, f) : \"\";\n    if (l.overflow !== \"hidden\" && !a) c = \"\";\n    else {\n        let p = d ? `satori_ocp-${u}` : Vr(u);\n        c = S(\"clipPath\", {\n            id: p,\n            \"clip-path\": s\n        }, S(i ? \"path\" : \"rect\", {\n            x: e,\n            y: t,\n            width: n,\n            height: r,\n            d: i || void 0\n        }));\n    }\n    let h = qn({\n        id: `satori_om-${u}`,\n        left: e,\n        top: t,\n        width: n,\n        height: r,\n        matrix: o,\n        borderOnly: !a\n    }, l);\n    return d + c + h;\n}\nvar Nf = (e)=>`satori_mi-${e}`;\nasync function Un(e, t, n) {\n    if (!t.maskImage) return [\n        \"\",\n        \"\"\n    ];\n    let { left: r, top: i, width: o, height: u, id: s } = e, a = t.maskImage, l = a.length;\n    if (!l) return [\n        \"\",\n        \"\"\n    ];\n    let f = Nf(s), c = \"\";\n    for(let d = 0; d < l; d++){\n        let h = a[d], [p, m] = await Mt({\n            id: `${f}-${d}`,\n            left: r,\n            top: i,\n            width: o,\n            height: u\n        }, h, n, \"mask\");\n        c += m + S(\"rect\", {\n            x: 0,\n            y: 0,\n            width: o,\n            height: u,\n            fill: `url(#${p})`\n        });\n    }\n    return c = S(\"mask\", {\n        id: f\n    }, c), [\n        f,\n        c\n    ];\n}\nasync function $t({ id: e, left: t, top: n, width: r, height: i, isInheritingTransform: o, src: u, debug: s }, a, l) {\n    if (a.display === \"none\") return \"\";\n    let f = !!u, c = \"rect\", d = \"\", h = \"\", p = [], m = 1, v = \"\";\n    a.backgroundColor && p.push(a.backgroundColor), a.opacity !== void 0 && (m = +a.opacity), a.transform && (d = Lt({\n        left: t,\n        top: n,\n        width: r,\n        height: i\n    }, a.transform, o, a.transformOrigin));\n    let D = \"\";\n    if (a.backgroundImage) {\n        let R = [];\n        for(let j = 0; j < a.backgroundImage.length; j++){\n            let K = a.backgroundImage[j], ce = await Mt({\n                id: e + \"_\" + j,\n                width: r,\n                height: i,\n                left: t,\n                top: n\n            }, K, l);\n            ce && R.unshift(ce);\n        }\n        for (let j of R)p.push(`url(#${j[0]})`), h += j[1], j[2] && (D += j[2]);\n    }\n    let [b, y] = await Un({\n        id: e,\n        left: t,\n        top: n,\n        width: r,\n        height: i\n    }, a, l);\n    h += y;\n    let F = b ? `url(#${b})` : a._inheritedMaskId ? `url(#${a._inheritedMaskId})` : void 0, x = Je({\n        left: t,\n        top: n,\n        width: r,\n        height: i\n    }, a);\n    x && (c = \"path\");\n    let k = a._inheritedClipPathId;\n    s && (v = S(\"rect\", {\n        x: t,\n        y: n,\n        width: r,\n        height: i,\n        fill: \"transparent\",\n        stroke: \"#ff5757\",\n        \"stroke-width\": 1,\n        transform: d || void 0,\n        \"clip-path\": k ? `url(#${k})` : void 0\n    }));\n    let { backgroundClip: B, filter: I } = a, G = B === \"text\" ? `url(#satori_bct-${e})` : k ? `url(#${k})` : a.clipPath ? Ru(e) : void 0, ue = zn({\n        left: t,\n        top: n,\n        width: r,\n        height: i,\n        path: x,\n        id: e,\n        matrix: d,\n        currentClipPath: G,\n        src: u\n    }, a, l), ae = p.map((R)=>S(c, {\n            x: t,\n            y: n,\n            width: r,\n            height: i,\n            fill: R,\n            d: x || void 0,\n            transform: d || void 0,\n            \"clip-path\": G,\n            style: I ? `filter:${I}` : void 0,\n            mask: F\n        })).join(\"\"), ie = Au({\n        id: e,\n        left: t,\n        top: n,\n        width: r,\n        height: i,\n        currentClipPathId: k,\n        borderPath: x,\n        borderType: c\n    }, a);\n    if (f) {\n        let R = (a.borderLeftWidth || 0) + (a.paddingLeft || 0), j = (a.borderTopWidth || 0) + (a.paddingTop || 0), K = (a.borderRightWidth || 0) + (a.paddingRight || 0), ce = (a.borderBottomWidth || 0) + (a.paddingBottom || 0), ee = a.objectFit === \"contain\" ? \"xMidYMid\" : a.objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n        ae += S(\"image\", {\n            x: t + R,\n            y: n + j,\n            width: r - R - K,\n            height: i - j - ce,\n            href: u,\n            preserveAspectRatio: ee,\n            transform: d || void 0,\n            style: I ? `filter:${I}` : void 0,\n            \"clip-path\": `url(#satori_cp-${e})`,\n            mask: b ? `url(#${b})` : `url(#satori_om-${e})`\n        });\n    }\n    if (ie) {\n        h += ie[0];\n        let R = ie[1];\n        ae += Nt({\n            left: t,\n            top: n,\n            width: r,\n            height: i,\n            props: {\n                transform: d || void 0,\n                \"clip-path\": `url(#${R})`\n            }\n        }, a);\n    }\n    let N = wu({\n        width: r,\n        height: i,\n        id: e,\n        opacity: m,\n        shape: S(c, {\n            x: t,\n            y: n,\n            width: r,\n            height: i,\n            fill: \"#fff\",\n            stroke: \"#fff\",\n            \"stroke-width\": 0,\n            d: x || void 0,\n            transform: d || void 0,\n            \"clip-path\": G,\n            mask: F\n        })\n    }, a);\n    return (h ? S(\"defs\", {}, h) : \"\") + (N ? N[0] : \"\") + ue + (m !== 1 ? `<g opacity=\"${m}\">` : \"\") + (D || ae) + (m !== 1 ? \"</g>\" : \"\") + (N ? N[1] : \"\") + v;\n}\nvar Mu = ()=>/[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC3\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC08\\uDC26](?:\\u200D\\u2B1B)?|[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\nvar Wf = new RegExp(Mu(), \"\"), Gn = {\n    emoji: Wf,\n    symbol: /\\p{Symbol}/u,\n    math: /\\p{Math}/u\n}, jn = {\n    \"ja-JP\": /\\p{scx=Hira}|\\p{scx=Kana}|\\p{scx=Han}|[\\u3000]|[\\uFF00-\\uFFEF]/u,\n    \"ko-KR\": /\\p{scx=Hangul}/u,\n    \"zh-CN\": /\\p{scx=Han}/u,\n    \"zh-TW\": /\\p{scx=Han}/u,\n    \"zh-HK\": /\\p{scx=Han}/u,\n    \"th-TH\": /\\p{scx=Thai}/u,\n    \"bn-IN\": /\\p{scx=Bengali}/u,\n    \"ar-AR\": /\\p{scx=Arabic}/u,\n    \"ta-IN\": /\\p{scx=Tamil}/u,\n    \"ml-IN\": /\\p{scx=Malayalam}/u,\n    \"he-IL\": /\\p{scx=Hebrew}/u,\n    \"te-IN\": /\\p{scx=Telugu}/u,\n    devanagari: /\\p{scx=Devanagari}/u,\n    kannada: /\\p{scx=Kannada}/u\n}, Yr = Object.keys({\n    ...jn,\n    ...Gn\n});\nfunction Nu(e) {\n    return Yr.includes(e);\n}\nfunction Wu(e, t) {\n    for (let r of Object.keys(Gn))if (Gn[r].test(e)) return [\n        r\n    ];\n    let n = Object.keys(jn).filter((r)=>jn[r].test(e));\n    if (n.length === 0) return [\n        \"unknown\"\n    ];\n    if (t) {\n        let r = n.findIndex((i)=>i === t);\n        r !== -1 && (n.splice(r, 1), n.unshift(t));\n    }\n    return n;\n}\nfunction $u(e) {\n    if (e) return Yr.find((t)=>t.toLowerCase().startsWith(e.toLowerCase()));\n}\nasync function* qt(e, t) {\n    var L;\n    let n = await qe(), { id: r, inheritedStyle: i, parent: o, font: u, debug: s, locale: a, embedFont: l = !0, graphemeImages: f, canLoadAdditionalAssets: c, getTwStyles: d } = t;\n    if (e === null || typeof e > \"u\") return yield, yield, \"\";\n    if (!bt(e) || typeof e.type == \"function\") {\n        let P;\n        if (!bt(e)) P = Mn(String(e), t), yield (await P.next()).value;\n        else {\n            if (Ko(e.type)) throw new Error(\"Class component is not supported.\");\n            P = qt(e.type(e.props), t), yield (await P.next()).value;\n        }\n        await P.next();\n        let he = yield;\n        return (await P.next(he)).value;\n    }\n    let { type: h, props: p } = e;\n    if (p && Jo(p)) throw new Error(\"dangerouslySetInnerHTML property is not supported. See documentation for more information https://github.com/vercel/satori#jsx.\");\n    let { style: m, children: v, tw: D, lang: b = a } = p || {}, y = $u(b);\n    if (D) {\n        let P = d(D, m);\n        m = Object.assign(P, m);\n    }\n    let F = n.Node.create();\n    o.insertChild(F, o.getChildCount());\n    let [x, k] = await Pn(F, h, i, m, p), B = x.transform === i.transform;\n    if (B || (x.transform.__parent = i.transform), (x.overflow === \"hidden\" || x.clipPath && x.clipPath !== \"none\") && (k._inheritedClipPathId = `satori_cp-${r}`, k._inheritedMaskId = `satori_om-${r}`), x.maskImage && (k._inheritedMaskId = `satori_mi-${r}`), x.backgroundClip === \"text\") {\n        let P = {\n            value: \"\"\n        };\n        k._inheritedBackgroundClipTextPath = P, x._inheritedBackgroundClipTextPath = P;\n    }\n    let I = Zo(v), G = [], ue = 0, ae = [];\n    for (let P of I){\n        let he = qt(P, {\n            id: r + \"-\" + ue++,\n            parentStyle: x,\n            inheritedStyle: k,\n            isInheritingTransform: !0,\n            parent: F,\n            font: u,\n            embedFont: l,\n            debug: s,\n            graphemeImages: f,\n            canLoadAdditionalAssets: c,\n            locale: y,\n            getTwStyles: d,\n            onNodeDetected: t.onNodeDetected\n        });\n        c ? ae.push(...(await he.next()).value || []) : await he.next(), G.push(he);\n    }\n    yield ae;\n    for (let P of G)await P.next();\n    let [ie, N] = yield, { left: R, top: j, width: K, height: ce } = F.getComputedLayout();\n    R += ie, j += N;\n    let ee = \"\", te = \"\", Ae = \"\", { children: A, ...O } = p;\n    if ((L = t.onNodeDetected) == null || L.call(t, {\n        left: R,\n        top: j,\n        width: K,\n        height: ce,\n        type: h,\n        props: O,\n        key: e.key,\n        textContent: bt(A) ? void 0 : A\n    }), h === \"img\") {\n        let P = x.__src;\n        te = await $t({\n            id: r,\n            left: R,\n            top: j,\n            width: K,\n            height: ce,\n            src: P,\n            isInheritingTransform: B,\n            debug: s\n        }, x, k);\n    } else if (h === \"svg\") {\n        let P = x.color, he = await du(e, P);\n        te = await $t({\n            id: r,\n            left: R,\n            top: j,\n            width: K,\n            height: ce,\n            src: he,\n            isInheritingTransform: B,\n            debug: s\n        }, x, k);\n    } else {\n        let P = m == null ? void 0 : m.display;\n        if (h === \"div\" && v && typeof v != \"string\" && P !== \"flex\" && P !== \"none\") throw new Error('Expected <div> to have explicit \"display: flex\" or \"display: none\" if it has more than one child node.');\n        te = await $t({\n            id: r,\n            left: R,\n            top: j,\n            width: K,\n            height: ce,\n            isInheritingTransform: B,\n            debug: s\n        }, x, k);\n    }\n    for (let P of G)ee += (await P.next([\n        R,\n        j\n    ])).value;\n    return x._inheritedBackgroundClipTextPath && (Ae += S(\"clipPath\", {\n        id: `satori_bct-${r}`,\n        \"clip-path\": x._inheritedClipPathId ? `url(#${x._inheritedClipPathId})` : void 0\n    }, x._inheritedBackgroundClipTextPath.value)), Ae + te + ee;\n}\n\nvar qu = \"unknown\";\nfunction $f(e, t, [n, r], [i, o]) {\n    if (n !== i) return n ? !i || n === e ? -1 : i === e ? 1 : e === 400 && n === 500 || e === 500 && n === 400 ? -1 : e === 400 && i === 500 || e === 500 && i === 400 ? 1 : e < 400 ? n < e && i < e ? i - n : n < e ? -1 : i < e ? 1 : n - i : e < n && e < i ? n - i : e < n ? -1 : e < i ? 1 : i - n : 1;\n    if (r !== o) {\n        if (r === t) return -1;\n        if (o === t) return 1;\n    }\n    return -1;\n}\nvar zt = class {\n    constructor(t){\n        this.fonts = new Map;\n        this.addFonts(t);\n    }\n    get({ name: t, weight: n, style: r }) {\n        if (!this.fonts.has(t)) return null;\n        n === \"normal\" && (n = 400), n === \"bold\" && (n = 700), typeof n == \"string\" && (n = Number.parseInt(n, 10));\n        let i = [\n            ...this.fonts.get(t)\n        ], o = i[0];\n        for(let u = 1; u < i.length; u++){\n            let [, s, a] = o, [, l, f] = i[u];\n            $f(n, r, [\n                s,\n                a\n            ], [\n                l,\n                f\n            ]) > 0 && (o = i[u]);\n        }\n        return o[0];\n    }\n    addFonts(t) {\n        for (let n of t){\n            let { name: r, data: i, lang: o } = n;\n            if (o && !Nu(o)) throw new Error(`Invalid value for props \\`lang\\`: \"${o}\". The value must be one of the following: ${Yr.join(\", \")}.`);\n            let u = o ?? qu, s = _shuding_opentype_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].parse(\"buffer\" in i ? i.buffer.slice(i.byteOffset, i.byteOffset + i.byteLength) : i, {\n                lowMemory: !0\n            }), a = s.charToGlyphIndex;\n            s.charToGlyphIndex = (f)=>{\n                let c = a.call(s, f);\n                return c === 0 && s._trackBrokenChars && s._trackBrokenChars.push(f), c;\n            }, this.defaultFont || (this.defaultFont = s);\n            let l = `${r.toLowerCase()}_${u}`;\n            this.fonts.has(l) || this.fonts.set(l, []), this.fonts.get(l).push([\n                s,\n                n.weight,\n                n.style\n            ]);\n        }\n    }\n    getEngine(t = 16, n = 1.2, { fontFamily: r = \"sans-serif\", fontWeight: i = 400, fontStyle: o = \"normal\" }, u) {\n        if (!this.fonts.size) throw new Error(\"No fonts are loaded. At least one font is required to calculate the layout.\");\n        r = (Array.isArray(r) ? r : [\n            r\n        ]).map((b)=>b.toLowerCase());\n        let s = [];\n        r.forEach((b)=>{\n            let y = this.get({\n                name: b,\n                weight: i,\n                style: o\n            });\n            if (y) {\n                s.push(y);\n                return;\n            }\n            let F = this.get({\n                name: b + \"_unknown\",\n                weight: i,\n                style: o\n            });\n            if (F) {\n                s.push(F);\n                return;\n            }\n        });\n        let a = Array.from(this.fonts.keys()), l = [], f = [], c = [];\n        for (let b of a)if (!r.includes(b)) if (u) {\n            let y = qf(b);\n            y ? y === u ? l.push(this.get({\n                name: b,\n                weight: i,\n                style: o\n            })) : f.push(this.get({\n                name: b,\n                weight: i,\n                style: o\n            })) : c.push(this.get({\n                name: b,\n                weight: i,\n                style: o\n            }));\n        } else c.push(this.get({\n            name: b,\n            weight: i,\n            style: o\n        }));\n        let d = new Map, h = (b, y = !0)=>{\n            let F = [\n                ...s,\n                ...c,\n                ...l,\n                ...y ? f : []\n            ];\n            if (typeof b > \"u\") return y ? F[F.length - 1] : void 0;\n            let x = b.charCodeAt(0);\n            if (d.has(x)) return d.get(x);\n            let k = F.find((B, I)=>!!B.charToGlyphIndex(b) || y && I === F.length - 1);\n            return k && d.set(x, k), k;\n        }, p = (b, y = !1)=>{\n            var x, k;\n            return ((y ? (k = (x = b.tables) == null ? void 0 : x.os2) == null ? void 0 : k.sTypoAscender : 0) || b.ascender) / b.unitsPerEm * t;\n        }, m = (b, y = !1)=>{\n            var x, k;\n            return ((y ? (k = (x = b.tables) == null ? void 0 : x.os2) == null ? void 0 : k.sTypoDescender : 0) || b.descender) / b.unitsPerEm * t;\n        }, v = (b)=>h(b, !1), D = {\n            has: (b)=>{\n                if (b === `\n`) return !0;\n                let y = v(b);\n                return y ? (y._trackBrokenChars = [], y.stringToGlyphs(b), y._trackBrokenChars.length ? (y._trackBrokenChars = void 0, !1) : !0) : !1;\n            },\n            baseline: (b, y = typeof b > \"u\" ? s[0] : h(b))=>{\n                let F = p(y, !0), x = m(y, !0), k = D.height(b, y), { yMax: B, yMin: I } = y.tables.head, G = F - x, ue = (B / (B - I) - 1) * G;\n                return k * ((1.2 / n + 1) / 2) + ue;\n            },\n            height: (b, y = typeof b > \"u\" ? s[0] : h(b))=>(p(y) - m(y)) * (n / 1.2),\n            measure: (b, y)=>this.measure(h, b, y),\n            getSVG: (b, y)=>this.getSVG(h, b, y)\n        };\n        return D;\n    }\n    patchFontFallbackResolver(t, n) {\n        let r = [];\n        t._trackBrokenChars = r;\n        let i = t.stringToGlyphs;\n        return t.stringToGlyphs = (o, ...u)=>{\n            let s = i.call(t, o, ...u);\n            for(let a = 0; a < s.length; a++)if (s[a].unicode === void 0) {\n                let l = r.shift(), f = n(l);\n                if (f !== t) {\n                    let c = f.charToGlyph(l), d = t.unitsPerEm / f.unitsPerEm, h = new _shuding_opentype_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Path;\n                    h.unitsPerEm = t.unitsPerEm, h.commands = c.path.commands.map((m)=>{\n                        let v = {\n                            ...m\n                        };\n                        for(let D in v)typeof v[D] == \"number\" && (v[D] *= d);\n                        return v;\n                    });\n                    let p = new _shuding_opentype_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Glyph({\n                        ...c,\n                        advanceWidth: c.advanceWidth * d,\n                        xMin: c.xMin * d,\n                        xMax: c.xMax * d,\n                        yMin: c.yMin * d,\n                        yMax: c.yMax * d,\n                        path: h\n                    });\n                    s[a] = p;\n                }\n            }\n            return s;\n        }, ()=>{\n            t.stringToGlyphs = i, t._trackBrokenChars = void 0;\n        };\n    }\n    measure(t, n, { fontSize: r, letterSpacing: i = 0 }) {\n        let o = t(n), u = this.patchFontFallbackResolver(o, t);\n        try {\n            return o.getAdvanceWidth(n, r, {\n                letterSpacing: i / r\n            });\n        } finally{\n            u();\n        }\n    }\n    getSVG(t, n, { fontSize: r, top: i, left: o, letterSpacing: u = 0 }) {\n        let s = t(n), a = this.patchFontFallbackResolver(s, t);\n        try {\n            return r === 0 ? \"\" : s.getPath(n.replace(/\\n/g, \"\"), o, i, r, {\n                letterSpacing: u / r\n            }).toPathData(1);\n        } finally{\n            a();\n        }\n    }\n};\nfunction qf(e) {\n    let t = e.split(\"_\"), n = t[t.length - 1];\n    return n === qu ? void 0 : n;\n}\nfunction Vn({ width: e, height: t, content: n }) {\n    return S(\"svg\", {\n        width: e,\n        height: t,\n        viewBox: `0 0 ${e} ${t}`,\n        xmlns: \"http://www.w3.org/2000/svg\"\n    }, n);\n}\nvar yl = Bl(Ka());\nvar _m = [\n    \"ios\",\n    \"android\",\n    \"windows\",\n    \"macos\",\n    \"web\"\n];\nfunction Za(e) {\n    return _m.includes(e);\n}\nvar km = [\n    \"portrait\",\n    \"landscape\"\n];\nfunction el(e) {\n    return km.includes(e);\n}\nvar Ja;\n(function(e) {\n    e.fontSize = \"fontSize\", e.lineHeight = \"lineHeight\";\n})(Ja || (Ja = {}));\nvar z;\n(function(e) {\n    e.rem = \"rem\", e.em = \"em\", e.px = \"px\", e.percent = \"%\", e.vw = \"vw\", e.vh = \"vh\", e.none = \"<no-css-unit>\";\n})(z || (z = {}));\nfunction yo(e) {\n    return typeof e == \"string\";\n}\nfunction xo(e) {\n    return typeof e == \"object\";\n}\nvar Fo;\nfunction g(e) {\n    return {\n        kind: \"complete\",\n        style: e\n    };\n}\nfunction de(e, t = {}) {\n    let { fractions: n } = t;\n    if (n && e.includes(\"/\")) {\n        let [o = \"\", u = \"\"] = e.split(\"/\", 2), s = de(o), a = de(u);\n        return !s || !a ? null : [\n            s[0] / a[0],\n            a[1]\n        ];\n    }\n    let r = parseFloat(e);\n    if (Number.isNaN(r)) return null;\n    let i = e.match(/(([a-z]{2,}|%))$/);\n    if (!i) return [\n        r,\n        z.none\n    ];\n    switch(i == null ? void 0 : i[1]){\n        case \"rem\":\n            return [\n                r,\n                z.rem\n            ];\n        case \"px\":\n            return [\n                r,\n                z.px\n            ];\n        case \"em\":\n            return [\n                r,\n                z.em\n            ];\n        case \"%\":\n            return [\n                r,\n                z.percent\n            ];\n        case \"vw\":\n            return [\n                r,\n                z.vw\n            ];\n        case \"vh\":\n            return [\n                r,\n                z.vh\n            ];\n        default:\n            return null;\n    }\n}\nfunction Ge(e, t, n = {}) {\n    let r = Me(t, n);\n    return r === null ? null : g({\n        [e]: r\n    });\n}\nfunction pn(e, t, n) {\n    let r = Me(t);\n    return r !== null && (n[e] = r), n;\n}\nfunction rl(e, t) {\n    let n = Me(t);\n    return n === null ? null : {\n        [e]: n\n    };\n}\nfunction Me(e, t = {}) {\n    if (e === void 0) return null;\n    let n = de(String(e), t);\n    return n ? rt(...n, t) : null;\n}\nfunction rt(e, t, n = {}) {\n    let { isNegative: r, device: i } = n;\n    switch(t){\n        case z.rem:\n            return e * 16 * (r ? -1 : 1);\n        case z.px:\n            return e * (r ? -1 : 1);\n        case z.percent:\n            return `${r ? \"-\" : \"\"}${e}%`;\n        case z.none:\n            return e * (r ? -1 : 1);\n        case z.vw:\n            return i != null && i.windowDimensions ? i.windowDimensions.width * (e / 100) : (Fe(\"`vw` CSS unit requires configuration with `useDeviceContext()`\"), null);\n        case z.vh:\n            return i != null && i.windowDimensions ? i.windowDimensions.height * (e / 100) : (Fe(\"`vh` CSS unit requires configuration with `useDeviceContext()`\"), null);\n        default:\n            return null;\n    }\n}\nfunction wo(e) {\n    let t = de(e);\n    if (!t) return null;\n    let [n, r] = t;\n    switch(r){\n        case z.rem:\n            return n * 16;\n        case z.px:\n            return n;\n        default:\n            return null;\n    }\n}\nvar Tm = {\n    t: \"Top\",\n    tr: \"TopRight\",\n    tl: \"TopLeft\",\n    b: \"Bottom\",\n    br: \"BottomRight\",\n    bl: \"BottomLeft\",\n    l: \"Left\",\n    r: \"Right\",\n    x: \"Horizontal\",\n    y: \"Vertical\"\n};\nfunction Eo(e) {\n    return Tm[e ?? \"\"] || \"All\";\n}\nfunction So(e) {\n    let t = \"All\";\n    return [\n        e.replace(/^-(t|b|r|l|tr|tl|br|bl)(-|$)/, (r, i)=>(t = Eo(i), \"\")),\n        t\n    ];\n}\nfunction ct(e, t = {}) {\n    if (e.includes(\"/\")) {\n        let n = tl(e, {\n            ...t,\n            fractions: !0\n        });\n        if (n) return n;\n    }\n    return e[0] === \"[\" && (e = e.slice(1, -1)), tl(e, t);\n}\nfunction Te(e, t, n = {}) {\n    let r = ct(t, n);\n    return r === null ? null : g({\n        [e]: r\n    });\n}\nfunction tl(e, t = {}) {\n    if (e === \"px\") return 1;\n    let n = de(e, t);\n    if (!n) return null;\n    let [r, i] = n;\n    return t.fractions && (i = z.percent, r *= 100), i === z.none && (r = r / 4, i = z.rem), rt(r, i, t);\n}\nfunction Am(...e) {\n    console.warn(...e);\n}\nfunction Om(...e) {}\nvar Fe = typeof process > \"u\" || ((Fo = process == null ? void 0 : process.env) === null || Fo === void 0 ? void 0 : Fo.JEST_WORKER_ID) === void 0 ? Am : Om;\nvar Pm = [\n    [\n        \"aspect-square\",\n        g({\n            aspectRatio: 1\n        })\n    ],\n    [\n        \"aspect-video\",\n        g({\n            aspectRatio: 16 / 9\n        })\n    ],\n    [\n        \"items-center\",\n        g({\n            alignItems: \"center\"\n        })\n    ],\n    [\n        \"items-start\",\n        g({\n            alignItems: \"flex-start\"\n        })\n    ],\n    [\n        \"items-end\",\n        g({\n            alignItems: \"flex-end\"\n        })\n    ],\n    [\n        \"items-baseline\",\n        g({\n            alignItems: \"baseline\"\n        })\n    ],\n    [\n        \"items-stretch\",\n        g({\n            alignItems: \"stretch\"\n        })\n    ],\n    [\n        \"justify-start\",\n        g({\n            justifyContent: \"flex-start\"\n        })\n    ],\n    [\n        \"justify-end\",\n        g({\n            justifyContent: \"flex-end\"\n        })\n    ],\n    [\n        \"justify-center\",\n        g({\n            justifyContent: \"center\"\n        })\n    ],\n    [\n        \"justify-between\",\n        g({\n            justifyContent: \"space-between\"\n        })\n    ],\n    [\n        \"justify-around\",\n        g({\n            justifyContent: \"space-around\"\n        })\n    ],\n    [\n        \"justify-evenly\",\n        g({\n            justifyContent: \"space-evenly\"\n        })\n    ],\n    [\n        \"content-start\",\n        g({\n            alignContent: \"flex-start\"\n        })\n    ],\n    [\n        \"content-end\",\n        g({\n            alignContent: \"flex-end\"\n        })\n    ],\n    [\n        \"content-between\",\n        g({\n            alignContent: \"space-between\"\n        })\n    ],\n    [\n        \"content-around\",\n        g({\n            alignContent: \"space-around\"\n        })\n    ],\n    [\n        \"content-stretch\",\n        g({\n            alignContent: \"stretch\"\n        })\n    ],\n    [\n        \"content-center\",\n        g({\n            alignContent: \"center\"\n        })\n    ],\n    [\n        \"self-auto\",\n        g({\n            alignSelf: \"auto\"\n        })\n    ],\n    [\n        \"self-start\",\n        g({\n            alignSelf: \"flex-start\"\n        })\n    ],\n    [\n        \"self-end\",\n        g({\n            alignSelf: \"flex-end\"\n        })\n    ],\n    [\n        \"self-center\",\n        g({\n            alignSelf: \"center\"\n        })\n    ],\n    [\n        \"self-stretch\",\n        g({\n            alignSelf: \"stretch\"\n        })\n    ],\n    [\n        \"self-baseline\",\n        g({\n            alignSelf: \"baseline\"\n        })\n    ],\n    [\n        \"direction-inherit\",\n        g({\n            direction: \"inherit\"\n        })\n    ],\n    [\n        \"direction-ltr\",\n        g({\n            direction: \"ltr\"\n        })\n    ],\n    [\n        \"direction-rtl\",\n        g({\n            direction: \"rtl\"\n        })\n    ],\n    [\n        \"hidden\",\n        g({\n            display: \"none\"\n        })\n    ],\n    [\n        \"flex\",\n        g({\n            display: \"flex\"\n        })\n    ],\n    [\n        \"flex-row\",\n        g({\n            flexDirection: \"row\"\n        })\n    ],\n    [\n        \"flex-row-reverse\",\n        g({\n            flexDirection: \"row-reverse\"\n        })\n    ],\n    [\n        \"flex-col\",\n        g({\n            flexDirection: \"column\"\n        })\n    ],\n    [\n        \"flex-col-reverse\",\n        g({\n            flexDirection: \"column-reverse\"\n        })\n    ],\n    [\n        \"flex-wrap\",\n        g({\n            flexWrap: \"wrap\"\n        })\n    ],\n    [\n        \"flex-wrap-reverse\",\n        g({\n            flexWrap: \"wrap-reverse\"\n        })\n    ],\n    [\n        \"flex-nowrap\",\n        g({\n            flexWrap: \"nowrap\"\n        })\n    ],\n    [\n        \"flex-auto\",\n        g({\n            flexGrow: 1,\n            flexShrink: 1,\n            flexBasis: \"auto\"\n        })\n    ],\n    [\n        \"flex-initial\",\n        g({\n            flexGrow: 0,\n            flexShrink: 1,\n            flexBasis: \"auto\"\n        })\n    ],\n    [\n        \"flex-none\",\n        g({\n            flexGrow: 0,\n            flexShrink: 0,\n            flexBasis: \"auto\"\n        })\n    ],\n    [\n        \"overflow-hidden\",\n        g({\n            overflow: \"hidden\"\n        })\n    ],\n    [\n        \"overflow-visible\",\n        g({\n            overflow: \"visible\"\n        })\n    ],\n    [\n        \"overflow-scroll\",\n        g({\n            overflow: \"scroll\"\n        })\n    ],\n    [\n        \"absolute\",\n        g({\n            position: \"absolute\"\n        })\n    ],\n    [\n        \"relative\",\n        g({\n            position: \"relative\"\n        })\n    ],\n    [\n        \"italic\",\n        g({\n            fontStyle: \"italic\"\n        })\n    ],\n    [\n        \"not-italic\",\n        g({\n            fontStyle: \"normal\"\n        })\n    ],\n    [\n        \"oldstyle-nums\",\n        vr(\"oldstyle-nums\")\n    ],\n    [\n        \"small-caps\",\n        vr(\"small-caps\")\n    ],\n    [\n        \"lining-nums\",\n        vr(\"lining-nums\")\n    ],\n    [\n        \"tabular-nums\",\n        vr(\"tabular-nums\")\n    ],\n    [\n        \"proportional-nums\",\n        vr(\"proportional-nums\")\n    ],\n    [\n        \"font-thin\",\n        g({\n            fontWeight: \"100\"\n        })\n    ],\n    [\n        \"font-100\",\n        g({\n            fontWeight: \"100\"\n        })\n    ],\n    [\n        \"font-extralight\",\n        g({\n            fontWeight: \"200\"\n        })\n    ],\n    [\n        \"font-200\",\n        g({\n            fontWeight: \"200\"\n        })\n    ],\n    [\n        \"font-light\",\n        g({\n            fontWeight: \"300\"\n        })\n    ],\n    [\n        \"font-300\",\n        g({\n            fontWeight: \"300\"\n        })\n    ],\n    [\n        \"font-normal\",\n        g({\n            fontWeight: \"normal\"\n        })\n    ],\n    [\n        \"font-400\",\n        g({\n            fontWeight: \"400\"\n        })\n    ],\n    [\n        \"font-medium\",\n        g({\n            fontWeight: \"500\"\n        })\n    ],\n    [\n        \"font-500\",\n        g({\n            fontWeight: \"500\"\n        })\n    ],\n    [\n        \"font-semibold\",\n        g({\n            fontWeight: \"600\"\n        })\n    ],\n    [\n        \"font-600\",\n        g({\n            fontWeight: \"600\"\n        })\n    ],\n    [\n        \"font-bold\",\n        g({\n            fontWeight: \"bold\"\n        })\n    ],\n    [\n        \"font-700\",\n        g({\n            fontWeight: \"700\"\n        })\n    ],\n    [\n        \"font-extrabold\",\n        g({\n            fontWeight: \"800\"\n        })\n    ],\n    [\n        \"font-800\",\n        g({\n            fontWeight: \"800\"\n        })\n    ],\n    [\n        \"font-black\",\n        g({\n            fontWeight: \"900\"\n        })\n    ],\n    [\n        \"font-900\",\n        g({\n            fontWeight: \"900\"\n        })\n    ],\n    [\n        \"include-font-padding\",\n        g({\n            includeFontPadding: !0\n        })\n    ],\n    [\n        \"remove-font-padding\",\n        g({\n            includeFontPadding: !1\n        })\n    ],\n    [\n        \"max-w-none\",\n        g({\n            maxWidth: \"99999%\"\n        })\n    ],\n    [\n        \"text-left\",\n        g({\n            textAlign: \"left\"\n        })\n    ],\n    [\n        \"text-center\",\n        g({\n            textAlign: \"center\"\n        })\n    ],\n    [\n        \"text-right\",\n        g({\n            textAlign: \"right\"\n        })\n    ],\n    [\n        \"text-justify\",\n        g({\n            textAlign: \"justify\"\n        })\n    ],\n    [\n        \"text-auto\",\n        g({\n            textAlign: \"auto\"\n        })\n    ],\n    [\n        \"underline\",\n        g({\n            textDecorationLine: \"underline\"\n        })\n    ],\n    [\n        \"line-through\",\n        g({\n            textDecorationLine: \"line-through\"\n        })\n    ],\n    [\n        \"no-underline\",\n        g({\n            textDecorationLine: \"none\"\n        })\n    ],\n    [\n        \"uppercase\",\n        g({\n            textTransform: \"uppercase\"\n        })\n    ],\n    [\n        \"lowercase\",\n        g({\n            textTransform: \"lowercase\"\n        })\n    ],\n    [\n        \"capitalize\",\n        g({\n            textTransform: \"capitalize\"\n        })\n    ],\n    [\n        \"normal-case\",\n        g({\n            textTransform: \"none\"\n        })\n    ],\n    [\n        \"w-auto\",\n        g({\n            width: \"auto\"\n        })\n    ],\n    [\n        \"h-auto\",\n        g({\n            height: \"auto\"\n        })\n    ],\n    [\n        \"shadow-sm\",\n        g({\n            shadowOffset: {\n                width: 1,\n                height: 1\n            },\n            shadowColor: \"#000\",\n            shadowRadius: 1,\n            shadowOpacity: .025,\n            elevation: 1\n        })\n    ],\n    [\n        \"shadow\",\n        g({\n            shadowOffset: {\n                width: 1,\n                height: 1\n            },\n            shadowColor: \"#000\",\n            shadowRadius: 1,\n            shadowOpacity: .075,\n            elevation: 2\n        })\n    ],\n    [\n        \"shadow-md\",\n        g({\n            shadowOffset: {\n                width: 1,\n                height: 1\n            },\n            shadowColor: \"#000\",\n            shadowRadius: 3,\n            shadowOpacity: .125,\n            elevation: 3\n        })\n    ],\n    [\n        \"shadow-lg\",\n        g({\n            shadowOffset: {\n                width: 1,\n                height: 1\n            },\n            shadowColor: \"#000\",\n            shadowOpacity: .15,\n            shadowRadius: 8,\n            elevation: 8\n        })\n    ],\n    [\n        \"shadow-xl\",\n        g({\n            shadowOffset: {\n                width: 1,\n                height: 1\n            },\n            shadowColor: \"#000\",\n            shadowOpacity: .19,\n            shadowRadius: 20,\n            elevation: 12\n        })\n    ],\n    [\n        \"shadow-2xl\",\n        g({\n            shadowOffset: {\n                width: 1,\n                height: 1\n            },\n            shadowColor: \"#000\",\n            shadowOpacity: .25,\n            shadowRadius: 30,\n            elevation: 16\n        })\n    ],\n    [\n        \"shadow-none\",\n        g({\n            shadowOffset: {\n                width: 0,\n                height: 0\n            },\n            shadowColor: \"#000\",\n            shadowRadius: 0,\n            shadowOpacity: 0,\n            elevation: 0\n        })\n    ]\n], Co = Pm;\nfunction vr(e) {\n    return {\n        kind: \"dependent\",\n        complete (t) {\n            (!t.fontVariant || !Array.isArray(t.fontVariant)) && (t.fontVariant = []), t.fontVariant.push(e);\n        }\n    };\n}\nvar yr = class {\n    constructor(t){\n        this.ir = new Map(Co), this.styles = new Map, this.prefixes = new Map, this.ir = new Map([\n            ...Co,\n            ...t ?? []\n        ]);\n    }\n    getStyle(t) {\n        return this.styles.get(t);\n    }\n    setStyle(t, n) {\n        this.styles.set(t, n);\n    }\n    getIr(t) {\n        return this.ir.get(t);\n    }\n    setIr(t, n) {\n        this.ir.set(t, n);\n    }\n    getPrefixMatch(t) {\n        return this.prefixes.get(t);\n    }\n    setPrefixMatch(t, n) {\n        this.prefixes.set(t, n);\n    }\n};\nfunction _o(e, t, n = {}) {\n    let r = t == null ? void 0 : t[e];\n    if (!r) return Te(\"fontSize\", e, n);\n    if (typeof r == \"string\") return Ge(\"fontSize\", r);\n    let i = {}, [o, u] = r, s = rl(\"fontSize\", o);\n    if (s && (i = s), typeof u == \"string\") return g(pn(\"lineHeight\", nl(u, i), i));\n    let { lineHeight: a, letterSpacing: l } = u;\n    return a && pn(\"lineHeight\", nl(a, i), i), l && pn(\"letterSpacing\", l, i), g(i);\n}\nfunction nl(e, t) {\n    let n = de(e);\n    if (n) {\n        let [r, i] = n;\n        if ((i === z.none || i === z.em) && typeof t.fontSize == \"number\") return t.fontSize * r;\n    }\n    return e;\n}\nfunction ko(e, t) {\n    var n;\n    let r = (n = t == null ? void 0 : t[e]) !== null && n !== void 0 ? n : e.startsWith(\"[\") ? e.slice(1, -1) : e, i = de(r);\n    if (!i) return null;\n    let [o, u] = i;\n    if (u === z.none) return {\n        kind: \"dependent\",\n        complete (a) {\n            if (typeof a.fontSize != \"number\") return \"relative line-height utilities require that font-size be set\";\n            a.lineHeight = a.fontSize * o;\n        }\n    };\n    let s = rt(o, u);\n    return s !== null ? g({\n        lineHeight: s\n    }) : null;\n}\nfunction To(e, t, n, r, i) {\n    let o = \"\";\n    if (r[0] === \"[\") o = r.slice(1, -1);\n    else {\n        let l = i == null ? void 0 : i[r];\n        if (l) o = l;\n        else {\n            let f = ct(r);\n            return f && typeof f == \"number\" ? il(f, z.px, t, e) : null;\n        }\n    }\n    if (o === \"auto\") return ol(t, e, \"auto\");\n    let u = de(o);\n    if (!u) return null;\n    let [s, a] = u;\n    return n && (s = -s), il(s, a, t, e);\n}\nfunction il(e, t, n, r) {\n    let i = rt(e, t);\n    return i === null ? null : ol(n, r, i);\n}\nfunction ol(e, t, n) {\n    switch(e){\n        case \"All\":\n            return {\n                kind: \"complete\",\n                style: {\n                    [`${t}Top`]: n,\n                    [`${t}Right`]: n,\n                    [`${t}Bottom`]: n,\n                    [`${t}Left`]: n\n                }\n            };\n        case \"Bottom\":\n        case \"Top\":\n        case \"Left\":\n        case \"Right\":\n            return {\n                kind: \"complete\",\n                style: {\n                    [`${t}${e}`]: n\n                }\n            };\n        case \"Vertical\":\n            return {\n                kind: \"complete\",\n                style: {\n                    [`${t}Top`]: n,\n                    [`${t}Bottom`]: n\n                }\n            };\n        case \"Horizontal\":\n            return {\n                kind: \"complete\",\n                style: {\n                    [`${t}Left`]: n,\n                    [`${t}Right`]: n\n                }\n            };\n        default:\n            return null;\n    }\n}\nfunction Ao(e) {\n    if (!e) return {};\n    let t = Object.entries(e).reduce((i, [o, u])=>{\n        let s = [\n            0,\n            1 / 0,\n            0\n        ], a = typeof u == \"string\" ? {\n            min: u\n        } : u, l = a.min ? wo(a.min) : 0;\n        l === null ? Fe(`invalid screen config value: ${o}->min: ${a.min}`) : s[0] = l;\n        let f = a.max ? wo(a.max) : 1 / 0;\n        return f === null ? Fe(`invalid screen config value: ${o}->max: ${a.max}`) : s[1] = f, i[o] = s, i;\n    }, {}), n = Object.values(t);\n    n.sort((i, o)=>{\n        let [u, s] = i, [a, l] = o;\n        return s === 1 / 0 || l === 1 / 0 ? u - a : s - l;\n    });\n    let r = 0;\n    return n.forEach((i)=>i[2] = r++), t;\n}\nfunction Oo(e, t) {\n    let n = t == null ? void 0 : t[e];\n    if (!n) return null;\n    if (typeof n == \"string\") return g({\n        fontFamily: n\n    });\n    let r = n[0];\n    return r ? g({\n        fontFamily: r\n    }) : null;\n}\nfunction dt(e, t, n) {\n    if (!n) return null;\n    let r;\n    t.includes(\"/\") && ([t = \"\", r] = t.split(\"/\", 2));\n    let i = \"\";\n    if (t.startsWith(\"[#\") || t.startsWith(\"[rgb\") ? i = t.slice(1, -1) : i = al(t, n), !i) return null;\n    if (r) {\n        let o = Number(r);\n        if (!Number.isNaN(o)) return i = ul(i, o / 100), g({\n            [hn[e].color]: i\n        });\n    }\n    return {\n        kind: \"dependent\",\n        complete (o) {\n            let u = hn[e].opacity, s = o[u];\n            typeof s == \"number\" && (i = ul(i, s)), o[hn[e].color] = i;\n        }\n    };\n}\nfunction xr(e, t) {\n    let n = parseInt(t, 10);\n    if (Number.isNaN(n)) return null;\n    let r = n / 100;\n    return {\n        kind: \"complete\",\n        style: {\n            [hn[e].opacity]: r\n        }\n    };\n}\nfunction ul(e, t) {\n    return e.startsWith(\"#\") ? e = Bm(e) : e.startsWith(\"rgb(\") && (e = e.replace(/^rgb\\(/, \"rgba(\").replace(/\\)$/, \", 1)\")), e.replace(/, ?\\d*\\.?(\\d+)\\)$/, `, ${t})`);\n}\nfunction sl(e) {\n    for(let t in e)t.startsWith(\"__opacity_\") && delete e[t];\n}\nvar hn = {\n    bg: {\n        opacity: \"__opacity_bg\",\n        color: \"backgroundColor\"\n    },\n    text: {\n        opacity: \"__opacity_text\",\n        color: \"color\"\n    },\n    border: {\n        opacity: \"__opacity_border\",\n        color: \"borderColor\"\n    },\n    borderTop: {\n        opacity: \"__opacity_border\",\n        color: \"borderTopColor\"\n    },\n    borderBottom: {\n        opacity: \"__opacity_border\",\n        color: \"borderBottomColor\"\n    },\n    borderLeft: {\n        opacity: \"__opacity_border\",\n        color: \"borderLeftColor\"\n    },\n    borderRight: {\n        opacity: \"__opacity_border\",\n        color: \"borderRightColor\"\n    },\n    shadow: {\n        opacity: \"__opacity_shadow\",\n        color: \"shadowColor\"\n    },\n    tint: {\n        opacity: \"__opacity_tint\",\n        color: \"tintColor\"\n    }\n};\nfunction Bm(e) {\n    let t = e;\n    e = e.replace(Im, (u, s, a, l)=>s + s + a + a + l + l);\n    let n = Rm.exec(e);\n    if (!n) return Fe(`invalid config hex color value: ${t}`), \"rgba(0, 0, 0, 1)\";\n    let r = parseInt(n[1], 16), i = parseInt(n[2], 16), o = parseInt(n[3], 16);\n    return `rgba(${r}, ${i}, ${o}, 1)`;\n}\nfunction al(e, t) {\n    let n = t[e];\n    if (yo(n)) return n;\n    if (xo(n) && yo(n.DEFAULT)) return n.DEFAULT;\n    let [r = \"\", ...i] = e.split(\"-\");\n    for(; r !== e;){\n        let o = t[r];\n        if (xo(o)) return al(i.join(\"-\"), o);\n        if (i.length === 0) return \"\";\n        r = `${r}-${i.shift()}`;\n    }\n    return \"\";\n}\nvar Im = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, Rm = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nfunction fl(e, t) {\n    let [n, r] = So(e);\n    if (n.match(/^(-?(\\d)+)?$/)) return Lm(n, r, t == null ? void 0 : t.borderWidth);\n    if (n = n.replace(/^-/, \"\"), [\n        \"dashed\",\n        \"solid\",\n        \"dotted\"\n    ].includes(n)) return g({\n        borderStyle: n\n    });\n    let o = \"border\";\n    switch(r){\n        case \"Bottom\":\n            o = \"borderBottom\";\n            break;\n        case \"Top\":\n            o = \"borderTop\";\n            break;\n        case \"Left\":\n            o = \"borderLeft\";\n            break;\n        case \"Right\":\n            o = \"borderRight\";\n            break;\n    }\n    let u = dt(o, n, t == null ? void 0 : t.borderColor);\n    if (u) return u;\n    let s = `border${r === \"All\" ? \"\" : r}Width`;\n    n = n.replace(/^-/, \"\");\n    let a = n.slice(1, -1), l = Te(s, a);\n    return typeof (l == null ? void 0 : l.style[s]) != \"number\" ? null : l;\n}\nfunction Lm(e, t, n) {\n    if (!n) return null;\n    e = e.replace(/^-/, \"\");\n    let i = n[e === \"\" ? \"DEFAULT\" : e];\n    if (i === void 0) return null;\n    let o = `border${t === \"All\" ? \"\" : t}Width`;\n    return Ge(o, i);\n}\nfunction cl(e, t) {\n    if (!t) return null;\n    let [n, r] = So(e);\n    n = n.replace(/^-/, \"\"), n === \"\" && (n = \"DEFAULT\");\n    let i = `border${r === \"All\" ? \"\" : r}Radius`, o = t[n];\n    if (o) return ll(Ge(i, o));\n    let u = Te(i, n);\n    return typeof (u == null ? void 0 : u.style[i]) != \"number\" ? null : ll(u);\n}\nfunction ll(e) {\n    if ((e == null ? void 0 : e.kind) !== \"complete\") return e;\n    let t = e.style.borderTopRadius;\n    t !== void 0 && (e.style.borderTopLeftRadius = t, e.style.borderTopRightRadius = t, delete e.style.borderTopRadius);\n    let n = e.style.borderBottomRadius;\n    n !== void 0 && (e.style.borderBottomLeftRadius = n, e.style.borderBottomRightRadius = n, delete e.style.borderBottomRadius);\n    let r = e.style.borderLeftRadius;\n    r !== void 0 && (e.style.borderBottomLeftRadius = r, e.style.borderTopLeftRadius = r, delete e.style.borderLeftRadius);\n    let i = e.style.borderRightRadius;\n    return i !== void 0 && (e.style.borderBottomRightRadius = i, e.style.borderTopRightRadius = i, delete e.style.borderRightRadius), e;\n}\nfunction Ct(e, t, n, r) {\n    let i = null;\n    e === \"inset\" && (t = t.replace(/^(x|y)-/, (s, a)=>(i = a === \"x\" ? \"x\" : \"y\", \"\")));\n    let o = r == null ? void 0 : r[t];\n    if (o) {\n        let s = Me(o, {\n            isNegative: n\n        });\n        if (s !== null) return dl(e, i, s);\n    }\n    let u = ct(t, {\n        isNegative: n\n    });\n    return u !== null ? dl(e, i, u) : null;\n}\nfunction dl(e, t, n) {\n    if (e !== \"inset\") return g({\n        [e]: n\n    });\n    switch(t){\n        case null:\n            return g({\n                top: n,\n                left: n,\n                right: n,\n                bottom: n\n            });\n        case \"y\":\n            return g({\n                top: n,\n                bottom: n\n            });\n        case \"x\":\n            return g({\n                left: n,\n                right: n\n            });\n    }\n}\nfunction Fr(e, t, n) {\n    var r;\n    t = t.replace(/^-/, \"\");\n    let i = t === \"\" ? \"DEFAULT\" : t, o = Number((r = n == null ? void 0 : n[i]) !== null && r !== void 0 ? r : t);\n    return Number.isNaN(o) ? null : g({\n        [`flex${e}`]: o\n    });\n}\nfunction pl(e, t) {\n    var n, r;\n    if (e = (t == null ? void 0 : t[e]) || e, [\n        \"min-content\",\n        \"revert\",\n        \"unset\"\n    ].includes(e)) return null;\n    if (e.match(/^\\d+(\\.\\d+)?$/)) return g({\n        flexGrow: Number(e),\n        flexBasis: \"0%\"\n    });\n    let i = e.match(/^(\\d+)\\s+(\\d+)$/);\n    if (i) return g({\n        flexGrow: Number(i[1]),\n        flexShrink: Number(i[2])\n    });\n    if (i = e.match(/^(\\d+)\\s+([^ ]+)$/), i) {\n        let o = Me((n = i[2]) !== null && n !== void 0 ? n : \"\");\n        return o ? g({\n            flexGrow: Number(i[1]),\n            flexBasis: o\n        }) : null;\n    }\n    if (i = e.match(/^(\\d+)\\s+(\\d+)\\s+(.+)$/), i) {\n        let o = Me((r = i[3]) !== null && r !== void 0 ? r : \"\");\n        return o ? g({\n            flexGrow: Number(i[1]),\n            flexShrink: Number(i[2]),\n            flexBasis: o\n        }) : null;\n    }\n    return null;\n}\nfunction Po(e, t, n = {}, r) {\n    let i = r == null ? void 0 : r[t];\n    return i !== void 0 ? Ge(e, i, n) : Te(e, t, n);\n}\nfunction wr(e, t, n = {}, r) {\n    let i = Me(r == null ? void 0 : r[t], n);\n    return i ? g({\n        [e]: i\n    }) : (t === \"screen\" && (t = e.includes(\"Width\") ? \"100vw\" : \"100vh\"), Te(e, t, n));\n}\nfunction hl(e, t, n) {\n    let r = n == null ? void 0 : n[e];\n    if (r) {\n        let i = de(r, {\n            isNegative: t\n        });\n        if (!i) return null;\n        let [o, u] = i;\n        if (u === z.em) return Mm(o);\n        if (u === z.percent) return Fe(\"percentage-based letter-spacing configuration currently unsupported, switch to `em`s, or open an issue if you'd like to see support added.\"), null;\n        let s = rt(o, u, {\n            isNegative: t\n        });\n        return s !== null ? g({\n            letterSpacing: s\n        }) : null;\n    }\n    return Te(\"letterSpacing\", e, {\n        isNegative: t\n    });\n}\nfunction Mm(e) {\n    return {\n        kind: \"dependent\",\n        complete (t) {\n            let n = t.fontSize;\n            if (typeof n != \"number\" || Number.isNaN(n)) return \"tracking-X relative letter spacing classes require font-size to be set\";\n            t.letterSpacing = Math.round((e * n + Number.EPSILON) * 100) / 100;\n        }\n    };\n}\nfunction ml(e, t) {\n    let n = t == null ? void 0 : t[e];\n    if (n) {\n        let i = de(String(n));\n        if (i) return g({\n            opacity: i[0]\n        });\n    }\n    let r = de(e);\n    return r ? g({\n        opacity: r[0] / 100\n    }) : null;\n}\nfunction Dl(e) {\n    let t = parseInt(e, 10);\n    return Number.isNaN(t) ? null : {\n        kind: \"complete\",\n        style: {\n            shadowOpacity: t / 100\n        }\n    };\n}\nfunction gl(e) {\n    if (e.includes(\"/\")) {\n        let [n = \"\", r = \"\"] = e.split(\"/\", 2), i = Bo(n), o = Bo(r);\n        return i === null || o === null ? null : {\n            kind: \"complete\",\n            style: {\n                shadowOffset: {\n                    width: i,\n                    height: o\n                }\n            }\n        };\n    }\n    let t = Bo(e);\n    return t === null ? null : {\n        kind: \"complete\",\n        style: {\n            shadowOffset: {\n                width: t,\n                height: t\n            }\n        }\n    };\n}\nfunction Bo(e) {\n    let t = ct(e);\n    return typeof t == \"number\" ? t : null;\n}\nvar _t = class {\n    constructor(t, n = {}, r, i, o){\n        var u, s, a, l, f, c;\n        this.config = n, this.cache = r, this.position = 0, this.isNull = !1, this.isNegative = !1, this.context = {}, this.context.device = i;\n        let d = t.trim().split(\":\"), h = [];\n        d.length === 1 ? this.string = t : (this.string = (u = d.pop()) !== null && u !== void 0 ? u : \"\", h = d), this.char = this.string[0];\n        let p = Ao((s = this.config.theme) === null || s === void 0 ? void 0 : s.screens);\n        for (let m of h)if (p[m]) {\n            let v = (a = p[m]) === null || a === void 0 ? void 0 : a[2];\n            v !== void 0 && (this.order = ((l = this.order) !== null && l !== void 0 ? l : 0) + v);\n            let D = (f = i.windowDimensions) === null || f === void 0 ? void 0 : f.width;\n            if (D) {\n                let [b, y] = (c = p[m]) !== null && c !== void 0 ? c : [\n                    0,\n                    0\n                ];\n                (D <= b || D > y) && (this.isNull = !0);\n            } else this.isNull = !0;\n        } else Za(m) ? this.isNull = m !== o : el(m) ? i.windowDimensions ? (i.windowDimensions.width > i.windowDimensions.height ? \"landscape\" : \"portrait\") !== m ? this.isNull = !0 : this.incrementOrder() : this.isNull = !0 : m === \"retina\" ? i.pixelDensity === 2 ? this.incrementOrder() : this.isNull = !0 : m === \"dark\" ? i.colorScheme !== \"dark\" ? this.isNull = !0 : this.incrementOrder() : this.handlePossibleArbitraryBreakpointPrefix(m) || (this.isNull = !0);\n    }\n    parse() {\n        if (this.isNull) return {\n            kind: \"null\"\n        };\n        let t = this.cache.getIr(this.rest);\n        if (t) return t;\n        this.parseIsNegative();\n        let n = this.parseUtility();\n        return n ? this.order !== void 0 ? {\n            kind: \"ordered\",\n            order: this.order,\n            styleIr: n\n        } : n : {\n            kind: \"null\"\n        };\n    }\n    parseUtility() {\n        var t, n, r, i, o;\n        let u = this.config.theme, s = null;\n        switch(this.char){\n            case \"m\":\n            case \"p\":\n                {\n                    let a = this.peekSlice(1, 3).match(/^(t|b|r|l|x|y)?-/);\n                    if (a) {\n                        let l = this.char === \"m\" ? \"margin\" : \"padding\";\n                        this.advance(((n = (t = a[0]) === null || t === void 0 ? void 0 : t.length) !== null && n !== void 0 ? n : 0) + 1);\n                        let f = Eo(a[1]), c = To(l, f, this.isNegative, this.rest, (r = this.config.theme) === null || r === void 0 ? void 0 : r[l]);\n                        if (c) return c;\n                    }\n                }\n        }\n        if (this.consumePeeked(\"h-\") && (s = Po(\"height\", this.rest, this.context, u == null ? void 0 : u.height), s) || this.consumePeeked(\"w-\") && (s = Po(\"width\", this.rest, this.context, u == null ? void 0 : u.width), s) || this.consumePeeked(\"min-w-\") && (s = wr(\"minWidth\", this.rest, this.context, u == null ? void 0 : u.minWidth), s) || this.consumePeeked(\"min-h-\") && (s = wr(\"minHeight\", this.rest, this.context, u == null ? void 0 : u.minHeight), s) || this.consumePeeked(\"max-w-\") && (s = wr(\"maxWidth\", this.rest, this.context, u == null ? void 0 : u.maxWidth), s) || this.consumePeeked(\"max-h-\") && (s = wr(\"maxHeight\", this.rest, this.context, u == null ? void 0 : u.maxHeight), s) || this.consumePeeked(\"leading-\") && (s = ko(this.rest, u == null ? void 0 : u.lineHeight), s) || this.consumePeeked(\"text-\") && (s = _o(this.rest, u == null ? void 0 : u.fontSize, this.context), s || (s = dt(\"text\", this.rest, u == null ? void 0 : u.textColor), s) || this.consumePeeked(\"opacity-\") && (s = xr(\"text\", this.rest), s)) || this.consumePeeked(\"font-\") && (s = Oo(this.rest, u == null ? void 0 : u.fontFamily), s) || this.consumePeeked(\"aspect-\") && (this.consumePeeked(\"ratio-\") && Fe(\"`aspect-ratio-{ratio}` is deprecated, use `aspect-{ratio}` instead\"), s = Ge(\"aspectRatio\", this.rest, {\n            fractions: !0\n        }), s) || this.consumePeeked(\"tint-\") && (s = dt(\"tint\", this.rest, u == null ? void 0 : u.colors), s) || this.consumePeeked(\"bg-\") && (s = dt(\"bg\", this.rest, u == null ? void 0 : u.backgroundColor), s || this.consumePeeked(\"opacity-\") && (s = xr(\"bg\", this.rest), s)) || this.consumePeeked(\"border\") && (s = fl(this.rest, u), s || this.consumePeeked(\"-opacity-\") && (s = xr(\"border\", this.rest), s)) || this.consumePeeked(\"rounded\") && (s = cl(this.rest, u == null ? void 0 : u.borderRadius), s) || this.consumePeeked(\"bottom-\") && (s = Ct(\"bottom\", this.rest, this.isNegative, u == null ? void 0 : u.inset), s) || this.consumePeeked(\"top-\") && (s = Ct(\"top\", this.rest, this.isNegative, u == null ? void 0 : u.inset), s) || this.consumePeeked(\"left-\") && (s = Ct(\"left\", this.rest, this.isNegative, u == null ? void 0 : u.inset), s) || this.consumePeeked(\"right-\") && (s = Ct(\"right\", this.rest, this.isNegative, u == null ? void 0 : u.inset), s) || this.consumePeeked(\"inset-\") && (s = Ct(\"inset\", this.rest, this.isNegative, u == null ? void 0 : u.inset), s) || this.consumePeeked(\"flex-\") && (this.consumePeeked(\"grow\") ? s = Fr(\"Grow\", this.rest, u == null ? void 0 : u.flexGrow) : this.consumePeeked(\"shrink\") ? s = Fr(\"Shrink\", this.rest, u == null ? void 0 : u.flexShrink) : s = pl(this.rest, u == null ? void 0 : u.flex), s) || this.consumePeeked(\"grow\") && (s = Fr(\"Grow\", this.rest, u == null ? void 0 : u.flexGrow), s) || this.consumePeeked(\"shrink\") && (s = Fr(\"Shrink\", this.rest, u == null ? void 0 : u.flexShrink), s) || this.consumePeeked(\"shadow-color-opacity-\") && (s = xr(\"shadow\", this.rest), s) || this.consumePeeked(\"shadow-opacity-\") && (s = Dl(this.rest), s) || this.consumePeeked(\"shadow-offset-\") && (s = gl(this.rest), s) || this.consumePeeked(\"shadow-radius-\") && (s = Te(\"shadowRadius\", this.rest), s) || this.consumePeeked(\"shadow-\") && (s = dt(\"shadow\", this.rest, u == null ? void 0 : u.colors), s)) return s;\n        if (this.consumePeeked(\"elevation-\")) {\n            let a = parseInt(this.rest, 10);\n            if (!Number.isNaN(a)) return g({\n                elevation: a\n            });\n        }\n        if (this.consumePeeked(\"opacity-\") && (s = ml(this.rest, u == null ? void 0 : u.opacity), s) || this.consumePeeked(\"tracking-\") && (s = hl(this.rest, this.isNegative, u == null ? void 0 : u.letterSpacing), s)) return s;\n        if (this.consumePeeked(\"z-\")) {\n            let a = Number((o = (i = u == null ? void 0 : u.zIndex) === null || i === void 0 ? void 0 : i[this.rest]) !== null && o !== void 0 ? o : this.rest);\n            if (!Number.isNaN(a)) return g({\n                zIndex: a\n            });\n        }\n        return Fe(`\\`${this.rest}\\` unknown or invalid utility`), null;\n    }\n    handlePossibleArbitraryBreakpointPrefix(t) {\n        var n;\n        if (t[0] !== \"m\") return !1;\n        let r = t.match(/^(min|max)-(w|h)-\\[([^\\]]+)\\]$/);\n        if (!r) return !1;\n        if (!(!((n = this.context.device) === null || n === void 0) && n.windowDimensions)) return this.isNull = !0, !0;\n        let i = this.context.device.windowDimensions, [, o = \"\", u = \"\", s = \"\"] = r, a = u === \"w\" ? i.width : i.height, l = de(s, this.context);\n        if (l === null) return this.isNull = !0, !0;\n        let [f, c] = l;\n        return c !== \"px\" && (this.isNull = !0), (o === \"min\" ? a >= f : a <= f) ? this.incrementOrder() : this.isNull = !0, !0;\n    }\n    advance(t = 1) {\n        this.position += t, this.char = this.string[this.position];\n    }\n    get rest() {\n        return this.peekSlice(0, this.string.length);\n    }\n    peekSlice(t, n) {\n        return this.string.slice(this.position + t, this.position + n);\n    }\n    consumePeeked(t) {\n        return this.peekSlice(0, t.length) === t ? (this.advance(t.length), !0) : !1;\n    }\n    parseIsNegative() {\n        this.char === \"-\" && (this.advance(), this.isNegative = !0, this.context.isNegative = !0);\n    }\n    incrementOrder() {\n        var t;\n        this.order = ((t = this.order) !== null && t !== void 0 ? t : 0) + 1;\n    }\n};\nfunction bl(e) {\n    let t = [], n = null;\n    return e.forEach((r)=>{\n        if (typeof r == \"string\") t = [\n            ...t,\n            ...Io(r)\n        ];\n        else if (Array.isArray(r)) t = [\n            ...t,\n            ...r.flatMap(Io)\n        ];\n        else if (typeof r == \"object\" && r !== null) for (let [i, o] of Object.entries(r))typeof o == \"boolean\" ? t = [\n            ...t,\n            ...o ? Io(i) : []\n        ] : n ? n[i] = o : n = {\n            [i]: o\n        };\n    }), [\n        t.filter(Boolean).filter(Nm),\n        n\n    ];\n}\nfunction Io(e) {\n    return e.trim().split(/\\s+/);\n}\nfunction Nm(e, t, n) {\n    return n.indexOf(e) === t;\n}\nfunction vl(e) {\n    var t;\n    return (t = e == null ? void 0 : e.reduce((n, r)=>({\n            ...n,\n            ...Wm(r.handler)\n        }), {})) !== null && t !== void 0 ? t : {};\n}\nfunction Wm(e) {\n    let t = {};\n    return e({\n        addUtilities: (n)=>{\n            t = n;\n        },\n        ...$m\n    }), t;\n}\nfunction Ne(e) {\n    throw new Error(`tailwindcss plugin function argument object prop \"${e}\" not implemented`);\n}\nvar $m = {\n    addComponents: Ne,\n    addBase: Ne,\n    addVariant: Ne,\n    e: Ne,\n    prefix: Ne,\n    theme: Ne,\n    variants: Ne,\n    config: Ne,\n    corePlugins: Ne,\n    matchUtilities: Ne,\n    postcss: null\n};\nfunction xl(e, t) {\n    let n = (0, yl.default)(qm(e)), r = {}, i = vl(n.plugins), o = {}, u = Object.entries(i).map(([p, m])=>typeof m == \"string\" ? (o[p] = m, [\n            p,\n            {\n                kind: \"null\"\n            }\n        ]) : [\n            p,\n            g(m)\n        ]).filter(([, p])=>p.kind !== \"null\");\n    function s() {\n        return [\n            r.windowDimensions ? `w${r.windowDimensions.width}` : !1,\n            r.windowDimensions ? `h${r.windowDimensions.height}` : !1,\n            r.fontScale ? `fs${r.fontScale}` : !1,\n            r.colorScheme === \"dark\" ? \"dark\" : !1,\n            r.pixelDensity === 2 ? \"retina\" : !1\n        ].filter(Boolean).join(\"--\") || \"default\";\n    }\n    let a = s(), l = {};\n    function f() {\n        let p = l[a];\n        if (p) return p;\n        let m = new yr(u);\n        return l[a] = m, m;\n    }\n    function c(...p) {\n        let m = f(), v = {}, D = [], b = [], [y, F] = bl(p), x = y.join(\" \"), k = m.getStyle(x);\n        if (k) return {\n            ...k,\n            ...F || {}\n        };\n        for (let B of y){\n            let I = m.getIr(B);\n            if (!I && B in o) {\n                let ue = c(o[B]);\n                m.setIr(B, g(ue)), v = {\n                    ...v,\n                    ...ue\n                };\n                continue;\n            }\n            switch(I = new _t(B, n, m, r, t).parse(), I.kind){\n                case \"complete\":\n                    v = {\n                        ...v,\n                        ...I.style\n                    }, m.setIr(B, I);\n                    break;\n                case \"dependent\":\n                    D.push(I);\n                    break;\n                case \"ordered\":\n                    b.push(I);\n                    break;\n                case \"null\":\n                    m.setIr(B, I);\n                    break;\n            }\n        }\n        if (b.length > 0) {\n            b.sort((B, I)=>B.order - I.order);\n            for (let B of b)switch(B.styleIr.kind){\n                case \"complete\":\n                    v = {\n                        ...v,\n                        ...B.styleIr.style\n                    };\n                    break;\n                case \"dependent\":\n                    D.push(B.styleIr);\n                    break;\n            }\n        }\n        if (D.length > 0) {\n            for (let B of D){\n                let I = B.complete(v);\n                I && Fe(I);\n            }\n            sl(v);\n        }\n        return x !== \"\" && m.setStyle(x, v), F && (v = {\n            ...v,\n            ...F\n        }), v;\n    }\n    function d(p) {\n        let m = c(p.split(/\\s+/g).map((v)=>v.replace(/^(bg|text|border)-/, \"\")).map((v)=>`bg-${v}`).join(\" \"));\n        return typeof m.backgroundColor == \"string\" ? m.backgroundColor : void 0;\n    }\n    let h = (p, ...m)=>{\n        let v = \"\";\n        return p.forEach((D, b)=>{\n            var y;\n            v += D + ((y = m[b]) !== null && y !== void 0 ? y : \"\");\n        }), c(v);\n    };\n    return h.style = c, h.color = d, h.prefixMatch = (...p)=>{\n        let m = p.sort().join(\":\"), v = f(), D = v.getPrefixMatch(m);\n        if (D !== void 0) return D;\n        let F = new _t(`${m}:flex`, n, v, r, t).parse().kind !== \"null\";\n        return v.setPrefixMatch(m, F), F;\n    }, h.setWindowDimensions = (p)=>{\n        r.windowDimensions = p, a = s();\n    }, h.setFontScale = (p)=>{\n        r.fontScale = p, a = s();\n    }, h.setPixelDensity = (p)=>{\n        r.pixelDensity = p, a = s();\n    }, h.setColorScheme = (p)=>{\n        r.colorScheme = p, a = s();\n    }, h;\n}\nfunction qm(e) {\n    return {\n        ...e,\n        content: [\n            \"_no_warnings_please\"\n        ]\n    };\n}\nvar Um = {\n    handler: ({ addUtilities: e })=>{\n        e({\n            \"shadow-sm\": {\n                boxShadow: \"0 1px 2px 0 rgb(0 0 0 / 0.05)\"\n            },\n            shadow: {\n                boxShadow: \"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\"\n            },\n            \"shadow-md\": {\n                boxShadow: \"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\"\n            },\n            \"shadow-lg\": {\n                boxShadow: \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\"\n            },\n            \"shadow-xl\": {\n                boxShadow: \"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\"\n            },\n            \"shadow-2xl\": {\n                boxShadow: \"0 25px 50px -12px rgb(0 0 0 / 0.25)\"\n            },\n            \"shadow-inner\": {\n                boxShadow: \"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\"\n            },\n            \"shadow-none\": {\n                boxShadow: \"0 0 #0000\"\n            }\n        });\n    }\n};\nfunction Gm(e) {\n    return xl({\n        ...e,\n        plugins: [\n            ...(e == null ? void 0 : e.plugins) ?? [],\n            Um\n        ]\n    }, \"web\");\n}\nvar mn;\nfunction Ro({ width: e, height: t, config: n }) {\n    return mn || (mn = Gm(n)), mn.setWindowDimensions({\n        width: +e,\n        height: +t\n    }), mn;\n}\nvar Lo = new WeakMap;\nasync function wl(e, t) {\n    let n = await qe();\n    if (!n || !n.Node) throw new Error(\"Satori is not initialized: expect `yoga` to be loaded, got \" + n);\n    t.fonts = t.fonts || [];\n    let r;\n    Lo.has(t.fonts) ? r = Lo.get(t.fonts) : Lo.set(t.fonts, r = new zt(t.fonts));\n    let i = \"width\" in t ? t.width : void 0, o = \"height\" in t ? t.height : void 0, u = n.Node.create();\n    i && u.setWidth(i), o && u.setHeight(o), u.setFlexDirection(n.FLEX_DIRECTION_ROW), u.setFlexWrap(n.WRAP_WRAP), u.setAlignContent(n.ALIGN_AUTO), u.setAlignItems(n.ALIGN_FLEX_START), u.setJustifyContent(n.JUSTIFY_FLEX_START), u.setOverflow(n.OVERFLOW_HIDDEN);\n    let s = {\n        ...t.graphemeImages\n    }, a = new Set;\n    Re.clear(), await cu(e);\n    let l = qt(e, {\n        id: \"id\",\n        parentStyle: {},\n        inheritedStyle: {\n            fontSize: 16,\n            fontWeight: \"normal\",\n            fontFamily: \"serif\",\n            fontStyle: \"normal\",\n            lineHeight: 1.2,\n            color: \"black\",\n            opacity: 1,\n            whiteSpace: \"normal\",\n            _viewportWidth: i,\n            _viewportHeight: o\n        },\n        parent: u,\n        font: r,\n        embedFont: t.embedFont,\n        debug: t.debug,\n        graphemeImages: s,\n        canLoadAdditionalAssets: !!t.loadAdditionalAsset,\n        onNodeDetected: t.onNodeDetected,\n        getTwStyles: (p, m)=>{\n            let D = {\n                ...Ro({\n                    width: i,\n                    height: o,\n                    config: t.tailwindConfig\n                })([\n                    p\n                ])\n            };\n            return typeof D.lineHeight == \"number\" && (D.lineHeight = D.lineHeight / (+D.fontSize || m.fontSize || 16)), D.shadowColor && D.boxShadow && (D.boxShadow = D.boxShadow.replace(/rgba?\\([^)]+\\)/, D.shadowColor)), D;\n        }\n    }), f = (await l.next()).value;\n    if (t.loadAdditionalAsset && f.length) {\n        let p = jm(f), m = [], v = {};\n        await Promise.all(Object.entries(p).flatMap(([D, b])=>b.map((y)=>{\n                let F = `${D}_${y}`;\n                return a.has(F) ? null : (a.add(F), t.loadAdditionalAsset(D, y).then((x)=>{\n                    typeof x == \"string\" ? v[y] = x : x && (Array.isArray(x) ? m.push(...x) : m.push(x));\n                }));\n            }))), r.addFonts(m), Object.assign(s, v);\n    }\n    await l.next(), u.calculateLayout(i, o, n.DIRECTION_LTR);\n    let c = (await l.next([\n        0,\n        0\n    ])).value, d = u.getComputedWidth(), h = u.getComputedHeight();\n    return u.freeRecursive(), Vn({\n        width: d,\n        height: h,\n        content: c\n    });\n}\nfunction jm(e) {\n    let t = {}, n = {};\n    for (let { word: r, locale: i } of e){\n        let o = Wu(r, i).join(\"|\");\n        n[o] = n[o] || \"\", n[o] += r;\n    }\n    return Object.keys(n).forEach((r)=>{\n        t[r] = t[r] || [], r === \"emoji\" ? t[r].push(...Fl(be(n[r], \"grapheme\"))) : (t[r][0] = t[r][0] || \"\", t[r][0] += Fl(be(n[r], \"grapheme\", r === \"unknown\" ? void 0 : r)).join(\"\"));\n    }), t;\n}\nfunction Fl(e) {\n    return Array.from(new Set(e));\n}\n //# sourceMappingURL=index.wasm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/satori/dist/index.wasm.js\n");

/***/ })

};
;