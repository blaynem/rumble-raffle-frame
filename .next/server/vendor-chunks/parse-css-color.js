"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/parse-css-color";
exports.ids = ["vendor-chunks/parse-css-color"];
exports.modules = {

/***/ "(rsc)/./node_modules/parse-css-color/dist/index.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/parse-css-color/dist/index.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var color_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! color-name */ \"(rsc)/./node_modules/color-name/index.js\");\n/* harmony import */ var color_name__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(color_name__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var hex_rgb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hex-rgb */ \"(rsc)/./node_modules/hex-rgb/index.js\");\n/* harmony import */ var hex_rgb__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hex_rgb__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst pattern = /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\\b$/;\nvar hexRe = new RegExp(pattern, \"i\");\nconst float = \"-?\\\\d*(?:\\\\.\\\\d+)\";\nconst number = `(${float}?)`;\nconst percentage = `(${float}?%)`;\nconst numberOrPercentage = `(${float}?%?)`;\nconst pattern$1 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, \"\");\nvar hsl3Re = new RegExp(pattern$1);\nconst pattern$2 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, \"\");\nvar hsl4Re = new RegExp(pattern$2);\nconst pattern$3 = `^\n  rgba?\\\\(\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, \"\");\nvar rgb3NumberRe = new RegExp(pattern$3);\nconst pattern$4 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, \"\");\nvar rgb3PercentageRe = new RegExp(pattern$4);\nconst pattern$5 = `^\n  rgba?\\\\(\n    \\\\s*${number}\n    \\\\s+${number}\n    \\\\s+${number}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, \"\");\nvar rgb4NumberRe = new RegExp(pattern$5);\nconst pattern$6 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, \"\");\nvar rgb4PercentageRe = new RegExp(pattern$6);\nconst pattern$7 = /^transparent$/;\nvar transparentRe = new RegExp(pattern$7, \"i\");\nconst clamp = (num, min, max)=>Math.min(Math.max(min, num), max);\n/* 500 => 255, -10 => 0, 128 => 128 */ const parseRGB = (num)=>{\n    let n = num;\n    if (typeof n !== \"number\") n = n.endsWith(\"%\") ? parseFloat(n) * 255 / 100 : parseFloat(n);\n    return clamp(Math.round(n), 0, 255);\n};\n/* 200 => 100, -100 => 0, 50 => 50 */ const parsePercentage = (percentage)=>clamp(parseFloat(percentage), 0, 100);\n/* '50%' => 5.0, 200 => 1, -10 => 0 */ function parseAlpha(alpha) {\n    let a = alpha;\n    if (typeof a !== \"number\") a = a.endsWith(\"%\") ? parseFloat(a) / 100 : parseFloat(a);\n    return clamp(a, 0, 1);\n}\nfunction getHEX(hex) {\n    const [r, g, b, a] = hex_rgb__WEBPACK_IMPORTED_MODULE_1___default()(hex, {\n        format: \"array\"\n    });\n    return getRGB([\n        null,\n        ...[\n            r,\n            g,\n            b,\n            a\n        ]\n    ]);\n}\nfunction getHSL([, h, s, l, a = 1]) {\n    let hh = h;\n    if (hh.endsWith(\"turn\")) {\n        hh = parseFloat(hh) * 360 / 1;\n    } else if (hh.endsWith(\"rad\")) {\n        hh = Math.round(parseFloat(hh) * 180 / Math.PI);\n    } else {\n        hh = parseFloat(hh);\n    }\n    return {\n        type: \"hsl\",\n        values: [\n            hh,\n            parsePercentage(s),\n            parsePercentage(l)\n        ],\n        alpha: parseAlpha(a === null ? 1 : a)\n    };\n}\nfunction getRGB([, r, g, b, a = 1]) {\n    return {\n        type: \"rgb\",\n        values: [\n            r,\n            g,\n            b\n        ].map(parseRGB),\n        alpha: parseAlpha(a === null ? 1 : a)\n    };\n}\n/**\n * parse-css-color\n * @version v0.2.1\n * @link http://github.com/noeldelgado/parse-css-color/\n * @license MIT\n */ const parseCSSColor = (str)=>{\n    if (typeof str !== \"string\") return null;\n    const hex = hexRe.exec(str);\n    if (hex) return getHEX(hex[0]);\n    const hsl = hsl4Re.exec(str) || hsl3Re.exec(str);\n    if (hsl) return getHSL(hsl);\n    const rgb = rgb4NumberRe.exec(str) || rgb4PercentageRe.exec(str) || rgb3NumberRe.exec(str) || rgb3PercentageRe.exec(str);\n    if (rgb) return getRGB(rgb);\n    if (transparentRe.exec(str)) return getRGB([\n        null,\n        0,\n        0,\n        0,\n        0\n    ]);\n    const cn = (color_name__WEBPACK_IMPORTED_MODULE_0___default())[str.toLowerCase()];\n    if (cn) return getRGB([\n        null,\n        cn[0],\n        cn[1],\n        cn[2],\n        1\n    ]);\n    return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseCSSColor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse-css-color/dist/index.esm.js\n");

/***/ })

};
;