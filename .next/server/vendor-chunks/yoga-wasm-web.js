"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/yoga-wasm-web";
exports.ids = ["vendor-chunks/yoga-wasm-web"];
exports.modules = {

/***/ "(rsc)/./node_modules/yoga-wasm-web/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/yoga-wasm-web/dist/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALIGN_AUTO: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.A),\n/* harmony export */   ALIGN_BASELINE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   ALIGN_CENTER: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   ALIGN_FLEX_END: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   ALIGN_FLEX_START: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   ALIGN_SPACE_AROUND: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.g),\n/* harmony export */   ALIGN_SPACE_BETWEEN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   ALIGN_STRETCH: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   DIMENSION_HEIGHT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   DIMENSION_WIDTH: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.D),\n/* harmony export */   DIRECTION_INHERIT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   DIRECTION_LTR: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.j),\n/* harmony export */   DIRECTION_RTL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   DISPLAY_FLEX: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.l),\n/* harmony export */   DISPLAY_NONE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.m),\n/* harmony export */   EDGE_ALL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   EDGE_BOTTOM: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   EDGE_END: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.r),\n/* harmony export */   EDGE_HORIZONTAL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.s),\n/* harmony export */   EDGE_LEFT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.E),\n/* harmony export */   EDGE_RIGHT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.o),\n/* harmony export */   EDGE_START: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.q),\n/* harmony export */   EDGE_TOP: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.n),\n/* harmony export */   EDGE_VERTICAL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.t),\n/* harmony export */   EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.x),\n/* harmony export */   EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.y),\n/* harmony export */   EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.v),\n/* harmony export */   FLEX_DIRECTION_COLUMN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.F),\n/* harmony export */   FLEX_DIRECTION_COLUMN_REVERSE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.z),\n/* harmony export */   FLEX_DIRECTION_ROW: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.B),\n/* harmony export */   FLEX_DIRECTION_ROW_REVERSE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.C),\n/* harmony export */   GUTTER_ALL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.I),\n/* harmony export */   GUTTER_COLUMN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.G),\n/* harmony export */   GUTTER_ROW: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.H),\n/* harmony export */   JUSTIFY_CENTER: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.K),\n/* harmony export */   JUSTIFY_FLEX_END: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.L),\n/* harmony export */   JUSTIFY_FLEX_START: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.J),\n/* harmony export */   JUSTIFY_SPACE_AROUND: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.N),\n/* harmony export */   JUSTIFY_SPACE_BETWEEN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.M),\n/* harmony export */   JUSTIFY_SPACE_EVENLY: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.O),\n/* harmony export */   LOG_LEVEL_DEBUG: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.S),\n/* harmony export */   LOG_LEVEL_ERROR: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.P),\n/* harmony export */   LOG_LEVEL_FATAL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.U),\n/* harmony export */   LOG_LEVEL_INFO: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.R),\n/* harmony export */   LOG_LEVEL_VERBOSE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.T),\n/* harmony export */   LOG_LEVEL_WARN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.Q),\n/* harmony export */   MEASURE_MODE_AT_MOST: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.X),\n/* harmony export */   MEASURE_MODE_EXACTLY: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.W),\n/* harmony export */   MEASURE_MODE_UNDEFINED: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.V),\n/* harmony export */   NODE_TYPE_DEFAULT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.Y),\n/* harmony export */   NODE_TYPE_TEXT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.Z),\n/* harmony export */   OVERFLOW_HIDDEN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.$),\n/* harmony export */   OVERFLOW_SCROLL: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a0),\n/* harmony export */   OVERFLOW_VISIBLE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__._),\n/* harmony export */   POSITION_TYPE_ABSOLUTE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a3),\n/* harmony export */   POSITION_TYPE_RELATIVE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a2),\n/* harmony export */   POSITION_TYPE_STATIC: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a1),\n/* harmony export */   PRINT_OPTIONS_CHILDREN: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a6),\n/* harmony export */   PRINT_OPTIONS_LAYOUT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a4),\n/* harmony export */   PRINT_OPTIONS_STYLE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a5),\n/* harmony export */   UNIT_AUTO: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.aa),\n/* harmony export */   UNIT_PERCENT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a9),\n/* harmony export */   UNIT_POINT: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a8),\n/* harmony export */   UNIT_UNDEFINED: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.a7),\n/* harmony export */   WRAP_NO_WRAP: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.ab),\n/* harmony export */   WRAP_WRAP: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.ac),\n/* harmony export */   WRAP_WRAP_REVERSE: () => (/* reexport safe */ _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.ad),\n/* harmony export */   \"default\": () => (/* binding */ initYoga),\n/* harmony export */   initStreaming: () => (/* binding */ initStreaming)\n/* harmony export */ });\n/* harmony import */ var _wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapAsm-f766f97f.js */ \"(rsc)/./node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js\");\n\n\nvar yoga = (()=>{\n    var n = \"undefined\" != typeof document && document.currentScript ? document.currentScript.src : void 0;\n    return function(t = {}) {\n        u || (u = void 0 !== t ? t : {}), u.ready = new Promise(function(n, t) {\n            c = n, f = t;\n        });\n        var r, e, a = Object.assign({}, u), i = \"\";\n        \"undefined\" != typeof document && document.currentScript && (i = document.currentScript.src), n && (i = n), i = 0 !== i.indexOf(\"blob:\") ? i.substr(0, i.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1) : \"\";\n        var o = console.log.bind(console), s = console.warn.bind(console);\n        Object.assign(u, a), a = null, \"object\" != typeof WebAssembly && w(\"no native wasm support detected\");\n        var u, c, f, l, h = !1;\n        function p(n, t, r) {\n            r = t + r;\n            for(var e = \"\"; !(t >= r);){\n                var a = n[t++];\n                if (!a) break;\n                if (128 & a) {\n                    var i = 63 & n[t++];\n                    if (192 == (224 & a)) e += String.fromCharCode((31 & a) << 6 | i);\n                    else {\n                        var o = 63 & n[t++];\n                        65536 > (a = 224 == (240 & a) ? (15 & a) << 12 | i << 6 | o : (7 & a) << 18 | i << 12 | o << 6 | 63 & n[t++]) ? e += String.fromCharCode(a) : (a -= 65536, e += String.fromCharCode(55296 | a >> 10, 56320 | 1023 & a));\n                    }\n                } else e += String.fromCharCode(a);\n            }\n            return e;\n        }\n        function v() {\n            var n = l.buffer;\n            u.HEAP8 = d = new Int8Array(n), u.HEAP16 = m = new Int16Array(n), u.HEAP32 = g = new Int32Array(n), u.HEAPU8 = y = new Uint8Array(n), u.HEAPU16 = E = new Uint16Array(n), u.HEAPU32 = _ = new Uint32Array(n), u.HEAPF32 = T = new Float32Array(n), u.HEAPF64 = L = new Float64Array(n);\n        }\n        var d, y, m, E, g, _, T, L, A, O = [], P = [], b = [], N = 0, I = null;\n        function w(n) {\n            throw s(n = \"Aborted(\" + n + \")\"), h = !0, f(n = new WebAssembly.RuntimeError(n + \". Build with -sASSERTIONS for more info.\")), n;\n        }\n        function S() {\n            return r.startsWith(\"data:application/octet-stream;base64,\");\n        }\n        function R() {\n            try {\n                throw \"both async and sync fetching of the wasm failed\";\n            } catch (n) {\n                w(n);\n            }\n        }\n        function C(n) {\n            for(; 0 < n.length;)n.shift()(u);\n        }\n        function W(n) {\n            if (void 0 === n) return \"_unknown\";\n            var t = (n = n.replace(/[^a-zA-Z0-9_]/g, \"$\")).charCodeAt(0);\n            return 48 <= t && 57 >= t ? \"_\" + n : n;\n        }\n        function U(n, t) {\n            return n = W(n), function() {\n                return t.apply(this, arguments);\n            };\n        }\n        r = \"yoga.wasm\", S() || (r = i + r);\n        var M = [\n            {},\n            {\n                value: void 0\n            },\n            {\n                value: null\n            },\n            {\n                value: !0\n            },\n            {\n                value: !1\n            }\n        ], F = [];\n        function D(n) {\n            var t = Error, r = U(n, function(t) {\n                this.name = n, this.message = t, void 0 !== (t = Error(t).stack) && (this.stack = this.toString() + \"\\n\" + t.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n            });\n            return r.prototype = Object.create(t.prototype), r.prototype.constructor = r, r.prototype.toString = function() {\n                return void 0 === this.message ? this.name : this.name + \": \" + this.message;\n            }, r;\n        }\n        var k = void 0;\n        function V(n) {\n            throw new k(n);\n        }\n        var j = (n)=>(n || V(\"Cannot use deleted val. handle = \" + n), M[n].value), G = (n)=>{\n            switch(n){\n                case void 0:\n                    return 1;\n                case null:\n                    return 2;\n                case !0:\n                    return 3;\n                case !1:\n                    return 4;\n                default:\n                    var t = F.length ? F.pop() : M.length;\n                    return M[t] = {\n                        fa: 1,\n                        value: n\n                    }, t;\n            }\n        }, Y = void 0, X = void 0;\n        function B(n) {\n            for(var t = \"\"; y[n];)t += X[y[n++]];\n            return t;\n        }\n        var H = [];\n        function x() {\n            for(; H.length;){\n                var n = H.pop();\n                n.L.Z = !1, n.delete();\n            }\n        }\n        var z = void 0, $ = {};\n        function Z(n, t) {\n            for(void 0 === t && V(\"ptr should not be undefined\"); n.P;)t = n.aa(t), n = n.P;\n            return t;\n        }\n        var J = {};\n        function q(n) {\n            var t = B(n = nz(n));\n            return nZ(n), t;\n        }\n        function K(n, t) {\n            var r = J[n];\n            return void 0 === r && V(t + \" has unknown type \" + q(n)), r;\n        }\n        function Q() {}\n        var nn = !1;\n        function nt(n) {\n            --n.count.value, 0 === n.count.value && (n.S ? n.T.V(n.S) : n.O.M.V(n.N));\n        }\n        var nr = {}, ne = void 0;\n        function na(n) {\n            throw new ne(n);\n        }\n        function ni(n, t) {\n            return t.O && t.N || na(\"makeClassHandle requires ptr and ptrType\"), !!t.T != !!t.S && na(\"Both smartPtrType and smartPtr must be specified\"), t.count = {\n                value: 1\n            }, no(Object.create(n, {\n                L: {\n                    value: t\n                }\n            }));\n        }\n        function no(n) {\n            return \"undefined\" == typeof FinalizationRegistry ? (no = (n)=>n, n) : (nn = new FinalizationRegistry((n)=>{\n                nt(n.L);\n            }), no = (n)=>{\n                var t = n.L;\n                return t.S && nn.register(n, {\n                    L: t\n                }, n), n;\n            }, Q = (n)=>{\n                nn.unregister(n);\n            }, no(n));\n        }\n        var ns = {};\n        function nu(n) {\n            for(; n.length;){\n                var t = n.pop();\n                n.pop()(t);\n            }\n        }\n        function nc(n) {\n            return this.fromWireType(g[n >> 2]);\n        }\n        var nf = {}, nl = {};\n        function nh(n, t, r) {\n            function e(t) {\n                (t = r(t)).length !== n.length && na(\"Mismatched type converter count\");\n                for(var e = 0; e < n.length; ++e)nv(n[e], t[e]);\n            }\n            n.forEach(function(n) {\n                nl[n] = t;\n            });\n            var a = Array(t.length), i = [], o = 0;\n            t.forEach((n, t)=>{\n                J.hasOwnProperty(n) ? a[t] = J[n] : (i.push(n), nf.hasOwnProperty(n) || (nf[n] = []), nf[n].push(()=>{\n                    a[t] = J[n], ++o === i.length && e(a);\n                }));\n            }), 0 === i.length && e(a);\n        }\n        function np(n) {\n            switch(n){\n                case 1:\n                    return 0;\n                case 2:\n                    return 1;\n                case 4:\n                    return 2;\n                case 8:\n                    return 3;\n                default:\n                    throw TypeError(\"Unknown type size: \" + n);\n            }\n        }\n        function nv(n, t, r = {}) {\n            if (!(\"argPackAdvance\" in t)) throw TypeError(\"registerType registeredInstance requires argPackAdvance\");\n            var e = t.name;\n            if (n || V('type \"' + e + '\" must have a positive integer typeid pointer'), J.hasOwnProperty(n)) {\n                if (r.ta) return;\n                V(\"Cannot register type '\" + e + \"' twice\");\n            }\n            J[n] = t, delete nl[n], nf.hasOwnProperty(n) && (t = nf[n], delete nf[n], t.forEach((n)=>n()));\n        }\n        function nd(n) {\n            V(n.L.O.M.name + \" instance already deleted\");\n        }\n        function ny() {}\n        function nm(n, t, r) {\n            if (void 0 === n[t].R) {\n                var e = n[t];\n                n[t] = function() {\n                    return n[t].R.hasOwnProperty(arguments.length) || V(\"Function '\" + r + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + n[t].R + \")!\"), n[t].R[arguments.length].apply(this, arguments);\n                }, n[t].R = [], n[t].R[e.Y] = e;\n            }\n        }\n        function nE(n, t, r, e, a, i, o, s) {\n            this.name = n, this.constructor = t, this.W = r, this.V = e, this.P = a, this.oa = i, this.aa = o, this.ma = s, this.ia = [];\n        }\n        function ng(n, t, r) {\n            for(; t !== r;)t.aa || V(\"Expected null or instance of \" + r.name + \", got an instance of \" + t.name), n = t.aa(n), t = t.P;\n            return n;\n        }\n        function n_(n, t) {\n            return null === t ? (this.da && V(\"null is not a valid \" + this.name), 0) : (t.L || V('Cannot pass \"' + nC(t) + '\" as a ' + this.name), t.L.N || V(\"Cannot pass deleted object as a pointer of type \" + this.name), ng(t.L.N, t.L.O.M, this.M));\n        }\n        function nT(n, t) {\n            if (null === t) {\n                if (this.da && V(\"null is not a valid \" + this.name), this.ca) {\n                    var r = this.ea();\n                    return null !== n && n.push(this.V, r), r;\n                }\n                return 0;\n            }\n            if (t.L || V('Cannot pass \"' + nC(t) + '\" as a ' + this.name), t.L.N || V(\"Cannot pass deleted object as a pointer of type \" + this.name), !this.ba && t.L.O.ba && V(\"Cannot convert argument of type \" + (t.L.T ? t.L.T.name : t.L.O.name) + \" to parameter type \" + this.name), r = ng(t.L.N, t.L.O.M, this.M), this.ca) switch(void 0 === t.L.S && V(\"Passing raw pointer to smart pointer is illegal\"), this.Aa){\n                case 0:\n                    t.L.T === this ? r = t.L.S : V(\"Cannot convert argument of type \" + (t.L.T ? t.L.T.name : t.L.O.name) + \" to parameter type \" + this.name);\n                    break;\n                case 1:\n                    r = t.L.S;\n                    break;\n                case 2:\n                    if (t.L.T === this) r = t.L.S;\n                    else {\n                        var e = t.clone();\n                        r = this.wa(r, G(function() {\n                            e.delete();\n                        })), null !== n && n.push(this.V, r);\n                    }\n                    break;\n                default:\n                    V(\"Unsupporting sharing policy\");\n            }\n            return r;\n        }\n        function nL(n, t) {\n            return null === t ? (this.da && V(\"null is not a valid \" + this.name), 0) : (t.L || V('Cannot pass \"' + nC(t) + '\" as a ' + this.name), t.L.N || V(\"Cannot pass deleted object as a pointer of type \" + this.name), t.L.O.ba && V(\"Cannot convert argument of type \" + t.L.O.name + \" to parameter type \" + this.name), ng(t.L.N, t.L.O.M, this.M));\n        }\n        function nA(n, t, r, e) {\n            this.name = n, this.M = t, this.da = r, this.ba = e, this.ca = !1, this.V = this.wa = this.ea = this.ja = this.Aa = this.va = void 0, void 0 !== t.P ? this.toWireType = nT : (this.toWireType = e ? n_ : nL, this.U = null);\n        }\n        var nO = [];\n        function nP(n) {\n            var t = nO[n];\n            return t || (n >= nO.length && (nO.length = n + 1), nO[n] = t = A.get(n)), t;\n        }\n        function nb(n, t) {\n            var r, e, a = (n = B(n)).includes(\"j\") ? (r = n, e = [], function() {\n                if (e.length = 0, Object.assign(e, arguments), r.includes(\"j\")) {\n                    var n = u[\"dynCall_\" + r];\n                    n = e && e.length ? n.apply(null, [\n                        t\n                    ].concat(e)) : n.call(null, t);\n                } else n = nP(t).apply(null, e);\n                return n;\n            }) : nP(t);\n            return \"function\" != typeof a && V(\"unknown function pointer with signature \" + n + \": \" + t), a;\n        }\n        var nN = void 0;\n        function nI(n, t) {\n            var r = [], e = {};\n            throw t.forEach(function n(t) {\n                e[t] || J[t] || (nl[t] ? nl[t].forEach(n) : (r.push(t), e[t] = !0));\n            }), new nN(n + \": \" + r.map(q).join([\n                \", \"\n            ]));\n        }\n        function nw(n, t, r, e, a) {\n            var i = t.length;\n            2 > i && V(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n            var o = null !== t[1] && null !== r, s = !1;\n            for(r = 1; r < t.length; ++r)if (null !== t[r] && void 0 === t[r].U) {\n                s = !0;\n                break;\n            }\n            var u = \"void\" !== t[0].name, c = i - 2, f = Array(c), l = [], h = [];\n            return function() {\n                if (arguments.length !== c && V(\"function \" + n + \" called with \" + arguments.length + \" arguments, expected \" + c + \" args!\"), h.length = 0, l.length = o ? 2 : 1, l[0] = a, o) {\n                    var r = t[1].toWireType(h, this);\n                    l[1] = r;\n                }\n                for(var i = 0; i < c; ++i)f[i] = t[i + 2].toWireType(h, arguments[i]), l.push(f[i]);\n                if (i = e.apply(null, l), s) nu(h);\n                else for(var p = o ? 1 : 2; p < t.length; p++){\n                    var v = 1 === p ? r : f[p - 2];\n                    null !== t[p].U && t[p].U(v);\n                }\n                return u ? t[0].fromWireType(i) : void 0;\n            };\n        }\n        function nS(n, t) {\n            for(var r = [], e = 0; e < n; e++)r.push(_[t + 4 * e >> 2]);\n            return r;\n        }\n        function nR(n) {\n            4 < n && 0 == --M[n].fa && (M[n] = void 0, F.push(n));\n        }\n        function nC(n) {\n            if (null === n) return \"null\";\n            var t = typeof n;\n            return \"object\" === t || \"array\" === t || \"function\" === t ? n.toString() : \"\" + n;\n        }\n        function nW(n, t) {\n            for(var r = \"\", e = 0; !(e >= t / 2); ++e){\n                var a = m[n + 2 * e >> 1];\n                if (0 == a) break;\n                r += String.fromCharCode(a);\n            }\n            return r;\n        }\n        function nU(n, t, r) {\n            if (void 0 === r && (r = 2147483647), 2 > r) return 0;\n            r -= 2;\n            var e = t;\n            r = r < 2 * n.length ? r / 2 : n.length;\n            for(var a = 0; a < r; ++a)m[t >> 1] = n.charCodeAt(a), t += 2;\n            return m[t >> 1] = 0, t - e;\n        }\n        function nM(n) {\n            return 2 * n.length;\n        }\n        function nF(n, t) {\n            for(var r = 0, e = \"\"; !(r >= t / 4);){\n                var a = g[n + 4 * r >> 2];\n                if (0 == a) break;\n                ++r, 65536 <= a ? (a -= 65536, e += String.fromCharCode(55296 | a >> 10, 56320 | 1023 & a)) : e += String.fromCharCode(a);\n            }\n            return e;\n        }\n        function nD(n, t, r) {\n            if (void 0 === r && (r = 2147483647), 4 > r) return 0;\n            var e = t;\n            r = e + r - 4;\n            for(var a = 0; a < n.length; ++a){\n                var i = n.charCodeAt(a);\n                if (55296 <= i && 57343 >= i && (i = 65536 + ((1023 & i) << 10) | 1023 & n.charCodeAt(++a)), g[t >> 2] = i, (t += 4) + 4 > r) break;\n            }\n            return g[t >> 2] = 0, t - e;\n        }\n        function nk(n) {\n            for(var t = 0, r = 0; r < n.length; ++r){\n                var e = n.charCodeAt(r);\n                55296 <= e && 57343 >= e && ++r, t += 4;\n            }\n            return t;\n        }\n        var nV = {};\n        function nj(n) {\n            var t = nV[n];\n            return void 0 === t ? B(n) : t;\n        }\n        var nG = [], nY = [], nX = [\n            null,\n            [],\n            []\n        ];\n        k = u.BindingError = D(\"BindingError\"), u.count_emval_handles = function() {\n            for(var n = 0, t = 5; t < M.length; ++t)void 0 !== M[t] && ++n;\n            return n;\n        }, u.get_first_emval = function() {\n            for(var n = 5; n < M.length; ++n)if (void 0 !== M[n]) return M[n];\n            return null;\n        }, Y = u.PureVirtualError = D(\"PureVirtualError\");\n        for(var nB = Array(256), nH = 0; 256 > nH; ++nH)nB[nH] = String.fromCharCode(nH);\n        X = nB, u.getInheritedInstanceCount = function() {\n            return Object.keys($).length;\n        }, u.getLiveInheritedInstances = function() {\n            var n, t = [];\n            for(n in $)$.hasOwnProperty(n) && t.push($[n]);\n            return t;\n        }, u.flushPendingDeletes = x, u.setDelayFunction = function(n) {\n            z = n, H.length && z && z(x);\n        }, ne = u.InternalError = D(\"InternalError\"), ny.prototype.isAliasOf = function(n) {\n            if (!(this instanceof ny && n instanceof ny)) return !1;\n            var t = this.L.O.M, r = this.L.N, e = n.L.O.M;\n            for(n = n.L.N; t.P;)r = t.aa(r), t = t.P;\n            for(; e.P;)n = e.aa(n), e = e.P;\n            return t === e && r === n;\n        }, ny.prototype.clone = function() {\n            if (this.L.N || nd(this), this.L.$) return this.L.count.value += 1, this;\n            var n = no, t = Object, r = t.create, e = Object.getPrototypeOf(this), a = this.L;\n            return n = n(r.call(t, e, {\n                L: {\n                    value: {\n                        count: a.count,\n                        Z: a.Z,\n                        $: a.$,\n                        N: a.N,\n                        O: a.O,\n                        S: a.S,\n                        T: a.T\n                    }\n                }\n            })), n.L.count.value += 1, n.L.Z = !1, n;\n        }, ny.prototype.delete = function() {\n            this.L.N || nd(this), this.L.Z && !this.L.$ && V(\"Object already scheduled for deletion\"), Q(this), nt(this.L), this.L.$ || (this.L.S = void 0, this.L.N = void 0);\n        }, ny.prototype.isDeleted = function() {\n            return !this.L.N;\n        }, ny.prototype.deleteLater = function() {\n            return this.L.N || nd(this), this.L.Z && !this.L.$ && V(\"Object already scheduled for deletion\"), H.push(this), 1 === H.length && z && z(x), this.L.Z = !0, this;\n        }, nA.prototype.pa = function(n) {\n            return this.ja && (n = this.ja(n)), n;\n        }, nA.prototype.ga = function(n) {\n            this.V && this.V(n);\n        }, nA.prototype.argPackAdvance = 8, nA.prototype.readValueFromPointer = nc, nA.prototype.deleteObject = function(n) {\n            null !== n && n.delete();\n        }, nA.prototype.fromWireType = function(n) {\n            function t() {\n                return this.ca ? ni(this.M.W, {\n                    O: this.va,\n                    N: e,\n                    T: this,\n                    S: n\n                }) : ni(this.M.W, {\n                    O: this,\n                    N: n\n                });\n            }\n            var r, e = this.pa(n);\n            if (!e) return this.ga(n), null;\n            var a = $[Z(this.M, e)];\n            if (void 0 !== a) return 0 === a.L.count.value ? (a.L.N = e, a.L.S = n, a.clone()) : (a = a.clone(), this.ga(n), a);\n            if (!(a = nr[a = this.M.oa(e)])) return t.call(this);\n            a = this.ba ? a.ka : a.pointerType;\n            var i = function n(t, r, e) {\n                return r === e ? t : void 0 === e.P ? null : null === (t = n(t, r, e.P)) ? null : e.ma(t);\n            }(e, this.M, a.M);\n            return null === i ? t.call(this) : this.ca ? ni(a.M.W, {\n                O: a,\n                N: i,\n                T: this,\n                S: n\n            }) : ni(a.M.W, {\n                O: a,\n                N: i\n            });\n        }, nN = u.UnboundTypeError = D(\"UnboundTypeError\");\n        var nx = {\n            q: function(n, t, r) {\n                n = B(n), t = K(t, \"wrapper\"), r = j(r);\n                var e = [].slice, a = t.M, i = a.W, o = a.P.W, s = a.P.constructor;\n                for(var u in n = U(n, function() {\n                    a.P.ia.forEach((function(n) {\n                        if (this[n] === o[n]) throw new Y(\"Pure virtual function \" + n + \" must be implemented in JavaScript\");\n                    }).bind(this)), Object.defineProperty(this, \"__parent\", {\n                        value: i\n                    }), this.__construct.apply(this, e.call(arguments));\n                }), i.__construct = function() {\n                    this === i && V(\"Pass correct 'this' to __construct\");\n                    var n = s.implement.apply(void 0, [\n                        this\n                    ].concat(e.call(arguments)));\n                    Q(n);\n                    var t = n.L;\n                    n.notifyOnDestruction(), t.$ = !0, Object.defineProperties(this, {\n                        L: {\n                            value: t\n                        }\n                    }), no(this), n = Z(a, n = t.N), $.hasOwnProperty(n) ? V(\"Tried to register registered instance: \" + n) : $[n] = this;\n                }, i.__destruct = function() {\n                    this === i && V(\"Pass correct 'this' to __destruct\"), Q(this);\n                    var n = this.L.N;\n                    n = Z(a, n), $.hasOwnProperty(n) ? delete $[n] : V(\"Tried to unregister unregistered instance: \" + n);\n                }, n.prototype = Object.create(i), r)n.prototype[u] = r[u];\n                return G(n);\n            },\n            l: function(n) {\n                var t = ns[n];\n                delete ns[n];\n                var r = t.ea, e = t.V, a = t.ha;\n                nh([\n                    n\n                ], a.map((n)=>n.sa).concat(a.map((n)=>n.ya)), (n)=>{\n                    var i = {};\n                    return a.forEach((t, r)=>{\n                        var e = n[r], o = t.qa, s = t.ra, u = n[r + a.length], c = t.xa, f = t.za;\n                        i[t.na] = {\n                            read: (n)=>e.fromWireType(o(s, n)),\n                            write: (n, t)=>{\n                                var r = [];\n                                c(f, n, u.toWireType(r, t)), nu(r);\n                            }\n                        };\n                    }), [\n                        {\n                            name: t.name,\n                            fromWireType: function(n) {\n                                var t, r = {};\n                                for(t in i)r[t] = i[t].read(n);\n                                return e(n), r;\n                            },\n                            toWireType: function(n, t) {\n                                for(var a in i)if (!(a in t)) throw TypeError('Missing field:  \"' + a + '\"');\n                                var o = r();\n                                for(a in i)i[a].write(o, t[a]);\n                                return null !== n && n.push(e, o), o;\n                            },\n                            argPackAdvance: 8,\n                            readValueFromPointer: nc,\n                            U: e\n                        }\n                    ];\n                });\n            },\n            v: function() {},\n            B: function(n, t, r, e, a) {\n                var i = np(r);\n                nv(n, {\n                    name: t = B(t),\n                    fromWireType: function(n) {\n                        return !!n;\n                    },\n                    toWireType: function(n, t) {\n                        return t ? e : a;\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: function(n) {\n                        if (1 === r) var e = d;\n                        else if (2 === r) e = m;\n                        else if (4 === r) e = g;\n                        else throw TypeError(\"Unknown boolean type size: \" + t);\n                        return this.fromWireType(e[n >> i]);\n                    },\n                    U: null\n                });\n            },\n            h: function(n, t, r, e, a, i, o, s, c, f, l, h, p) {\n                l = B(l), i = nb(a, i), s && (s = nb(o, s)), f && (f = nb(c, f)), p = nb(h, p);\n                var v, d = W(l);\n                v = function() {\n                    nI(\"Cannot construct \" + l + \" due to unbound types\", [\n                        e\n                    ]);\n                }, u.hasOwnProperty(d) ? (V(\"Cannot register public name '\" + d + \"' twice\"), nm(u, d, d), u.hasOwnProperty(void 0) && V(\"Cannot register multiple overloads of a function with the same number of arguments (undefined)!\"), u[d].R[void 0] = v) : u[d] = v, nh([\n                    n,\n                    t,\n                    r\n                ], e ? [\n                    e\n                ] : [], function(t) {\n                    if (t = t[0], e) var r, a = t.M, o = a.W;\n                    else o = ny.prototype;\n                    t = U(d, function() {\n                        if (Object.getPrototypeOf(this) !== c) throw new k(\"Use 'new' to construct \" + l);\n                        if (void 0 === h.X) throw new k(l + \" has no accessible constructor\");\n                        var n = h.X[arguments.length];\n                        if (void 0 === n) throw new k(\"Tried to invoke ctor of \" + l + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(h.X).toString() + \") parameters instead!\");\n                        return n.apply(this, arguments);\n                    });\n                    var c = Object.create(o, {\n                        constructor: {\n                            value: t\n                        }\n                    });\n                    t.prototype = c;\n                    var h = new nE(l, t, c, p, a, i, s, f);\n                    a = new nA(l, h, !0, !1), o = new nA(l + \"*\", h, !1, !1);\n                    var v = new nA(l + \" const*\", h, !1, !0);\n                    return nr[n] = {\n                        pointerType: o,\n                        ka: v\n                    }, r = t, u.hasOwnProperty(d) || na(\"Replacing nonexistant public symbol\"), u[d] = r, u[d].Y = void 0, [\n                        a,\n                        o,\n                        v\n                    ];\n                });\n            },\n            d: function(n, t, r, e, a, i, o) {\n                var s = nS(r, e);\n                t = B(t), i = nb(a, i), nh([], [\n                    n\n                ], function(n) {\n                    function e() {\n                        nI(\"Cannot call \" + a + \" due to unbound types\", s);\n                    }\n                    var a = (n = n[0]).name + \".\" + t;\n                    t.startsWith(\"@@\") && (t = Symbol[t.substring(2)]);\n                    var u = n.M.constructor;\n                    return void 0 === u[t] ? (e.Y = r - 1, u[t] = e) : (nm(u, t, a), u[t].R[r - 1] = e), nh([], s, function(n) {\n                        return n = nw(a, [\n                            n[0],\n                            null\n                        ].concat(n.slice(1)), null, i, o), void 0 === u[t].R ? (n.Y = r - 1, u[t] = n) : u[t].R[r - 1] = n, [];\n                    }), [];\n                });\n            },\n            p: function(n, t, r, e, a, i) {\n                0 < t || w();\n                var o = nS(t, r);\n                a = nb(e, a), nh([], [\n                    n\n                ], function(n) {\n                    var r = \"constructor \" + (n = n[0]).name;\n                    if (void 0 === n.M.X && (n.M.X = []), void 0 !== n.M.X[t - 1]) throw new k(\"Cannot register multiple constructors with identical number of parameters (\" + (t - 1) + \") for class '\" + n.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n                    return n.M.X[t - 1] = ()=>{\n                        nI(\"Cannot construct \" + n.name + \" due to unbound types\", o);\n                    }, nh([], o, function(e) {\n                        return e.splice(1, 0, null), n.M.X[t - 1] = nw(r, e, null, a, i), [];\n                    }), [];\n                });\n            },\n            a: function(n, t, r, e, a, i, o, s) {\n                var u = nS(r, e);\n                t = B(t), i = nb(a, i), nh([], [\n                    n\n                ], function(n) {\n                    function e() {\n                        nI(\"Cannot call \" + a + \" due to unbound types\", u);\n                    }\n                    var a = (n = n[0]).name + \".\" + t;\n                    t.startsWith(\"@@\") && (t = Symbol[t.substring(2)]), s && n.M.ia.push(t);\n                    var c = n.M.W, f = c[t];\n                    return void 0 === f || void 0 === f.R && f.className !== n.name && f.Y === r - 2 ? (e.Y = r - 2, e.className = n.name, c[t] = e) : (nm(c, t, a), c[t].R[r - 2] = e), nh([], u, function(e) {\n                        return e = nw(a, e, n, i, o), void 0 === c[t].R ? (e.Y = r - 2, c[t] = e) : c[t].R[r - 2] = e, [];\n                    }), [];\n                });\n            },\n            A: function(n, t) {\n                nv(n, {\n                    name: t = B(t),\n                    fromWireType: function(n) {\n                        var t = j(n);\n                        return nR(n), t;\n                    },\n                    toWireType: function(n, t) {\n                        return G(t);\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: nc,\n                    U: null\n                });\n            },\n            n: function(n, t, r) {\n                r = np(r), nv(n, {\n                    name: t = B(t),\n                    fromWireType: function(n) {\n                        return n;\n                    },\n                    toWireType: function(n, t) {\n                        return t;\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: function(n, t) {\n                        switch(t){\n                            case 2:\n                                return function(n) {\n                                    return this.fromWireType(T[n >> 2]);\n                                };\n                            case 3:\n                                return function(n) {\n                                    return this.fromWireType(L[n >> 3]);\n                                };\n                            default:\n                                throw TypeError(\"Unknown float type: \" + n);\n                        }\n                    }(t, r),\n                    U: null\n                });\n            },\n            e: function(n, t, r, e, a) {\n                t = B(t), -1 === a && (a = 4294967295), a = np(r);\n                var i = (n)=>n;\n                if (0 === e) {\n                    var o = 32 - 8 * r;\n                    i = (n)=>n << o >>> o;\n                }\n                r = t.includes(\"unsigned\") ? function(n, t) {\n                    return t >>> 0;\n                } : function(n, t) {\n                    return t;\n                }, nv(n, {\n                    name: t,\n                    fromWireType: i,\n                    toWireType: r,\n                    argPackAdvance: 8,\n                    readValueFromPointer: function(n, t, r) {\n                        switch(t){\n                            case 0:\n                                return r ? function(n) {\n                                    return d[n];\n                                } : function(n) {\n                                    return y[n];\n                                };\n                            case 1:\n                                return r ? function(n) {\n                                    return m[n >> 1];\n                                } : function(n) {\n                                    return E[n >> 1];\n                                };\n                            case 2:\n                                return r ? function(n) {\n                                    return g[n >> 2];\n                                } : function(n) {\n                                    return _[n >> 2];\n                                };\n                            default:\n                                throw TypeError(\"Unknown integer type: \" + n);\n                        }\n                    }(t, a, 0 !== e),\n                    U: null\n                });\n            },\n            b: function(n, t, r) {\n                function e(n) {\n                    n >>= 2;\n                    var t = _;\n                    return new a(t.buffer, t[n + 1], t[n]);\n                }\n                var a = [\n                    Int8Array,\n                    Uint8Array,\n                    Int16Array,\n                    Uint16Array,\n                    Int32Array,\n                    Uint32Array,\n                    Float32Array,\n                    Float64Array\n                ][t];\n                nv(n, {\n                    name: r = B(r),\n                    fromWireType: e,\n                    argPackAdvance: 8,\n                    readValueFromPointer: e\n                }, {\n                    ta: !0\n                });\n            },\n            o: function(n, t) {\n                var r = \"std::string\" === (t = B(t));\n                nv(n, {\n                    name: t,\n                    fromWireType: function(n) {\n                        var t = _[n >> 2], e = n + 4;\n                        if (r) for(var a = e, i = 0; i <= t; ++i){\n                            var o = e + i;\n                            if (i == t || 0 == y[o]) {\n                                if (a = a ? p(y, a, o - a) : \"\", void 0 === s) var s = a;\n                                else s += \"\\x00\" + a;\n                                a = o + 1;\n                            }\n                        }\n                        else {\n                            for(i = 0, s = Array(t); i < t; ++i)s[i] = String.fromCharCode(y[e + i]);\n                            s = s.join(\"\");\n                        }\n                        return nZ(n), s;\n                    },\n                    toWireType: function(n, t) {\n                        t instanceof ArrayBuffer && (t = new Uint8Array(t));\n                        var e, a = \"string\" == typeof t;\n                        if (a || t instanceof Uint8Array || t instanceof Uint8ClampedArray || t instanceof Int8Array || V(\"Cannot pass non-string to std::string\"), r && a) {\n                            var i = 0;\n                            for(e = 0; e < t.length; ++e){\n                                var o = t.charCodeAt(e);\n                                127 >= o ? i++ : 2047 >= o ? i += 2 : 55296 <= o && 57343 >= o ? (i += 4, ++e) : i += 3;\n                            }\n                            e = i;\n                        } else e = t.length;\n                        if (o = (i = n$(4 + e + 1)) + 4, _[i >> 2] = e, r && a) {\n                            if (a = o, o = e + 1, e = y, 0 < o) {\n                                o = a + o - 1;\n                                for(var s = 0; s < t.length; ++s){\n                                    var u = t.charCodeAt(s);\n                                    if (55296 <= u && 57343 >= u && (u = 65536 + ((1023 & u) << 10) | 1023 & t.charCodeAt(++s)), 127 >= u) {\n                                        if (a >= o) break;\n                                        e[a++] = u;\n                                    } else {\n                                        if (2047 >= u) {\n                                            if (a + 1 >= o) break;\n                                            e[a++] = 192 | u >> 6;\n                                        } else {\n                                            if (65535 >= u) {\n                                                if (a + 2 >= o) break;\n                                                e[a++] = 224 | u >> 12;\n                                            } else {\n                                                if (a + 3 >= o) break;\n                                                e[a++] = 240 | u >> 18, e[a++] = 128 | u >> 12 & 63;\n                                            }\n                                            e[a++] = 128 | u >> 6 & 63;\n                                        }\n                                        e[a++] = 128 | 63 & u;\n                                    }\n                                }\n                                e[a] = 0;\n                            }\n                        } else if (a) for(a = 0; a < e; ++a)255 < (s = t.charCodeAt(a)) && (nZ(o), V(\"String has UTF-16 code units that do not fit in 8 bits\")), y[o + a] = s;\n                        else for(a = 0; a < e; ++a)y[o + a] = t[a];\n                        return null !== n && n.push(nZ, i), i;\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: nc,\n                    U: function(n) {\n                        nZ(n);\n                    }\n                });\n            },\n            k: function(n, t, r) {\n                if (r = B(r), 2 === t) var e = nW, a = nU, i = nM, o = ()=>E, s = 1;\n                else 4 === t && (e = nF, a = nD, i = nk, o = ()=>_, s = 2);\n                nv(n, {\n                    name: r,\n                    fromWireType: function(n) {\n                        for(var r, a = _[n >> 2], i = o(), u = n + 4, c = 0; c <= a; ++c){\n                            var f = n + 4 + c * t;\n                            (c == a || 0 == i[f >> s]) && (u = e(u, f - u), void 0 === r ? r = u : r += \"\\x00\" + u, u = f + t);\n                        }\n                        return nZ(n), r;\n                    },\n                    toWireType: function(n, e) {\n                        \"string\" != typeof e && V(\"Cannot pass non-string to C++ string type \" + r);\n                        var o = i(e), u = n$(4 + o + t);\n                        return _[u >> 2] = o >> s, a(e, u + 4, o + t), null !== n && n.push(nZ, u), u;\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: nc,\n                    U: function(n) {\n                        nZ(n);\n                    }\n                });\n            },\n            m: function(n, t, r, e, a, i) {\n                ns[n] = {\n                    name: B(t),\n                    ea: nb(r, e),\n                    V: nb(a, i),\n                    ha: []\n                };\n            },\n            c: function(n, t, r, e, a, i, o, s, u, c) {\n                ns[n].ha.push({\n                    na: B(t),\n                    sa: r,\n                    qa: nb(e, a),\n                    ra: i,\n                    ya: o,\n                    xa: nb(s, u),\n                    za: c\n                });\n            },\n            C: function(n, t) {\n                nv(n, {\n                    ua: !0,\n                    name: t = B(t),\n                    argPackAdvance: 0,\n                    fromWireType: function() {},\n                    toWireType: function() {}\n                });\n            },\n            t: function(n, t, r, e, a) {\n                n = nG[n], t = j(t), r = nj(r);\n                var i = [];\n                return _[e >> 2] = G(i), n(t, r, i, a);\n            },\n            j: function(n, t, r, e) {\n                n = nG[n], n(t = j(t), r = nj(r), null, e);\n            },\n            f: nR,\n            g: function(n, t) {\n                var r, e, a = function(n, t) {\n                    for(var r = Array(n), e = 0; e < n; ++e)r[e] = K(_[t + 4 * e >> 2], \"parameter \" + e);\n                    return r;\n                }(n, t), i = a[0], o = nY[t = i.name + \"_$\" + a.slice(1).map(function(n) {\n                    return n.name;\n                }).join(\"_\") + \"$\"];\n                if (void 0 !== o) return o;\n                var s = Array(n - 1);\n                return r = (t, r, e, o)=>{\n                    for(var u = 0, c = 0; c < n - 1; ++c)s[c] = a[c + 1].readValueFromPointer(o + u), u += a[c + 1].argPackAdvance;\n                    for(c = 0, t = t[r].apply(t, s); c < n - 1; ++c)a[c + 1].la && a[c + 1].la(s[c]);\n                    if (!i.ua) return i.toWireType(e, t);\n                }, e = nG.length, nG.push(r), o = e, nY[t] = o;\n            },\n            r: function(n) {\n                4 < n && (M[n].fa += 1);\n            },\n            s: function(n) {\n                nu(j(n)), nR(n);\n            },\n            i: function() {\n                w(\"\");\n            },\n            x: function(n, t, r) {\n                y.copyWithin(n, t, t + r);\n            },\n            w: function(n) {\n                var t = y.length;\n                if (2147483648 < (n >>>= 0)) return !1;\n                for(var r = 1; 4 >= r; r *= 2){\n                    var e = t * (1 + .2 / r);\n                    e = Math.min(e, n + 100663296);\n                    var a = Math, i = a.min;\n                    e = Math.max(n, e), e += (65536 - e % 65536) % 65536;\n                    n: {\n                        var o = l.buffer;\n                        try {\n                            l.grow(i.call(a, 2147483648, e) - o.byteLength + 65535 >>> 16), v();\n                            var s = 1;\n                            break n;\n                        } catch (n) {}\n                        s = void 0;\n                    }\n                    if (s) return !0;\n                }\n                return !1;\n            },\n            z: function() {\n                return 52;\n            },\n            u: function() {\n                return 70;\n            },\n            y: function(n, t, r, e) {\n                for(var a = 0, i = 0; i < r; i++){\n                    var u = _[t >> 2], c = _[t + 4 >> 2];\n                    t += 8;\n                    for(var f = 0; f < c; f++){\n                        var l = y[u + f], h = nX[n];\n                        0 === l || 10 === l ? ((1 === n ? o : s)(p(h, 0)), h.length = 0) : h.push(l);\n                    }\n                    a += c;\n                }\n                return _[e >> 2] = a, 0;\n            }\n        };\n        !function() {\n            function n(n) {\n                u.asm = n.exports, l = u.asm.D, v(), A = u.asm.I, P.unshift(u.asm.E), 0 == --N && I && (n = I, I = null, n());\n            }\n            function t(t) {\n                n(t.instance);\n            }\n            function e(n) {\n                return (\"function\" == typeof fetch ? fetch(r, {\n                    credentials: \"same-origin\"\n                }).then(function(n) {\n                    if (!n.ok) throw \"failed to load wasm binary file at '\" + r + \"'\";\n                    return n.arrayBuffer();\n                }).catch(function() {\n                    return R();\n                }) : Promise.resolve().then(function() {\n                    return R();\n                })).then(function(n) {\n                    return WebAssembly.instantiate(n, a);\n                }).then(function(n) {\n                    return n;\n                }).then(n, function(n) {\n                    s(\"failed to asynchronously prepare wasm: \" + n), w(n);\n                });\n            }\n            var a = {\n                a: nx\n            };\n            if (N++, u.instantiateWasm) try {\n                return u.instantiateWasm(a, n);\n            } catch (n) {\n                s(\"Module.instantiateWasm callback failed with error: \" + n), f(n);\n            }\n            (\"function\" != typeof WebAssembly.instantiateStreaming || S() || \"function\" != typeof fetch ? e(t) : fetch(r, {\n                credentials: \"same-origin\"\n            }).then(function(n) {\n                return WebAssembly.instantiateStreaming(n, a).then(t, function(n) {\n                    return s(\"wasm streaming compile failed: \" + n), s(\"falling back to ArrayBuffer instantiation\"), e(t);\n                });\n            })).catch(f);\n        }();\n        var nz = u.___getTypeName = function() {\n            return (nz = u.___getTypeName = u.asm.F).apply(null, arguments);\n        };\n        function n$() {\n            return (n$ = u.asm.H).apply(null, arguments);\n        }\n        function nZ() {\n            return (nZ = u.asm.J).apply(null, arguments);\n        }\n        function nJ() {\n            0 < N || (C(O), 0 < N || e || (e = !0, u.calledRun = !0, h || (C(P), c(u), C(b))));\n        }\n        return u.__embind_initialize_bindings = function() {\n            return (u.__embind_initialize_bindings = u.asm.G).apply(null, arguments);\n        }, u.dynCall_jiji = function() {\n            return (u.dynCall_jiji = u.asm.K).apply(null, arguments);\n        }, I = function n() {\n            e || nJ(), e || (I = n);\n        }, nJ(), t.ready;\n    };\n})();\nasync function initYoga(t) {\n    let r = await yoga({\n        instantiateWasm (n, r) {\n            WebAssembly.instantiate(t, n).then((n)=>{\n                n instanceof WebAssembly.Instance ? r(n) : r(n.instance);\n            });\n        }\n    });\n    return (0,_wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.w)(r);\n}\nasync function initStreaming(t) {\n    let r = await yoga({\n        instantiateWasm (n, r) {\n            WebAssembly.instantiateStreaming(t, n).then(({ instance: n })=>{\n                r(n);\n            });\n        }\n    });\n    return (0,_wrapAsm_f766f97f_js__WEBPACK_IMPORTED_MODULE_0__.w)(r);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/yoga-wasm-web/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js":
/*!*************************************************************!*\
  !*** ./node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ OVERFLOW_HIDDEN),\n/* harmony export */   A: () => (/* binding */ ALIGN_AUTO),\n/* harmony export */   B: () => (/* binding */ FLEX_DIRECTION_ROW),\n/* harmony export */   C: () => (/* binding */ FLEX_DIRECTION_ROW_REVERSE),\n/* harmony export */   D: () => (/* binding */ DIMENSION_WIDTH),\n/* harmony export */   E: () => (/* binding */ EDGE_LEFT),\n/* harmony export */   F: () => (/* binding */ FLEX_DIRECTION_COLUMN),\n/* harmony export */   G: () => (/* binding */ GUTTER_COLUMN),\n/* harmony export */   H: () => (/* binding */ GUTTER_ROW),\n/* harmony export */   I: () => (/* binding */ GUTTER_ALL),\n/* harmony export */   J: () => (/* binding */ JUSTIFY_FLEX_START),\n/* harmony export */   K: () => (/* binding */ JUSTIFY_CENTER),\n/* harmony export */   L: () => (/* binding */ JUSTIFY_FLEX_END),\n/* harmony export */   M: () => (/* binding */ JUSTIFY_SPACE_BETWEEN),\n/* harmony export */   N: () => (/* binding */ JUSTIFY_SPACE_AROUND),\n/* harmony export */   O: () => (/* binding */ JUSTIFY_SPACE_EVENLY),\n/* harmony export */   P: () => (/* binding */ LOG_LEVEL_ERROR),\n/* harmony export */   Q: () => (/* binding */ LOG_LEVEL_WARN),\n/* harmony export */   R: () => (/* binding */ LOG_LEVEL_INFO),\n/* harmony export */   S: () => (/* binding */ LOG_LEVEL_DEBUG),\n/* harmony export */   T: () => (/* binding */ LOG_LEVEL_VERBOSE),\n/* harmony export */   U: () => (/* binding */ LOG_LEVEL_FATAL),\n/* harmony export */   V: () => (/* binding */ MEASURE_MODE_UNDEFINED),\n/* harmony export */   W: () => (/* binding */ MEASURE_MODE_EXACTLY),\n/* harmony export */   X: () => (/* binding */ MEASURE_MODE_AT_MOST),\n/* harmony export */   Y: () => (/* binding */ NODE_TYPE_DEFAULT),\n/* harmony export */   Z: () => (/* binding */ NODE_TYPE_TEXT),\n/* harmony export */   _: () => (/* binding */ OVERFLOW_VISIBLE),\n/* harmony export */   a: () => (/* binding */ ALIGN_FLEX_START),\n/* harmony export */   a0: () => (/* binding */ OVERFLOW_SCROLL),\n/* harmony export */   a1: () => (/* binding */ POSITION_TYPE_STATIC),\n/* harmony export */   a2: () => (/* binding */ POSITION_TYPE_RELATIVE),\n/* harmony export */   a3: () => (/* binding */ POSITION_TYPE_ABSOLUTE),\n/* harmony export */   a4: () => (/* binding */ PRINT_OPTIONS_LAYOUT),\n/* harmony export */   a5: () => (/* binding */ PRINT_OPTIONS_STYLE),\n/* harmony export */   a6: () => (/* binding */ PRINT_OPTIONS_CHILDREN),\n/* harmony export */   a7: () => (/* binding */ UNIT_UNDEFINED),\n/* harmony export */   a8: () => (/* binding */ UNIT_POINT),\n/* harmony export */   a9: () => (/* binding */ UNIT_PERCENT),\n/* harmony export */   aa: () => (/* binding */ UNIT_AUTO),\n/* harmony export */   ab: () => (/* binding */ WRAP_NO_WRAP),\n/* harmony export */   ac: () => (/* binding */ WRAP_WRAP),\n/* harmony export */   ad: () => (/* binding */ WRAP_WRAP_REVERSE),\n/* harmony export */   b: () => (/* binding */ ALIGN_CENTER),\n/* harmony export */   c: () => (/* binding */ ALIGN_FLEX_END),\n/* harmony export */   d: () => (/* binding */ ALIGN_STRETCH),\n/* harmony export */   e: () => (/* binding */ ALIGN_BASELINE),\n/* harmony export */   f: () => (/* binding */ ALIGN_SPACE_BETWEEN),\n/* harmony export */   g: () => (/* binding */ ALIGN_SPACE_AROUND),\n/* harmony export */   h: () => (/* binding */ DIMENSION_HEIGHT),\n/* harmony export */   i: () => (/* binding */ DIRECTION_INHERIT),\n/* harmony export */   j: () => (/* binding */ DIRECTION_LTR),\n/* harmony export */   k: () => (/* binding */ DIRECTION_RTL),\n/* harmony export */   l: () => (/* binding */ DISPLAY_FLEX),\n/* harmony export */   m: () => (/* binding */ DISPLAY_NONE),\n/* harmony export */   n: () => (/* binding */ EDGE_TOP),\n/* harmony export */   o: () => (/* binding */ EDGE_RIGHT),\n/* harmony export */   p: () => (/* binding */ EDGE_BOTTOM),\n/* harmony export */   q: () => (/* binding */ EDGE_START),\n/* harmony export */   r: () => (/* binding */ EDGE_END),\n/* harmony export */   s: () => (/* binding */ EDGE_HORIZONTAL),\n/* harmony export */   t: () => (/* binding */ EDGE_VERTICAL),\n/* harmony export */   u: () => (/* binding */ EDGE_ALL),\n/* harmony export */   v: () => (/* binding */ EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS),\n/* harmony export */   w: () => (/* binding */ wrapAsm),\n/* harmony export */   x: () => (/* binding */ EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE),\n/* harmony export */   y: () => (/* binding */ EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN),\n/* harmony export */   z: () => (/* binding */ FLEX_DIRECTION_COLUMN_REVERSE)\n/* harmony export */ });\nvar YGEnums = {}, ALIGN_AUTO = YGEnums.ALIGN_AUTO = 0, ALIGN_FLEX_START = YGEnums.ALIGN_FLEX_START = 1, ALIGN_CENTER = YGEnums.ALIGN_CENTER = 2, ALIGN_FLEX_END = YGEnums.ALIGN_FLEX_END = 3, ALIGN_STRETCH = YGEnums.ALIGN_STRETCH = 4, ALIGN_BASELINE = YGEnums.ALIGN_BASELINE = 5, ALIGN_SPACE_BETWEEN = YGEnums.ALIGN_SPACE_BETWEEN = 6, ALIGN_SPACE_AROUND = YGEnums.ALIGN_SPACE_AROUND = 7, DIMENSION_WIDTH = YGEnums.DIMENSION_WIDTH = 0, DIMENSION_HEIGHT = YGEnums.DIMENSION_HEIGHT = 1, DIRECTION_INHERIT = YGEnums.DIRECTION_INHERIT = 0, DIRECTION_LTR = YGEnums.DIRECTION_LTR = 1, DIRECTION_RTL = YGEnums.DIRECTION_RTL = 2, DISPLAY_FLEX = YGEnums.DISPLAY_FLEX = 0, DISPLAY_NONE = YGEnums.DISPLAY_NONE = 1, EDGE_LEFT = YGEnums.EDGE_LEFT = 0, EDGE_TOP = YGEnums.EDGE_TOP = 1, EDGE_RIGHT = YGEnums.EDGE_RIGHT = 2, EDGE_BOTTOM = YGEnums.EDGE_BOTTOM = 3, EDGE_START = YGEnums.EDGE_START = 4, EDGE_END = YGEnums.EDGE_END = 5, EDGE_HORIZONTAL = YGEnums.EDGE_HORIZONTAL = 6, EDGE_VERTICAL = YGEnums.EDGE_VERTICAL = 7, EDGE_ALL = YGEnums.EDGE_ALL = 8, EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = YGEnums.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = 0, EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = YGEnums.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = 1, EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = YGEnums.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = 2, FLEX_DIRECTION_COLUMN = YGEnums.FLEX_DIRECTION_COLUMN = 0, FLEX_DIRECTION_COLUMN_REVERSE = YGEnums.FLEX_DIRECTION_COLUMN_REVERSE = 1, FLEX_DIRECTION_ROW = YGEnums.FLEX_DIRECTION_ROW = 2, FLEX_DIRECTION_ROW_REVERSE = YGEnums.FLEX_DIRECTION_ROW_REVERSE = 3, GUTTER_COLUMN = YGEnums.GUTTER_COLUMN = 0, GUTTER_ROW = YGEnums.GUTTER_ROW = 1, GUTTER_ALL = YGEnums.GUTTER_ALL = 2, JUSTIFY_FLEX_START = YGEnums.JUSTIFY_FLEX_START = 0, JUSTIFY_CENTER = YGEnums.JUSTIFY_CENTER = 1, JUSTIFY_FLEX_END = YGEnums.JUSTIFY_FLEX_END = 2, JUSTIFY_SPACE_BETWEEN = YGEnums.JUSTIFY_SPACE_BETWEEN = 3, JUSTIFY_SPACE_AROUND = YGEnums.JUSTIFY_SPACE_AROUND = 4, JUSTIFY_SPACE_EVENLY = YGEnums.JUSTIFY_SPACE_EVENLY = 5, LOG_LEVEL_ERROR = YGEnums.LOG_LEVEL_ERROR = 0, LOG_LEVEL_WARN = YGEnums.LOG_LEVEL_WARN = 1, LOG_LEVEL_INFO = YGEnums.LOG_LEVEL_INFO = 2, LOG_LEVEL_DEBUG = YGEnums.LOG_LEVEL_DEBUG = 3, LOG_LEVEL_VERBOSE = YGEnums.LOG_LEVEL_VERBOSE = 4, LOG_LEVEL_FATAL = YGEnums.LOG_LEVEL_FATAL = 5, MEASURE_MODE_UNDEFINED = YGEnums.MEASURE_MODE_UNDEFINED = 0, MEASURE_MODE_EXACTLY = YGEnums.MEASURE_MODE_EXACTLY = 1, MEASURE_MODE_AT_MOST = YGEnums.MEASURE_MODE_AT_MOST = 2, NODE_TYPE_DEFAULT = YGEnums.NODE_TYPE_DEFAULT = 0, NODE_TYPE_TEXT = YGEnums.NODE_TYPE_TEXT = 1, OVERFLOW_VISIBLE = YGEnums.OVERFLOW_VISIBLE = 0, OVERFLOW_HIDDEN = YGEnums.OVERFLOW_HIDDEN = 1, OVERFLOW_SCROLL = YGEnums.OVERFLOW_SCROLL = 2, POSITION_TYPE_STATIC = YGEnums.POSITION_TYPE_STATIC = 0, POSITION_TYPE_RELATIVE = YGEnums.POSITION_TYPE_RELATIVE = 1, POSITION_TYPE_ABSOLUTE = YGEnums.POSITION_TYPE_ABSOLUTE = 2, PRINT_OPTIONS_LAYOUT = YGEnums.PRINT_OPTIONS_LAYOUT = 1, PRINT_OPTIONS_STYLE = YGEnums.PRINT_OPTIONS_STYLE = 2, PRINT_OPTIONS_CHILDREN = YGEnums.PRINT_OPTIONS_CHILDREN = 4, UNIT_UNDEFINED = YGEnums.UNIT_UNDEFINED = 0, UNIT_POINT = YGEnums.UNIT_POINT = 1, UNIT_PERCENT = YGEnums.UNIT_PERCENT = 2, UNIT_AUTO = YGEnums.UNIT_AUTO = 3, WRAP_NO_WRAP = YGEnums.WRAP_NO_WRAP = 0, WRAP_WRAP = YGEnums.WRAP_WRAP = 1, WRAP_WRAP_REVERSE = YGEnums.WRAP_WRAP_REVERSE = 2;\nlet CONSTANTS = YGEnums;\nvar wrapAsm = (E)=>{\n    function _(E, _, T) {\n        let N = E[_];\n        E[_] = function(...E) {\n            return T.call(this, N, ...E);\n        };\n    }\n    for (let T of [\n        \"setPosition\",\n        \"setMargin\",\n        \"setFlexBasis\",\n        \"setWidth\",\n        \"setHeight\",\n        \"setMinWidth\",\n        \"setMinHeight\",\n        \"setMaxWidth\",\n        \"setMaxHeight\",\n        \"setPadding\"\n    ]){\n        let N = {\n            [YGEnums.UNIT_POINT]: E.Node.prototype[T],\n            [YGEnums.UNIT_PERCENT]: E.Node.prototype[`${T}Percent`],\n            [YGEnums.UNIT_AUTO]: E.Node.prototype[`${T}Auto`]\n        };\n        _(E.Node.prototype, T, function(E, ..._) {\n            let I, L;\n            let O = _.pop();\n            if (\"auto\" === O) I = YGEnums.UNIT_AUTO, L = void 0;\n            else if (\"object\" == typeof O) I = O.unit, L = O.valueOf();\n            else if (I = \"string\" == typeof O && O.endsWith(\"%\") ? YGEnums.UNIT_PERCENT : YGEnums.UNIT_POINT, L = parseFloat(O), !Number.isNaN(O) && Number.isNaN(L)) throw Error(`Invalid value ${O} for ${T}`);\n            if (!N[I]) throw Error(`Failed to execute \"${T}\": Unsupported unit '${O}'`);\n            return void 0 !== L ? N[I].call(this, ..._, L) : N[I].call(this, ..._);\n        });\n    }\n    function T(_) {\n        return E.MeasureCallback.implement({\n            measure: (...E)=>{\n                let { width: T, height: N } = _(...E);\n                return {\n                    width: T ?? NaN,\n                    height: N ?? NaN\n                };\n            }\n        });\n    }\n    function N(_) {\n        return E.DirtiedCallback.implement({\n            dirtied: _\n        });\n    }\n    return _(E.Node.prototype, \"setMeasureFunc\", function(E, _) {\n        return _ ? E.call(this, T(_)) : this.unsetMeasureFunc();\n    }), _(E.Node.prototype, \"setDirtiedFunc\", function(E, _) {\n        E.call(this, N(_));\n    }), _(E.Config.prototype, \"free\", function() {\n        E.Config.destroy(this);\n    }), _(E.Node, \"create\", (_, T)=>T ? E.Node.createWithConfig(T) : E.Node.createDefault()), _(E.Node.prototype, \"free\", function() {\n        E.Node.destroy(this);\n    }), _(E.Node.prototype, \"freeRecursive\", function() {\n        for(let E = 0, _ = this.getChildCount(); E < _; ++E)this.getChild(0).freeRecursive();\n        this.free();\n    }), _(E.Node.prototype, \"calculateLayout\", function(E, _ = NaN, T = NaN, N = YGEnums.DIRECTION_LTR) {\n        return E.call(this, _, T, N);\n    }), {\n        Config: E.Config,\n        Node: E.Node,\n        ...YGEnums\n    };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js\n");

/***/ })

};
;