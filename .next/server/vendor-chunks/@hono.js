"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@hono";
exports.ids = ["vendor-chunks/@hono"];
exports.modules = {

/***/ "(rsc)/./node_modules/@hono/valibot-validator/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@hono/valibot-validator/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   vValidator: () => (/* binding */ vValidator)\n/* harmony export */ });\n/* harmony import */ var hono_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hono/validator */ \"(rsc)/./node_modules/hono/dist/validator/index.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! valibot */ \"(rsc)/./node_modules/valibot/dist/index.js\");\n\n\nconst vValidator = (target, schema, hook)=>(0,hono_validator__WEBPACK_IMPORTED_MODULE_0__.validator)(target, (value, c)=>{\n        const result = (0,valibot__WEBPACK_IMPORTED_MODULE_1__.safeParse)(schema, value);\n        if (hook) {\n            const hookResult = hook(result, c);\n            if (hookResult instanceof Response || hookResult instanceof Promise) {\n                return hookResult;\n            }\n        }\n        if (!result.success) {\n            return c.json(result, 400);\n        }\n        const data = result.output;\n        return data;\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGhvbm8vdmFsaWJvdC12YWxpZGF0b3IvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ1A7QUFDN0IsTUFBTUUsYUFBYSxDQUFDQyxRQUFRQyxRQUFRQyxPQUFTTCx5REFBU0EsQ0FBQ0csUUFBUSxDQUFDRyxPQUFPQztRQUMxRSxNQUFNQyxTQUFTUCxrREFBU0EsQ0FBQ0csUUFBUUU7UUFDakMsSUFBSUQsTUFBTTtZQUNOLE1BQU1JLGFBQWFKLEtBQUtHLFFBQVFEO1lBQ2hDLElBQUlFLHNCQUFzQkMsWUFBWUQsc0JBQXNCRSxTQUFTO2dCQUNqRSxPQUFPRjtZQUNYO1FBQ0o7UUFDQSxJQUFJLENBQUNELE9BQU9JLE9BQU8sRUFBRTtZQUNqQixPQUFPTCxFQUFFTSxJQUFJLENBQUNMLFFBQVE7UUFDMUI7UUFDQSxNQUFNTSxPQUFPTixPQUFPTyxNQUFNO1FBQzFCLE9BQU9EO0lBQ1gsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3J1bWJsZS1yYWZmbGUtZnJhbWUvLi9ub2RlX21vZHVsZXMvQGhvbm8vdmFsaWJvdC12YWxpZGF0b3IvZGlzdC9lc20vaW5kZXguanM/M2NkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2YWxpZGF0b3IgfSBmcm9tICdob25vL3ZhbGlkYXRvcic7XG5pbXBvcnQgeyBzYWZlUGFyc2UgfSBmcm9tICd2YWxpYm90JztcbmV4cG9ydCBjb25zdCB2VmFsaWRhdG9yID0gKHRhcmdldCwgc2NoZW1hLCBob29rKSA9PiB2YWxpZGF0b3IodGFyZ2V0LCAodmFsdWUsIGMpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBzYWZlUGFyc2Uoc2NoZW1hLCB2YWx1ZSk7XG4gICAgaWYgKGhvb2spIHtcbiAgICAgICAgY29uc3QgaG9va1Jlc3VsdCA9IGhvb2socmVzdWx0LCBjKTtcbiAgICAgICAgaWYgKGhvb2tSZXN1bHQgaW5zdGFuY2VvZiBSZXNwb25zZSB8fCBob29rUmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgcmV0dXJuIGhvb2tSZXN1bHQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKCFyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICByZXR1cm4gYy5qc29uKHJlc3VsdCwgNDAwKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IHJlc3VsdC5vdXRwdXQ7XG4gICAgcmV0dXJuIGRhdGE7XG59KTtcbiJdLCJuYW1lcyI6WyJ2YWxpZGF0b3IiLCJzYWZlUGFyc2UiLCJ2VmFsaWRhdG9yIiwidGFyZ2V0Iiwic2NoZW1hIiwiaG9vayIsInZhbHVlIiwiYyIsInJlc3VsdCIsImhvb2tSZXN1bHQiLCJSZXNwb25zZSIsIlByb21pc2UiLCJzdWNjZXNzIiwianNvbiIsImRhdGEiLCJvdXRwdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@hono/valibot-validator/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@hono/node-server/dist/serve-static.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@hono/node-server/dist/serve-static.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serveStatic: () => (/* binding */ serveStatic)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n// src/serve-static.ts\n\n// node_modules/hono/dist/utils/filepath.js\nvar getFilePath = (options)=>{\n    let filename = options.filename;\n    if (/(?:^|[\\/\\\\])\\.\\.(?:$|[\\/\\\\])/.test(filename)) {\n        return;\n    }\n    let root = options.root || \"\";\n    const defaultDocument = options.defaultDocument || \"index.html\";\n    if (filename.endsWith(\"/\")) {\n        filename = filename.concat(defaultDocument);\n    } else if (!filename.match(/\\.[a-zA-Z0-9]+$/)) {\n        filename = filename.concat(\"/\" + defaultDocument);\n    }\n    filename = filename.replace(/^\\.?[\\/\\\\]/, \"\");\n    filename = filename.replace(/\\\\/, \"/\");\n    root = root.replace(/\\/$/, \"\");\n    let path = root ? root + \"/\" + filename : filename;\n    path = path.replace(/^\\.?\\//, \"\");\n    return path;\n};\n// node_modules/hono/dist/utils/mime.js\nvar getMimeType = (filename, mimes = baseMimes)=>{\n    const regexp = /\\.([a-zA-Z0-9]+?)$/;\n    const match = filename.match(regexp);\n    if (!match) {\n        return;\n    }\n    let mimeType = mimes[match[1]];\n    if (mimeType && mimeType.startsWith(\"text\") || mimeType === \"application/json\") {\n        mimeType += \"; charset=utf-8\";\n    }\n    return mimeType;\n};\nvar baseMimes = {\n    aac: \"audio/aac\",\n    avi: \"video/x-msvideo\",\n    avif: \"image/avif\",\n    av1: \"video/av1\",\n    bin: \"application/octet-stream\",\n    bmp: \"image/bmp\",\n    css: \"text/css\",\n    csv: \"text/csv\",\n    eot: \"application/vnd.ms-fontobject\",\n    epub: \"application/epub+zip\",\n    gif: \"image/gif\",\n    gz: \"application/gzip\",\n    htm: \"text/html\",\n    html: \"text/html\",\n    ico: \"image/x-icon\",\n    ics: \"text/calendar\",\n    jpeg: \"image/jpeg\",\n    jpg: \"image/jpeg\",\n    js: \"text/javascript\",\n    json: \"application/json\",\n    jsonld: \"application/ld+json\",\n    map: \"application/json\",\n    mid: \"audio/x-midi\",\n    midi: \"audio/x-midi\",\n    mjs: \"text/javascript\",\n    mp3: \"audio/mpeg\",\n    mp4: \"video/mp4\",\n    mpeg: \"video/mpeg\",\n    oga: \"audio/ogg\",\n    ogv: \"video/ogg\",\n    ogx: \"application/ogg\",\n    opus: \"audio/opus\",\n    otf: \"font/otf\",\n    pdf: \"application/pdf\",\n    png: \"image/png\",\n    rtf: \"application/rtf\",\n    svg: \"image/svg+xml\",\n    tif: \"image/tiff\",\n    tiff: \"image/tiff\",\n    ts: \"video/mp2t\",\n    ttf: \"font/ttf\",\n    txt: \"text/plain\",\n    wasm: \"application/wasm\",\n    webm: \"video/webm\",\n    weba: \"audio/webm\",\n    webp: \"image/webp\",\n    woff: \"font/woff\",\n    woff2: \"font/woff2\",\n    xhtml: \"application/xhtml+xml\",\n    xml: \"application/xml\",\n    zip: \"application/zip\",\n    \"3gp\": \"video/3gpp\",\n    \"3g2\": \"video/3gpp2\",\n    gltf: \"model/gltf+json\",\n    glb: \"model/gltf-binary\"\n};\n// src/serve-static.ts\nvar createStreamBody = (stream)=>{\n    const body = new ReadableStream({\n        start (controller) {\n            stream.on(\"data\", (chunk)=>{\n                controller.enqueue(chunk);\n            });\n            stream.on(\"end\", ()=>{\n                controller.close();\n            });\n        },\n        cancel () {\n            stream.destroy();\n        }\n    });\n    return body;\n};\nvar serveStatic = (options = {\n    root: \"\"\n})=>{\n    return async (c, next)=>{\n        if (c.finalized) {\n            return next();\n        }\n        const url = new URL(c.req.url);\n        const filename = options.path ?? decodeURIComponent(url.pathname);\n        let path = getFilePath({\n            filename: options.rewriteRequestPath ? options.rewriteRequestPath(filename) : filename,\n            root: options.root,\n            defaultDocument: options.index ?? \"index.html\"\n        });\n        if (!path) {\n            return next();\n        }\n        path = `./${path}`;\n        if (!(0,fs__WEBPACK_IMPORTED_MODULE_0__.existsSync)(path)) {\n            await options.onNotFound?.(path, c);\n            return next();\n        }\n        const mimeType = getMimeType(path);\n        if (mimeType) {\n            c.header(\"Content-Type\", mimeType);\n        }\n        const stat = (0,fs__WEBPACK_IMPORTED_MODULE_0__.lstatSync)(path);\n        const size = stat.size;\n        if (c.req.method == \"HEAD\" || c.req.method == \"OPTIONS\") {\n            c.header(\"Content-Length\", size.toString());\n            c.status(200);\n            return c.body(null);\n        }\n        const range = c.req.header(\"range\") || \"\";\n        if (!range) {\n            c.header(\"Content-Length\", size.toString());\n            return c.body(createStreamBody((0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(path)), 200);\n        }\n        c.header(\"Accept-Ranges\", \"bytes\");\n        c.header(\"Date\", stat.birthtime.toUTCString());\n        const parts = range.replace(/bytes=/, \"\").split(\"-\", 2);\n        const start = parts[0] ? parseInt(parts[0], 10) : 0;\n        let end = parts[1] ? parseInt(parts[1], 10) : stat.size - 1;\n        if (size < end - start + 1) {\n            end = size - 1;\n        }\n        const chunksize = end - start + 1;\n        const stream = (0,fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream)(path, {\n            start,\n            end\n        });\n        c.header(\"Content-Length\", chunksize.toString());\n        c.header(\"Content-Range\", `bytes ${start}-${end}/${stat.size}`);\n        return c.body(createStreamBody(stream), 206);\n    };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@hono/node-server/dist/serve-static.mjs\n");

/***/ })

};
;